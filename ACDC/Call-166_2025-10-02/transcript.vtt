WEBVTT

1
00:00:30.060 --> 00:00:30.770
saulius: Hello.

2
00:00:34.600 --> 00:00:36.470
Justin Traglia: Hey, Silence, how's it going?

3
00:00:37.220 --> 00:00:46.280
saulius: Good. So, we can use this time to talk about weather, I guess.

4
00:00:46.780 --> 00:00:50.390
saulius: Yeah, all good here, and you.

5
00:00:50.950 --> 00:00:51.970
Justin Traglia: Yeah.

6
00:00:52.800 --> 00:00:54.209
Justin Traglia: All good here?

7
00:00:54.610 --> 00:00:56.319
Justin Traglia: It's the morning time for me.

8
00:00:56.820 --> 00:00:59.160
saulius: Oh, you are in US, right?

9
00:00:59.540 --> 00:01:02.209
Justin Traglia: Correct. I'm in Austin, Texas.

10
00:01:02.210 --> 00:01:05.810
saulius: Yeah, is it very early? Yeah, what is it, Boston…

11
00:01:05.970 --> 00:01:08.110
Justin Traglia: It's about to be 9am, so…

12
00:01:08.110 --> 00:01:12.509
saulius: Oh, it's a good… it's very early for a developer.

13
00:01:12.510 --> 00:01:15.230
Justin Traglia: Yeah, well… Maybe.

14
00:01:16.370 --> 00:01:19.669
Justin Traglia: I'm a pretty… I wake up pretty early, because my wife is a teacher.

15
00:01:20.240 --> 00:01:21.329
saulius: I wake up at the same time.

16
00:01:21.330 --> 00:01:22.100
Justin Traglia: is her.

17
00:01:22.250 --> 00:01:24.779
saulius: So it's like a 7am or so?

18
00:01:25.270 --> 00:01:28.369
Justin Traglia: I wake up at 6, I'll generally start working around 7.

19
00:01:28.660 --> 00:01:46.869
saulius: Okay, oh, that's, actually, actually, for myself, it's a bit similar as, like, my daughter started to go to the first class in the secondary school, and yeah, so this is, like, a first month where I get up at 7.

20
00:01:46.970 --> 00:01:51.830
saulius: Last year, it was 9. Well, that's exciting.

21
00:01:52.010 --> 00:01:57.119
saulius: Well, yeah, it's, and to be honest, I find that even,

22
00:01:57.710 --> 00:02:06.010
saulius: better for the… you know, because you go to the bed earlier, and, you know, it's, it's kinda…

23
00:02:06.670 --> 00:02:10.270
saulius: At least for myself, it's good to get up early in the morning.

24
00:02:10.780 --> 00:02:14.510
Justin Traglia: Yeah, I agree. I think I feel… more productive.

25
00:02:14.760 --> 00:02:18.430
saulius: Yeah, exactly, exactly, so… so, that's good.

26
00:02:18.550 --> 00:02:29.289
saulius: Okay, we should not… chit-chat anymore. Sorry, guys, for taking the error.

27
00:03:47.550 --> 00:03:50.800
kev: Testing, testing, can you guys hear me?

28
00:03:51.310 --> 00:03:53.060
Gary Schulte: Nope.

29
00:03:53.070 --> 00:03:55.320
kev: Yeah, cool.

30
00:06:08.780 --> 00:06:15.130
stokes: Hello. I think there was a mix-up with the Zoom links today? Oh wait, okay.

31
00:06:16.230 --> 00:06:19.409
stokes: And then… I think we had a king on the other one?

32
00:06:20.040 --> 00:06:21.500
stokes: Let me start…

33
00:06:21.500 --> 00:06:21.980
Josh Davis: Yeah, of course.

34
00:06:21.980 --> 00:06:22.839
stokes: So, you know.

35
00:06:22.840 --> 00:06:25.829
Josh Davis: Our room, passing people off to this room.

36
00:06:26.140 --> 00:06:27.800
stokes: Okay, great.

37
00:06:29.120 --> 00:06:31.060
stokes: Hmm.

38
00:06:35.950 --> 00:06:36.750
stokes: Okay.

39
00:06:38.020 --> 00:06:42.920
stokes: Nixar, you're in both rooms? Yeah, but I'm wondering if…

40
00:06:43.050 --> 00:06:44.719
stokes: More people will join that link.

41
00:06:45.930 --> 00:06:51.440
stokes: Because it's on a calendar, invite.

42
00:06:54.720 --> 00:06:56.920
saulius: So, is, is this right?

43
00:06:58.380 --> 00:07:04.539
stokes: This is what we're gonna use today. This is not the link I would have used.

44
00:07:05.350 --> 00:07:05.949
stokes: I will…

45
00:07:05.950 --> 00:07:11.089
nixo: I'll go over to that… I'll go over to that other, meeting and sit in there and tell people to go over here.

46
00:07:11.490 --> 00:07:15.599
stokes: I think that's okay. I think… We'll just go ahead.

47
00:07:16.270 --> 00:07:19.820
stokes: Yeah, I think it's something where the ACD bot, like Trent was saying.

48
00:07:20.410 --> 00:07:25.120
stokes: If I had to guess, ACDbot is, like, getting a new Zoom room every time.

49
00:07:25.760 --> 00:07:27.780
stokes: And we usually just use the same one.

50
00:07:29.000 --> 00:07:30.880
stokes: But, in any case…

51
00:07:31.950 --> 00:07:41.450
stokes: Looks like people just clicked the link here on Discord, and we have enough people here, so I think we should go ahead and get started.

52
00:07:42.320 --> 00:07:45.989
stokes: Let's see… Josh, are you helping with the stream today?

53
00:07:47.790 --> 00:07:49.189
Josh Davis: Yep, go ahead, you're live.

54
00:07:49.870 --> 00:07:51.170
stokes: Okay, thank you.

55
00:07:52.100 --> 00:08:01.749
stokes: Okay, everyone, let's see, let me find the agenda… so… This is ACDC, number 166.

56
00:08:01.940 --> 00:08:06.479
stokes: It's issue 1740 in the PM repo.

57
00:08:07.110 --> 00:08:08.620
stokes: Here's a link here.

58
00:08:09.070 --> 00:08:16.839
stokes: And… yeah, on the agenda today, pretty straightforward, some Osaka things, some Web Amsterdam things, and then a few…

59
00:08:17.350 --> 00:08:21.950
stokes: other things around different EIPs and the process.

60
00:08:22.290 --> 00:08:39.630
stokes: So let's go ahead and jump into Fusaka. I thought I'd ask if there are any DevNet updates. I know there was some chatter on Discord across the week to this effect. There might not be anything. We did have the Heleshky fork, which we'll talk about next.

61
00:08:41.289 --> 00:08:44.889
stokes: Anything on the DevNets that we should discuss?

62
00:08:45.740 --> 00:08:57.389
Parithosh Jayanthi: Yeah, we tried non-finality on Fusaka DevNet 3, and we had non-finality for about 2-ish days, and then healed the network again, and it's been finalizing since.

63
00:08:57.950 --> 00:09:03.099
Parithosh Jayanthi: I'm not sure if Barnabis had any other… Updates to add?

64
00:09:07.470 --> 00:09:08.520
stokes: He says no.

65
00:09:08.760 --> 00:09:10.169
stokes: Okay, cool.

66
00:09:11.530 --> 00:09:22.430
stokes: then let's move to Aleshki. So we had the fork activation, about a few days ago, and yeah, as far as I can see, it went pretty well. There was…

67
00:09:22.690 --> 00:09:27.900
stokes: A little turbulence, which I think at this point is to be expected with testnuts.

68
00:09:28.010 --> 00:09:31.540
stokes: Yeah, again, Perry A Barnabas, any updates, there?

69
00:09:32.340 --> 00:09:35.099
stokes: Or anyone else want to add anything about Halushki?

70
00:09:36.070 --> 00:09:38.490
stokes: Do we feel like it went successfully?

71
00:09:41.490 --> 00:09:57.569
Parithosh Jayanthi: Yeah, so we had the DevNet fork yesterday, and we've been, keeping an eye on it. There was one incident halfway through the… so, sorry, so let me start from the beginning. As soon as the fork was done, we did notice a participation drop.

72
00:09:57.590 --> 00:10:09.709
Parithosh Jayanthi: But all of the participation drop was associated with, missed updates, so once the updates were applied, we were able to hit back almost the same as, before the fall.

73
00:10:09.760 --> 00:10:19.720
Parithosh Jayanthi: We're still tracking around the missing diff, but later in the day, we did notice one scenario where we're still figuring out what's necessarily going on.

74
00:10:19.720 --> 00:10:34.999
Parithosh Jayanthi: But there was an unexplained drop in participation rates. We went below 66%, and then it came back up. Sam's posted a few theories, mainly to do with, either missing or late blocks, and also associated with,

75
00:10:35.020 --> 00:10:46.820
Parithosh Jayanthi: spikes in CPU usage, likely related to spam or kind of spamming in relative, like, it has ticks to when it's spamming stuff.

76
00:10:46.820 --> 00:11:02.669
Parithosh Jayanthi: It could just be a combination of all of these factors. Also, most people tend to have something like 10,000 validator keys per beacon node on Holzky, so it could just be a combination of everything, but we still don't have a…

77
00:11:02.670 --> 00:11:08.469
Parithosh Jayanthi: Concrete answer for, why the participation rate went down, or how it recovered, either.

78
00:11:09.700 --> 00:11:16.659
Parithosh Jayanthi: But since then, it's been… we haven't noticed any, any big issues. So, yeah, like Bohus says, there were a bunch of hiccups.

79
00:11:17.770 --> 00:11:18.420
stokes: Yeah.

80
00:11:18.870 --> 00:11:23.960
stokes: When you were saying updates, you mean, like, just people updating to new versions of the client?

81
00:11:24.150 --> 00:11:25.950
Parithosh Jayanthi: Yeah, you're right. Yeah.

82
00:11:25.950 --> 00:11:26.590
stokes: Okay.

83
00:11:27.650 --> 00:11:31.130
stokes: And yeah, there could be a number of reasons for this.

84
00:11:31.620 --> 00:11:34.120
stokes: Yeah. So…

85
00:11:34.710 --> 00:11:39.809
stokes: it was good to see that, and yeah, it looks like it's pretty good so far. So, I guess we'll keep an eye on it.

86
00:11:40.510 --> 00:11:47.579
stokes: The next thing there to call out is… the first VPO scheduled, which is…

87
00:11:48.210 --> 00:11:54.609
stokes: Let me just double check, because I think I actually have the date wrong on the calendar. So yeah, that's, on…

88
00:11:55.730 --> 00:11:59.340
stokes: Monday… Unless this is Tuesday UTC.

89
00:12:00.040 --> 00:12:05.279
stokes: anyway, let me… let me not confuse people.

90
00:12:05.620 --> 00:12:11.450
stokes: But there's one in a few days, yeah, again, check the blog post if you need the canonical time.

91
00:12:11.590 --> 00:12:13.740
stokes: Or any of the client configuration.

92
00:12:14.150 --> 00:12:16.040
stokes: So, have that on the radar.

93
00:12:16.180 --> 00:12:17.909
stokes: And we'll see how that goes.

94
00:12:18.500 --> 00:12:22.600
stokes: But yeah, I think all end, we're moving along pretty well.

95
00:12:23.860 --> 00:12:27.809
stokes: So, anything else on Haleschi anyone wants to discuss today?

96
00:12:30.470 --> 00:12:31.110
Ameziane Hamlat: Yep.

97
00:12:32.680 --> 00:12:33.630
Parithosh Jayanthi: Go ahead.

98
00:12:34.240 --> 00:12:36.950
Ameziane Hamlat: Yes, sorry, I was going to say,

99
00:12:37.430 --> 00:12:44.899
Ameziane Hamlat: I have noticed a drop in the network activity on on peso validators, on HODI.

100
00:12:46.400 --> 00:12:56.909
Ameziane Hamlat: And I guess that was expected, and I wonder if there are any other metrics. I think it is interesting to see, like, the drop in the network usage.

101
00:12:57.070 --> 00:13:00.840
Ameziane Hamlat: Especially just before the next BPO.

102
00:13:02.900 --> 00:13:04.780
Ameziane Hamlat: If we have other metrics related to that.

103
00:13:12.420 --> 00:13:15.400
Parithosh Jayanthi: Is this for the whole Ski network, or the Houdini network?

104
00:13:15.500 --> 00:13:17.470
Ameziane Hamlat: Sorry, holesky, holesky.

105
00:13:17.750 --> 00:13:21.239
Ameziane Hamlat: Like, the… after the fork.

106
00:13:22.220 --> 00:13:33.839
Parithosh Jayanthi: Okay, yeah, maybe we can just chat about that on, on our group, and then we'll try and see what we have associated to the bzov validators, and see where we can help.

107
00:13:36.930 --> 00:13:43.399
Ameziane Hamlat: No, it is not an issue. It, it, it is, it is more, an observation,

108
00:13:43.720 --> 00:13:51.710
Ameziane Hamlat: That, in my opinion, was expected, like the drop in activity, in network activity related to PERDAS.

109
00:13:52.060 --> 00:13:56.080
Ameziane Hamlat: So that was something that I noticed on the…

110
00:13:56.450 --> 00:14:01.240
Ameziane Hamlat: like, on the… on base validators, and I was just wondering if…

111
00:14:01.580 --> 00:14:11.690
Ameziane Hamlat: If that was the case, and if we have, like, numbers, I thought it was interesting to check… to check that specific metric, just before

112
00:14:12.150 --> 00:14:13.810
Ameziane Hamlat: The next BP rule?

113
00:14:19.590 --> 00:14:21.739
stokes: You just mean, like, total bandwidth usage?

114
00:14:22.150 --> 00:14:22.980
Ameziane Hamlat: Yes.

115
00:14:23.350 --> 00:14:23.930
stokes: Yeah.

116
00:14:27.610 --> 00:14:31.240
Barnabas: Did you notice the song on Super Notes, or also on full notes?

117
00:14:32.390 --> 00:14:33.690
Ameziane Hamlat: Sorry, say it again?

118
00:14:34.240 --> 00:14:40.000
Barnabas: Did you notice the bandwidth usage increase only on super nodes, or only on, full nodes?

119
00:14:40.690 --> 00:14:44.459
Ameziane Hamlat: It's, it's a decrease, it's a decrease in the bandwidth.

120
00:14:46.020 --> 00:14:49.330
Ameziane Hamlat: So we dropped, like, by more than 50%.

121
00:14:51.710 --> 00:14:55.030
Barnabas: Yeah, but is it a validating node, or not?

122
00:14:55.030 --> 00:14:57.140
Ameziane Hamlat: Yeah, yeah, validating notes.

123
00:14:58.020 --> 00:15:04.099
pk910: Was that exactly at the fog boundary? Because we… shortly before the fog, we started spamming blobs to the network.

124
00:15:04.340 --> 00:15:06.740
pk910: Before that, there were basically no blobs.

125
00:15:08.760 --> 00:15:14.539
Ameziane Hamlat: Yeah, so that was exactly at the forked boundaries, just after the fork, actually.

126
00:15:17.900 --> 00:15:25.570
Ameziane Hamlat: But do you, like, do you see the same on other clients, or not? Because I would expect to see the same.

127
00:15:26.920 --> 00:15:30.209
Ameziane Hamlat: So, basically, a drop in the bandwidth usage.

128
00:15:37.040 --> 00:15:48.749
Parithosh Jayanthi: We're still working on our bandwidth analysis, so we don't have… have that yet. But yeah, as soon as we do, we have it clustered per client, and then we'll have the report generated probably tomorrow.

129
00:15:55.660 --> 00:15:56.380
stokes: Okay.

130
00:15:56.710 --> 00:15:58.860
stokes: Anything else on Halashki?

131
00:16:05.000 --> 00:16:06.080
stokes: Okay.

132
00:16:06.540 --> 00:16:12.619
stokes: Then next up, I did want to call out this PR, so…

133
00:16:13.240 --> 00:16:17.410
stokes: This came up from ACDT on Monday, and…

134
00:16:17.810 --> 00:16:20.939
stokes: Essentially, I think it was a couple different things in here.

135
00:16:21.470 --> 00:16:38.250
stokes: One of them, is just having, what we usually call, like, a readiness doc. So, you know, you could imagine there's, like, a pure DOS readiness doc, which just runs through, you know, these are the different checkpoints we need to see on the network before moving ahead, these are different tests we want to do, things like this.

136
00:16:39.420 --> 00:16:41.470
stokes: There was one here…

137
00:16:41.680 --> 00:16:50.740
stokes: from, you know, sort of across the whole lifespan of PureDOS development, and it kind of became…

138
00:16:50.930 --> 00:16:58.300
stokes: well, let's just say it became a heavy working document. If you go to it now, it actually links to a Google Doc that also has a bunch of stuff.

139
00:16:59.200 --> 00:17:06.820
stokes: That was one part. Another part, is actually just copying over some of the process stuff that we put in place with Pectra.

140
00:17:08.760 --> 00:17:21.019
stokes: And most of this is relevant for mainnet, so I just started the PR and just kind of put down the skeleton here. We'll fill this in, you know, once we're closer to Fusaka Mainnet, but it's there.

141
00:17:21.240 --> 00:17:27.620
stokes: And… Yeah, I should probably go and clean up this readiness document. It's…

142
00:17:27.859 --> 00:17:30.810
stokes: I have a mess right now, but either way.

143
00:17:30.950 --> 00:17:32.740
stokes: I'll keep working on that.

144
00:17:33.090 --> 00:17:37.960
stokes: But just wanted to call this out, again, it'll probably be more relevant

145
00:17:38.390 --> 00:17:41.749
stokes: As we get closer to mainnet, but that's underway.

146
00:17:43.580 --> 00:17:50.259
stokes: And… Yeah, I think that's all we had on the agenda for Forsaka today.

147
00:17:50.950 --> 00:17:52.460
stokes: Anything else?

148
00:17:55.080 --> 00:18:00.680
stokes: I mean, in short, So far, Leshky's gone well enough, and we're gonna keep moving forward.

149
00:18:11.270 --> 00:18:12.140
stokes: Okay.

150
00:18:12.970 --> 00:18:14.570
stokes: So then, Glamsterdam.

151
00:18:15.360 --> 00:18:24.580
stokes: I'm… curious what people think, you know, so we've kind of had this…

152
00:18:24.840 --> 00:18:33.739
stokes: let's just say directive over the past couple ACDs of saying, hey, you know, we're focused on Fusaka, so let's, you know, kind of not think about Climstrom too much.

153
00:18:34.420 --> 00:18:42.309
stokes: It seems to me, just kind of reading the room, that we're at a place now where I think we can start putting more attention back into Glensterium.

154
00:18:42.880 --> 00:18:48.919
stokes: You know, obviously, if some of the FSACA changes, a testnet doesn't go over something, that will change.

155
00:18:49.060 --> 00:18:53.080
stokes: But it seems like we can start focusing more on Amsterdam, so I would expect…

156
00:18:53.180 --> 00:19:00.390
stokes: kind of starting today and moving forward, we'll have more emphasis on Glamsterdam back in the different ACD calls.

157
00:19:00.860 --> 00:19:04.129
stokes: So, to that end,

158
00:19:04.950 --> 00:19:14.879
stokes: we should probably start thinking about, you know, the whole process. So what does that mean? The process here is getting the specs hammered out for Amsterdam, it's getting to DevNets, and going from there.

159
00:19:15.310 --> 00:19:22.309
stokes: So, one thing I could ask today is, how do we feel about, the DevNets for the various headliners?

160
00:19:22.770 --> 00:19:26.600
stokes: I don't know if we want to touch on BLs today, but we can definitely touch on EPBS.

161
00:19:27.570 --> 00:19:33.010
stokes: And again, everyone's been busy with Fisaka, so if the answer is not much has changed, that's fine.

162
00:19:33.290 --> 00:19:35.989
stokes: But I would be curious, for an update there.

163
00:19:42.620 --> 00:19:47.230
potuz: update on PBS or on… on… on block-level access lists?

164
00:19:47.230 --> 00:19:49.130
stokes: Oh, sorry, on EPBS, yeah.

165
00:19:49.610 --> 00:19:59.259
potuz: There's, nothing that has changed on the specs side. There's lately a discussion of, how to

166
00:19:59.450 --> 00:20:01.560
potuz: Better enable,

167
00:20:02.260 --> 00:20:18.879
potuz: trusted payments. We can have trusted payments just with the protocol as is right now, or there's a suggestion to add a field for off-protocol payments. That's the latest discussion on the spec, but the spec itself hasn't changed, we've been adding tests.

168
00:20:19.010 --> 00:20:23.140
potuz: And since we are finding still bugs on Fusaka, we cannot.

169
00:20:23.530 --> 00:20:36.059
potuz: start merging on develop. I think Teco is the only client that actually has, on their main branch, passing tests. Prism has a branch that has passing tests, but it's on a branch. It's still not on the main develop branch.

170
00:20:38.450 --> 00:20:43.159
stokes: Gotcha, okay. So we're probably still quite a ways away from, EPF WebNet.

171
00:20:43.360 --> 00:20:57.979
potuz: It's… probably not. As soon as we actually have a stable Fusaka branch, we can quickly merge all of Terence's work, and we will have some interrupt. And I… from the message that, Stefan posted on Discord.

172
00:20:57.980 --> 00:21:03.890
potuz: Porteco, I mean, probably Stefan is here, that he can say, but it sounded like they are close to at least Cortosis.

173
00:21:05.350 --> 00:21:07.000
Stefan Bratanov: Yeah.

174
00:21:07.260 --> 00:21:11.519
Stefan Bratanov: From Deco perspective, I wouldn't say we're close, I think…

175
00:21:11.740 --> 00:21:20.569
Stefan Bratanov: we want to focus a bit more on the design of… I mean, passing the reference test is a good first step, but there's a lot of things that,

176
00:21:21.100 --> 00:21:24.739
Stefan Bratanov: Because the interop branch that we had before was very hockey.

177
00:21:24.920 --> 00:21:32.180
Stefan Bratanov: So, I think I want to focus on, like, a proper design. So, I think there's, there's a why I want to…

178
00:21:32.670 --> 00:21:37.720
Stefan Bratanov: We have DevNet, and since other clients, are also… Oh.

179
00:21:38.500 --> 00:21:43.570
Stefan Bratanov: not, yet ready, I think we will wait a little bit and…

180
00:21:44.370 --> 00:21:47.449
Stefan Bratanov: Be more careful when merging to master.

181
00:21:49.470 --> 00:21:54.160
stokes: Yeah, I can see that. Yep, Harry and Barnabas are asking…

182
00:21:54.330 --> 00:21:57.440
stokes: Or at least they're just pointing out we can run from our branch, but…

183
00:21:57.770 --> 00:22:04.270
stokes: It sounds like what we don't want is to have, quote, a random branch that just becomes kind of unmanageable down the line.

184
00:22:04.750 --> 00:22:05.740
stokes: So…

185
00:22:06.500 --> 00:22:13.129
stokes: makes sense to be a little more mindful with that, because we kind of got into the situation with Pyrodos, as far as I understand, so…

186
00:22:13.560 --> 00:22:15.510
stokes: Let's not avoid that.

187
00:22:15.510 --> 00:22:20.380
potuz: Yeah, we don't want to repeat what happens with Fulu. We really want to start merging and develop right now.

188
00:22:23.450 --> 00:22:24.140
stokes: Okay.

189
00:22:26.420 --> 00:22:31.119
stokes: So then, yeah, we just need a little more time to get Fusaka

190
00:22:31.270 --> 00:22:35.080
stokes: even more stable. Well, I guess, yeah, I guess that's the question, like…

191
00:22:35.910 --> 00:22:41.939
stokes: how much is it we need to, like, think about more bugs coming down the line with Husaka versus…

192
00:22:43.260 --> 00:22:50.870
stokes: it's just gonna take more time to get to, like, a stable EPBS branch, because we don't want to develop on the non-trunk.

193
00:22:52.250 --> 00:23:02.129
potuz: I think we're gonna be very close. We just, like, had a release with a regression, and that's why we are delaying, but we were about to start merging this Monday.

194
00:23:02.310 --> 00:23:07.600
potuz: So I suspect that next week we will be merging already on develop our gloss code.

195
00:23:11.050 --> 00:23:11.740
stokes: No doubt.

196
00:23:13.550 --> 00:23:24.320
stokes: And yeah, Pari has a comment here, are we happy with the design then? Unknown unknowns, and I believe you're referring to the spec, and that also tees us up for the next thing on the agenda.

197
00:23:24.660 --> 00:23:26.330
stokes: As POTUS mentioned.

198
00:23:26.500 --> 00:23:35.859
stokes: And some others have been discussing this week. There's a question around exactly how trustless payments work in EPVS. Lenoscope, if you're here…

199
00:23:36.200 --> 00:23:38.470
stokes: Oh yeah, I don't know if you wanted to say anything.

200
00:23:39.060 --> 00:23:43.009
Lin Oshitani | Nethermind: Yeah, can I… do I have time for a quick presentation?

201
00:23:43.900 --> 00:23:45.570
stokes: If it's quick, yeah.

202
00:23:46.940 --> 00:23:47.650
Lin Oshitani | Nethermind: C.

203
00:23:50.710 --> 00:23:53.800
Lin Oshitani | Nethermind: Who… Can you see my screen?

204
00:23:54.310 --> 00:23:54.880
stokes: Yep.

205
00:23:55.800 --> 00:24:01.800
Lin Oshitani | Nethermind: Yeah, so, like, this is basically a call for discussion on trustless payments in EPBS.

206
00:24:03.020 --> 00:24:12.929
Lin Oshitani | Nethermind: And quick context is that, EPBS, like, brings two critical changes to Ethereum. One is payload separation, is execution payload block separation.

207
00:24:13.250 --> 00:24:21.900
Lin Oshitani | Nethermind: A lot of nice things, you separate the execution plate from the beacon block, you propagate and execute them separately for good pipelining, you get CL-side delayed execution.

208
00:24:22.320 --> 00:24:33.050
Lin Oshitani | Nethermind: And process payments is another critical change that it introduces, where your builder becomes in protocol staked entities, commit to bids, propose or fetch bids, and payment is first in the CO.

209
00:24:35.590 --> 00:24:47.160
Lin Oshitani | Nethermind: So, my proposal here is that we should either have a convincing argument on why trusted business payments cannot be separated from the current DIP,

210
00:24:47.500 --> 00:24:49.970
Lin Oshitani | Nethermind: And that the complexity is worth it.

211
00:24:50.260 --> 00:24:53.169
Lin Oshitani | Nethermind: Specifically, that there's no incentive to bypass it?

212
00:24:53.850 --> 00:24:58.329
Lin Oshitani | Nethermind: Or we should have a separate EIP between the payload separation and the process payments.

213
00:24:58.460 --> 00:25:01.220
Lin Oshitani | Nethermind: And discuss and decide them separately.

214
00:25:02.320 --> 00:25:16.720
Lin Oshitani | Nethermind: Why? I see two reasons. One is, like, that these two features fundamentally have different stakeholders, so payload separation, it's about slot restructuring and scaling, so core devs are the experts here.

215
00:25:16.980 --> 00:25:24.150
Lin Oshitani | Nethermind: They know all about scaling and can run benchmarks and all that. And ecosystems, they largely depend on CoreDevs for their expertise.

216
00:25:25.290 --> 00:25:35.480
Lin Oshitani | Nethermind: On the other hand, for choices payments, it's about changing… fundamentally changing the block building pipeline, so I would say that the stakeholders are more the ecosystem players, like validators and builders.

217
00:25:35.670 --> 00:25:43.429
Lin Oshitani | Nethermind: That are the experts, and end user of the feature too, and core devs, in my opinion, should take into account these activities, and

218
00:25:43.590 --> 00:25:48.959
Lin Oshitani | Nethermind: My impression from the outside is that a lot of this discussion has been focusing on the payload separation.

219
00:25:49.110 --> 00:25:54.620
Lin Oshitani | Nethermind: when Lamstrom was being discussed, like, what's the best pipelining solution and slot-restricting solution?

220
00:25:55.010 --> 00:25:58.430
Lin Oshitani | Nethermind: I think there was fundamentally less discussion around the trustless payment part.

221
00:26:00.780 --> 00:26:05.240
Lin Oshitani | Nethermind: And I think this is important in terms of governance, and one…

222
00:26:05.400 --> 00:26:07.749
Lin Oshitani | Nethermind: I think, interesting case study is EOF.

223
00:26:08.430 --> 00:26:13.059
Lin Oshitani | Nethermind: And I think I know that it's very, very different, but I also see a lot of parallel, and…

224
00:26:13.340 --> 00:26:18.010
Lin Oshitani | Nethermind: Enough that it's interesting, and… I think EOF had different stakeholders.

225
00:26:18.270 --> 00:26:20.300
Lin Oshitani | Nethermind: One is, like.

226
00:26:20.780 --> 00:26:26.229
Lin Oshitani | Nethermind: with the core devs, and this was about removing tech tip and enabling easier upgrades of the EVM.

227
00:26:27.980 --> 00:26:37.569
Lin Oshitani | Nethermind: And another was app and tooling developers, and they were, like, about the enabling better compiling tooling, and also at the cost of breaking changes.

228
00:26:38.420 --> 00:26:46.359
Lin Oshitani | Nethermind: My impression from the outside was that the former was convinced, and the latter was not, and the end result was a loss for everyone, in my opinion.

229
00:26:48.650 --> 00:26:58.240
Lin Oshitani | Nethermind: Well, the next reason I have is complexity and uncertainty. So, like, complexity of trustless payments, like, in terms of spec and CEO implementation, it's relatively simple.

230
00:26:58.700 --> 00:27:05.430
Lin Oshitani | Nethermind: I would say is still, like, conceptually adds some complexity, because they're the new staked entity, but…

231
00:27:05.600 --> 00:27:09.490
Lin Oshitani | Nethermind: I do see that it's, like, not the bulk of the complexity in each PBS.

232
00:27:10.950 --> 00:27:17.880
Lin Oshitani | Nethermind: Well, in terms of ecosystem impact, I think it's far from simple. Like, it requires fundamental upgrades across the tool links, taking…

233
00:27:18.130 --> 00:27:23.380
Lin Oshitani | Nethermind: And also, like, staking protocols, their accounting contracts and infrastructure.

234
00:27:23.970 --> 00:27:28.120
Lin Oshitani | Nethermind: And it also had, like, a fundamental impact on the builder market that is very unclear.

235
00:27:29.310 --> 00:27:42.429
Lin Oshitani | Nethermind: And, like, you can see, like, they send different, like, write-ups from different teams, like Lido saying that it adds a non-trivial increase in the protocol complexity, especially if they have to maintain both, like, the in-protocol payments and the off-protocol payments.

236
00:27:43.480 --> 00:27:51.729
Lin Oshitani | Nethermind: And yet Aitan has pointing out that it will also negatively affect competition and increase concentration by raising barrier to entry, because you need to lock

237
00:27:52.150 --> 00:28:02.180
Lin Oshitani | Nethermind: Like, liquidity up front, and also, like, you have… also always have the risk of losing it to everything if, like, your block doesn't land, and all that risk is up to the builder.

238
00:28:05.210 --> 00:28:12.209
Lin Oshitani | Nethermind: So, like, complexity may be worth it if trustless payments are actually widely used, however, I think bypassability is an open question.

239
00:28:12.700 --> 00:28:18.040
Lin Oshitani | Nethermind: Like, referring to the fact that proposers may be incentivized to bypass an improtocol justice payment.

240
00:28:18.160 --> 00:28:25.950
Lin Oshitani | Nethermind: and instead use off-protocol options like MedBoost, And… If

241
00:28:26.080 --> 00:28:32.199
Lin Oshitani | Nethermind: We have, like, bypassability, rational actors will bypass, hence we'll be introducing this complexity for nothing.

242
00:28:36.020 --> 00:28:37.250
Lin Oshitani | Nethermind: And, yep.

243
00:28:38.310 --> 00:28:44.359
Lin Oshitani | Nethermind: So… And, like, does justice payments re… like, one of the counterarguments here is that

244
00:28:44.590 --> 00:28:47.730
Lin Oshitani | Nethermind: Business payments reduce latency, so that's why it's abused.

245
00:28:48.250 --> 00:28:49.090
Lin Oshitani | Nethermind: Inc.

246
00:28:49.570 --> 00:28:56.000
Lin Oshitani | Nethermind: that the card argument there is that current builders and relays co-locate, so ATC is mostly negligible.

247
00:28:57.860 --> 00:29:05.190
Lin Oshitani | Nethermind: the point on, like, that we shouldn't… enforcing… like, we shouldn't be removing MedBoost supports from clients. I think this was another

248
00:29:05.570 --> 00:29:10.359
Lin Oshitani | Nethermind: like, option that was raised by core devs, but to enforce trust payments, but I think that's a…

249
00:29:10.670 --> 00:29:13.969
Lin Oshitani | Nethermind: Bad idea, because it will introduce, like, security risks.

250
00:29:15.220 --> 00:29:16.080
Lin Oshitani | Nethermind: Here.

251
00:29:17.170 --> 00:29:24.089
Lin Oshitani | Nethermind: So, if justice payment is clearly and uncurially accepted, maybe it's fine to just bundle it with payload separation.

252
00:29:25.080 --> 00:29:30.219
Lin Oshitani | Nethermind: However, based on talking to ecosystem players, it is a fact that trustless payments is controversial.

253
00:29:31.580 --> 00:29:39.829
Lin Oshitani | Nethermind: And so I believe these should be separated, and separately discussed with the ecosystem, unless we have a strong convincing argument to bundle them together, and…

254
00:29:40.070 --> 00:29:43.470
Lin Oshitani | Nethermind: I think that's also a possibility, but it's just that the people are not convinced.

255
00:29:44.870 --> 00:29:51.150
Lin Oshitani | Nethermind: And… I think if there's, like, even a single-digit percent risk of ending up like EOF,

256
00:29:51.690 --> 00:29:58.610
Lin Oshitani | Nethermind: I think… I don't see a reason why we shouldn't separate. This is… Yeah, my personal opinion.

257
00:30:00.810 --> 00:30:03.340
Lin Oshitani | Nethermind: Yeah, so this is my recap of the proposal.

258
00:30:03.910 --> 00:30:06.390
Lin Oshitani | Nethermind: And… Yeah, that's it.

259
00:30:11.190 --> 00:30:12.410
stokes: Cool, thank you.

260
00:30:13.300 --> 00:30:24.699
stokes: Yeah, I think this is definitely a question we need to settle sooner rather than later, and like you point out, I do think there, yeah, are some arguments here to consider.

261
00:30:25.170 --> 00:30:26.270
stokes: Ansaber?

262
00:30:27.760 --> 00:30:47.679
Ansgar Dietrichs: Yeah, I mean, just in terms of progress by process, I would expect we wouldn't decide something like this just today, just because that's so short notice, and I would expect that many people are probably quite strongly opposed to separating the headliner AP out into two. I personally just wanted to briefly speak out in favor for such a split.

263
00:30:47.680 --> 00:31:11.019
Ansgar Dietrichs: I've been… I've had some troubles in the past with specifically the aspect that EPBS, just for historic reason, nothing wrong with this, no fault of the champions or anything, but, like, it just morphed. It started out as something focused more on specifically, like, trustless payments and these things, and then it, over time, morphed more into being focused on scalability, because that's kind of where the trend overall went to, that we wanted to focus lump sum on scalability, but

264
00:31:11.020 --> 00:31:16.810
Ansgar Dietrichs: I had to look back, and almost all the clients that had a post on their position on EPBS,

265
00:31:16.810 --> 00:31:34.489
Ansgar Dietrichs: just before we made the headliner decision, specifically pointed out that they are supporting EPBS for scalability reasons, and so I do think that now puts it in this awkward position where there's this aspect of it, which might still be a good idea. I personally am somewhat skeptical, but the point is, it's kind of not…

266
00:31:34.490 --> 00:31:38.909
Ansgar Dietrichs: that was not part of the core of, like, why this ERP was chosen as the headliner.

267
00:31:38.910 --> 00:31:45.009
Ansgar Dietrichs: So I would really appreciate if we were to split out trustless payments and make the decision separately. It could still be…

268
00:31:45.150 --> 00:31:57.729
Ansgar Dietrichs: included in Glamsterdam, but as a normal EIP, that then has to basically, like, have one more round of discussion around it, and then, yeah, I would have my arguments for why I might caution against it.

269
00:31:57.990 --> 00:32:05.640
Ansgar Dietrichs: But yeah, I expect that there's a lot of people that are on the other side of this, so I feel like we should probably not make a decision, like, today.

270
00:32:05.890 --> 00:32:07.510
Ansgar Dietrichs: But in two weeks, maybe.

271
00:32:09.770 --> 00:32:14.270
stokes: Yeah, I mean, I think people will need time to dig into this, so I don't think we're gonna decide today.

272
00:32:14.440 --> 00:32:22.130
stokes: But I did want to, have the discussion. Yeah, there are a lot of moving pieces here. There's…

273
00:32:22.370 --> 00:32:33.040
stokes: you know, on, I guess, on one side, core devs here, you know, understanding some of these trade-offs, and just getting, you know, wrapping their heads around the spec and how it all works, and understanding that in context.

274
00:32:33.560 --> 00:32:38.620
stokes: Then, you know, another part of it would just be reaching out to the different community members that have been listed.

275
00:32:38.900 --> 00:32:46.519
stokes: I don't know, Greg here from Lido just had your hand up, so yeah, like, different sticking pools, different builders, and…

276
00:32:46.760 --> 00:32:50.079
stokes: Yeah, getting their take on the feature as it is.

277
00:32:50.350 --> 00:32:58.390
stokes: And that process will probably take some time to play out, just given how we can service input to ACD from the community.

278
00:33:00.400 --> 00:33:03.050
stokes: And, yeah, sure, Greg?

279
00:33:04.090 --> 00:33:24.710
Greg K | Lido: Yeah, hi guys, I'm Greg from, Lido. Yeah, I just want to say that, yeah, I pretty much, agree with the comments of, Lynn and, Anskar. Basically, yeah, on the conceptual level of it. So I think that, you know, as I said, we have this kind of two different PBAs. Basically, the one is the payload blocks operation, and the other, the…

280
00:33:24.710 --> 00:33:26.220
Greg K | Lido: proposal builder separation.

281
00:33:26.220 --> 00:33:34.700
Greg K | Lido: And, yeah, I think it would be a much more lean approach if we just have two separate things, because it's really conceptually separate, the one thing

282
00:33:34.820 --> 00:33:37.569
Greg K | Lido: The main reason of this, like.

283
00:33:37.650 --> 00:33:56.320
Greg K | Lido: It's the scaling part, and everyone agrees, and, like, we have a very good consensus on that, like, it's a scaling feature. The proposal builder separation has, like, other consequences. It goes beyond the scaling, it's about, you know, censorship resistance, it's about centralization, it's other stuff. So I think it also logically makes sense to separate those two things anyways.

284
00:33:56.420 --> 00:34:09.039
Greg K | Lido: So, yeah, I think it's very good that, Lynn brought it in the discussion today. Yeah, I agree also with Anx that we cannot take a decision today, like, it makes sense. But yeah, I think also, like.

285
00:34:09.270 --> 00:34:21.369
Greg K | Lido: research-wise and logic-wise, I think it makes sense to have those two things separately, like, like, to have a more gradual upgrade. That doesn't… it seems a bit complex to have two sorts at one ape.

286
00:34:25.080 --> 00:34:27.430
stokes: Yeah, thanks for the thoughts, Ryan.

287
00:34:29.630 --> 00:34:31.659
Lion dapplion: Yeah, I just went to boys that…

288
00:34:31.880 --> 00:34:34.519
Lion dapplion: Since 2 or 3 months ago, I was…

289
00:34:34.980 --> 00:34:44.210
Lion dapplion: I find it strange that we didn't have the chance as client teams to voice if we wanted to get payload separation and trustless payments, or just…

290
00:34:44.610 --> 00:34:53.830
Lion dapplion: payment, payload separation. So, yeah, I would support to have this split as soon as possible, so different stakeholders can clearly voice their opinion.

291
00:34:58.750 --> 00:35:00.610
stokes: Makes sense. Yeah, Produce?

292
00:35:01.590 --> 00:35:02.809
potuz: Yeah, so…

293
00:35:03.230 --> 00:35:11.480
potuz: I think this presentation and this point of view lacks understanding of how the implementation on the spec is.

294
00:35:11.840 --> 00:35:13.500
potuz: Trustless payments.

295
00:35:13.710 --> 00:35:29.350
potuz: is two different things. In fact, for that separation, just to have trusted payments, EPBS as is now is easier and safer and easier to implement than going trustless a la MapBoost.

296
00:35:29.940 --> 00:35:31.960
potuz: The reason being is that

297
00:35:33.010 --> 00:35:40.870
potuz: we want to have separation of broadcast, we need to have the payload being signed. I'm sorry that I'm going to be technical for a little bit.

298
00:35:41.500 --> 00:35:45.720
potuz: But, to have that separation, if we keep

299
00:35:46.030 --> 00:35:50.989
potuz: without all of the machinery that EPBS brings, and we keep the map boost.

300
00:35:51.220 --> 00:36:08.969
potuz: sort of diab… the boost mechanism that we have today, then that incurs in a bunch of trade-offs of, like, going back and forth to share the payload and blind signing, and all of this machinery that we have today, just to prevent the builder from being unbundled.

301
00:36:09.460 --> 00:36:14.040
potuz: If we have EPBS today, just as today, no changes.

302
00:36:14.370 --> 00:36:30.399
potuz: Lido doesn't need to change their contract, Lido just needs to tell their node operators, hey, listen, only whitelist these builders. These builders are going to be paying you on the EL and are going to be bidding for one way on the protocol side.

303
00:36:30.400 --> 00:36:38.369
potuz: EPBS does not prevent off-protocol payments. It does not prevent a node operator from trusting a builder and whitelisting it.

304
00:36:38.810 --> 00:36:49.869
potuz: What EPBS brings, and now, having said so, that it's actually easier to have trusted payments on the EL with the current implementation and the specification of EPBS,

305
00:36:49.990 --> 00:37:11.960
potuz: It's also better for a lot of other reasons, because even if the builder is paying on the EL of protocol, is still signing the payload, and we can actually detect on-chain, we can detect censorship, we can blacklist particular builders even without having been the ones that proposed the block, we can do a lot of things that we could not do without having a signature on the payload.

306
00:37:12.080 --> 00:37:31.990
potuz: So those are just… those are already reasons to have the on-protocol mechanisms, and at the same time, it's very simple to go off-protocol for the payment itself, if the node operator just has. EPBS does not try to force an on-protocol payment. EPBS just gives you the option to have a trustless payment.

307
00:37:39.650 --> 00:37:40.240
stokes: Okay.

308
00:37:40.240 --> 00:37:58.939
potuz: And just in response to Francesco, it's exactly what I'm saying. So, the people that want to remove trustless payments, what they are saying is, remove everything, like, all of this withdrawal mechanism, the state builders on-chain, and all of these things. It's not what we're discussing now on Discord.

309
00:37:58.960 --> 00:38:17.980
potuz: They really want to remove the whole… so they are calling trustless payment two different things. One is the stake builders, and the other one is the payment itself. And the claim is that the payment itself can be trusted on EPBS, just as, without any change. And Lido doesn't need to change their contracts at all.

310
00:38:19.200 --> 00:38:24.189
Lin Oshitani | Nethermind: So you… Just to confirm, like, you're saying that you're… Fine with, like.

311
00:38:24.310 --> 00:38:27.479
Lin Oshitani | Nethermind: In Prism, for example, like, you just keep the Memboost support.

312
00:38:27.630 --> 00:38:45.869
potuz: No, we don't keep the MedBoot support at all. We don't have any MedBoot pipeline, but you can whitelist the builders that you're gonna take bids from, and those builders are going to bid, say, one way only on the actual on-protocol side, but they are promising me that they're gonna be paying me off-protocol.

313
00:38:46.270 --> 00:38:53.989
potuz: And this way, Prism doesn't need to do any changes on the implementation, and you just only whitelist the builders that you're going to be dealing with.

314
00:38:56.610 --> 00:38:57.390
Lin Oshitani | Nethermind: You see?

315
00:38:57.990 --> 00:39:03.599
Lin Oshitani | Nethermind: But yeah, I mean, if you're… I think your point here is, like, that trustless payment is critical.

316
00:39:03.800 --> 00:39:05.720
Lin Oshitani | Nethermind: For the scalability part.

317
00:39:05.870 --> 00:39:09.529
Lin Oshitani | Nethermind: I think that's the part that a lot of us are not quite getting.

318
00:39:09.530 --> 00:39:13.660
potuz: I am not claiming that at all. I haven't even mentioned scalability.

319
00:39:14.130 --> 00:39:14.660
Lin Oshitani | Nethermind: But…

320
00:39:15.150 --> 00:39:20.439
Lin Oshitani | Nethermind: the commit and review… okay, so the commit and reveal, like, difference, right? And you're saying that if we…

321
00:39:22.010 --> 00:39:23.330
Lin Oshitani | Nethermind: that difference.

322
00:39:23.580 --> 00:39:25.810
Lin Oshitani | Nethermind: Is tied to trust this payment, or…

323
00:39:26.870 --> 00:39:31.250
Lin Oshitani | Nethermind: like… Or, or do you…

324
00:39:31.250 --> 00:39:38.839
potuz: incometer reveal with assigned payload by the builder is easier than doing it

325
00:39:38.930 --> 00:39:53.690
potuz: when the payload is signed by the proposer, because then we need to go the blind route, signing things that we haven't seen, and exchange the payload and fill it as we do now with MedBoost. Doing it as it is on EPBS is much easier.

326
00:39:53.900 --> 00:39:58.269
potuz: Because the signature comes from the builder, and the builder can reveal whenever they want.

327
00:40:01.360 --> 00:40:02.170
Lin Oshitani | Nethermind: Yo.

328
00:40:04.110 --> 00:40:05.240
Lin Oshitani | Nethermind: I think…

329
00:40:05.720 --> 00:40:10.980
Lin Oshitani | Nethermind: Yeah, I think there's still the question of, like, well, probably we maybe don't have time to go…

330
00:40:11.170 --> 00:40:17.700
Lin Oshitani | Nethermind: too much, but I think there's still the question of, like, bypassibility, even if we… if it's, like, in-protocol cleaner, if they…

331
00:40:19.090 --> 00:40:19.940
Lin Oshitani | Nethermind: you know.

332
00:40:20.360 --> 00:40:26.669
Lin Oshitani | Nethermind: go through the trustless payment? Like, will they? I think that's still an open question, and if it's an open question, is it worth it?

333
00:40:27.920 --> 00:40:29.870
Lin Oshitani | Nethermind: But, yeah, I do see your point, that…

334
00:40:30.710 --> 00:40:38.710
Lin Oshitani | Nethermind: With the comment real time being, like, 4 seconds or 6 seconds away, like, trusted payment, Might have some.

335
00:40:39.320 --> 00:40:40.370
Lin Oshitani | Nethermind: Advantage.

336
00:40:44.160 --> 00:40:46.750
Lin Oshitani | Nethermind: Either way, I think, like, we need convincing.

337
00:40:46.900 --> 00:40:48.209
Lin Oshitani | Nethermind: About these facts.

338
00:40:52.130 --> 00:40:56.489
stokes: Okay, so, yeah, before we get too deep into the weeds here,

339
00:40:56.840 --> 00:41:02.929
stokes: It does sound like we should look at all these different, you know, the different design decisions here.

340
00:41:03.340 --> 00:41:08.390
stokes: have some written document, ideally, of the trade-offs, and I think that would help drive the conversation forward.

341
00:41:08.950 --> 00:41:10.919
stokes: That's not gonna happen live right now.

342
00:41:11.240 --> 00:41:26.369
stokes: So I would suggest that's something that we work on, is sync, and yeah, again, we'll see, timing-wise what that looks like. I don't know if anyone can guarantee that, you know, by the next call, we'll have this all together, but I do think we should keep this moving.

343
00:41:26.880 --> 00:41:30.799
stokes: Yeah, Terrence has a good point here. There is an EPVS breakout.

344
00:41:31.170 --> 00:41:33.679
stokes: It was next Friday, yeah, so…

345
00:41:34.100 --> 00:41:40.070
stokes: That would be another good check-in. If anyone wants to get deeper into this conversation, that's probably the place to do it.

346
00:41:41.570 --> 00:41:45.530
stokes: And in the meantime, yeah, I think we should…

347
00:41:45.950 --> 00:41:49.459
stokes: I guess to Ansbar's point here, just around the process, like.

348
00:41:51.580 --> 00:41:54.750
stokes: What we don't want to happen is, yeah, something…

349
00:41:55.080 --> 00:42:03.900
stokes: like EOF with this EIP, so I think we should be flexible around the actual ultimate shape it takes in Amsterdam.

350
00:42:04.250 --> 00:42:09.569
stokes: And that's a conversation that can play out in ACDC, over the coming weeks.

351
00:42:10.280 --> 00:42:15.709
stokes: So… I think from there, I think things are pretty clear on next steps.

352
00:42:16.260 --> 00:42:21.619
stokes: And… Unless there's a pressing comment on that point.

353
00:42:21.920 --> 00:42:24.219
stokes: We can move on in the agenda today.

354
00:42:28.080 --> 00:42:34.409
stokes: And in that case… so, I think the last thing here for Glamsterdam was, again, just this reminder, so…

355
00:42:34.750 --> 00:42:41.379
stokes: We had the headliner selection process. We'll have a selection process for non-headliners, for EIPs.

356
00:42:41.560 --> 00:42:51.859
stokes: And we had kind of said, okay, it'll be around Fusaka Mainnet. I wanted to propose a refinement here, just so it's, like, super clear exactly what we mean.

357
00:42:52.160 --> 00:43:02.719
stokes: I think the call where we set the Fusaka mainnet date, you know, it would essentially be the next ACD call would be the deadline for non-Headliner EIPs.

358
00:43:03.140 --> 00:43:06.080
stokes: So, again, that shouldn't be a surprise to anyone.

359
00:43:06.690 --> 00:43:10.160
stokes: But, yeah, just a reminder there.

360
00:43:12.710 --> 00:43:13.830
stokes: Okay.

361
00:43:15.260 --> 00:43:16.420
stokes: Yeah, Osbury?

362
00:43:16.420 --> 00:43:30.980
Ansgar Dietrichs: Wait, yeah, just can you… can you clarify this one more time? You're saying the call itself… so basically you're saying in two weeks, we would set the dates, and that would then already… the call where we set the dates is already the cutoff time, because it feels like I would have maybe expected, let's say.

363
00:43:31.090 --> 00:43:50.410
Ansgar Dietrichs: on the call where we set the dates for the releases, we then also say, and that means that now we can set the exact cutoff time for ERP proposals, there's, like, one last week, or something. I feel like it's better to, on the day we make the decision, we make the decision not closing, but, like, saying, okay, on this day, basically, like, you only have, like, one last week. I feel like that's usually nicer than basically

364
00:43:50.740 --> 00:43:51.470
Ansgar Dietrichs: Yeah.

365
00:43:52.060 --> 00:43:56.129
stokes: That's what I meant. Maybe I didn't frame it well.

366
00:43:56.870 --> 00:43:57.409
Ansgar Dietrichs: No, I probably.

367
00:43:57.410 --> 00:43:57.729
stokes: And so.

368
00:43:57.730 --> 00:43:59.019
Ansgar Dietrichs: Didn't understand correctly.

369
00:43:59.020 --> 00:44:02.740
stokes: Yeah, so… yeah, like…

370
00:44:03.060 --> 00:44:11.659
stokes: For example, say we decided mainnet today, then by next ACD, that would be the deadline for non-headliners.

371
00:44:13.100 --> 00:44:14.770
stokes: Right, so you have that extra week.

372
00:44:17.910 --> 00:44:19.699
stokes: Does that… okay, that makes sense.

373
00:44:22.540 --> 00:44:28.940
stokes: Yeah, there will be time. The point will not be, oh, hey, by the way, surprise, this is, the deadline.

374
00:44:29.080 --> 00:44:33.849
stokes: And it's passed. There'll be time, before that happens.

375
00:44:35.210 --> 00:44:39.050
stokes: So… There's that.

376
00:44:40.010 --> 00:44:49.119
stokes: Okay, otherwise, there were a few kind of miscellaneous things around, other concerns, either with the process of ACD itself.

377
00:44:49.960 --> 00:44:56.569
stokes: Or some, yeah, various EIPs or names. Anything else on Glamsterdam before we move to that?

378
00:45:03.740 --> 00:45:09.780
stokes: Okay, so then the first one… this is a follow-up from last week. There was this…

379
00:45:10.160 --> 00:45:16.260
stokes: proposal here, from Lullivan, I think is how you say your handle here.

380
00:45:16.470 --> 00:45:25.439
stokes: And it introduces this concept of a champion, that would essentially be point of contact for, getting an EIP into a specific fork.

381
00:45:25.790 --> 00:45:29.390
stokes: There is a number of comments here going back and forth.

382
00:45:29.550 --> 00:45:31.090
stokes: On some of the details.

383
00:45:31.340 --> 00:45:34.729
stokes: And ultimately, I think the language has changed a little bit.

384
00:45:35.010 --> 00:45:39.830
stokes: We had kind of wanted to get this merged in before today, so…

385
00:45:39.940 --> 00:45:44.040
stokes: We haven't, and I wanted to try to get final comments today.

386
00:45:44.740 --> 00:45:49.320
stokes: Yeah, well, then I see you're here, I don't know if you have anything to add.

387
00:45:51.540 --> 00:45:54.039
wolovim: Yeah, hey, this should be very brief.

388
00:45:54.500 --> 00:45:55.950
wolovim: The…

389
00:45:56.390 --> 00:46:10.039
wolovim: The suggestion last week was to more formally define the champion title as the primary point of contact, and that a PFI'd EIP needs to have that primary point of contact.

390
00:46:10.470 --> 00:46:27.250
wolovim: Or a soft requirement for one. There was some hesitation on the usage of the word champion, because it, potentially gets overloaded as the word champion is used in EIP1, sort of ambiguously, so I've just simplified the proposal

391
00:46:27.420 --> 00:46:32.440
wolovim: Two… down from three sentences to one, basically, in order to get…

392
00:46:32.890 --> 00:46:36.419
wolovim: PFI'd into, starting with Glamsterdam.

393
00:46:36.700 --> 00:46:44.349
wolovim: you should specify the primary point of contact. That's the end of the story. So this is just a… meant to be a logistics,

394
00:46:44.540 --> 00:46:49.260
wolovim: Improvement, like a… hopefully a… Communication friction reduction.

395
00:46:50.060 --> 00:46:53.549
wolovim: So I hope that's, straightforward and agreeable.

396
00:46:57.930 --> 00:47:01.540
stokes: Makes sense to me any final comments here?

397
00:47:01.770 --> 00:47:03.890
stokes: With anyone at present.

398
00:47:05.580 --> 00:47:09.260
stokes: Otherwise, I'll take a look at the PR.

399
00:47:10.220 --> 00:47:13.680
stokes: But yeah, I think we're probably in a good place to merge.

400
00:47:14.000 --> 00:47:16.179
stokes: So yeah, I guess then today…

401
00:47:16.380 --> 00:47:24.740
stokes: If you have any final comments, take them to the PR, otherwise it'll be merged very likely within the next 24 hours, and we'll move that along.

402
00:47:29.170 --> 00:47:33.750
stokes: Okay, next up, there was a comment here from Kev.

403
00:47:34.080 --> 00:47:41.120
stokes: So, okay, I think this is actually just a very narrow process thing, but essentially.

404
00:47:41.260 --> 00:47:47.250
stokes: With EIP7870, this was around the minimum hardware requirements, EIP…

405
00:47:47.510 --> 00:47:49.710
stokes: So just to move it from…

406
00:47:50.000 --> 00:47:56.159
stokes: Let's see, from interview to live. Okay, so it's just moving it through the EIP lifecycle process.

407
00:47:56.340 --> 00:48:05.180
stokes: And I believe we just need to, like, agree on AACD that we're doing this, so it can be referenced. That's apparently what the editors requested.

408
00:48:05.550 --> 00:48:06.870
stokes: So yeah.

409
00:48:07.090 --> 00:48:11.609
stokes: Any… anyone have any issue with that? Otherwise, we'll just go ahead and move it forward.

410
00:48:21.060 --> 00:48:23.109
stokes: Okay, that was easy.

411
00:48:24.390 --> 00:48:29.689
stokes: It's just changing the lifecycle status, so it's not really a material change.

412
00:48:31.830 --> 00:48:37.149
stokes: Next up, H-star. So, ABC caught up?

413
00:48:37.350 --> 00:48:41.960
stokes: is calling out that H-star needs a name, which I agree.

414
00:48:42.130 --> 00:48:46.689
stokes: And he proposes to have the name set by Passaka going live on Mainnet.

415
00:48:46.930 --> 00:48:49.209
stokes: I don't think we'll have any issues there.

416
00:48:49.680 --> 00:48:52.060
stokes: I will share this link.

417
00:48:53.390 --> 00:48:58.260
stokes: So this link here, there's a sort of informal poll on different names.

418
00:48:58.600 --> 00:49:05.320
stokes: And, yeah, I would… Personally think just use this for signaling and go ahead with the most popular option.

419
00:49:05.490 --> 00:49:07.250
stokes: Which right now is called Etios.

420
00:49:07.600 --> 00:49:15.480
stokes: So, yeah, if you have strong opinions on the name, I suppose take it to the ETHM Magician's thread.

421
00:49:15.980 --> 00:49:20.670
stokes: And then from there, yeah, we'll get this sorted and a few ACD calls.

422
00:49:20.990 --> 00:49:23.319
stokes: Just so there's a name and we can move forward with that.

423
00:49:27.400 --> 00:49:28.320
stokes: Okay.

424
00:49:29.350 --> 00:49:32.639
stokes: That was everything on the agenda today.

425
00:49:33.610 --> 00:49:39.050
stokes: Anything else people would like to discuss? Otherwise, we will wrap up a bit early today.

426
00:49:54.610 --> 00:49:55.999
stokes: Okay, that's great.

427
00:49:56.220 --> 00:50:04.619
stokes: Then, yeah, in terms of immediate next steps, we have the Holeshky BP01 coming up in just a few days, so watch out for that.

428
00:50:04.950 --> 00:50:12.140
stokes: And otherwise, we'll move forward on Glamsterdam, and yeah, I will see you all next time then. Thank you.

429
00:50:13.220 --> 00:50:14.040
lightclient: Thanks.

430
00:50:16.470 --> 00:50:17.560
Marius van der Wijden: Thanks, bud.

431
00:50:17.700 --> 00:50:18.240
Fredrik: Thanks, bye.

432
00:50:18.240 --> 00:50:19.510
Ansgar Dietrichs: Thanksgiving, bye.

433
00:50:19.700 --> 00:50:20.529
Justin Traglia: Hi, everyone.

434
00:50:21.590 --> 00:50:22.530
Pooja Ranjan: Thank you.

