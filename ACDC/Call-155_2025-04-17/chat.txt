00:13:10	Ansgar Dietrichs:	gm gm gm
00:13:24	Ansgar Dietrichs:	Replying to "gm gm gm"

favorite time of the week
00:13:32	Ansgar Dietrichs:	Replying to "gm gm gm"

vibing with core dev friends in zoom chat
00:13:33	Gabe:	Reacted to "favorite time of t..." with ❤️
00:13:50	Gabe:	we can
00:14:03	nixo:	Reacted to "favorite time of the..." with ❤️
00:14:04	Nicolas Consigny:	Reacted to "vibing with core dev..." with ❤️‍🔥
00:14:06	nixo:	Reacted to "vibing with core dev..." with ❤️‍🔥
00:14:07	Pooja Ranjan:	Reacted to "vibing with core dev..." with ❤️‍🔥
00:14:25	pk910:	Reacted to "vibing with core dev..." with ❤️‍🔥
00:14:31	Marius:	Replying to "gm gm gm" 

 Taking time away from real work to listen to the yappers
00:14:43	Marius:	Reacted to vibing with core dev... with "❤️‍🔥"
00:14:48	stokes:	https://github.com/ethereum/pm/issues/1434
00:15:26	Ansgar Dietrichs:	Reacted to "Taking time away fro..." with ❤️
00:15:45	Toni Wahrstätter:	Reacted to "Taking time away fro..." with ❤️
00:15:47	Toni Wahrstätter:	Reacted to "vibing with core dev..." with ❤️‍🔥
00:16:24	Trent:	Reacted to "vibing with core dev..." with ❤️‍🔥
00:16:38	Nicolas Consigny:	Reacted to "Taking time away fro..." with ❤️
00:16:55	stokes:	https://github.com/ethereum/pm/blob/master/Pectra/pectra-mainnet-plan.md#client-team-coordinators
00:17:11	Nicolas Consigny:	Replying to "gm gm gm"

Taking time away from yappers to listen to real work 🤝
00:19:05	Parithosh Jayanthi:	Are we on pectra or peerdas? Because that update was for peerdas-devnet-6
00:19:16	Roman:	Still debugging
00:19:20	Barnabas Busa:	Reacted to "Still debugging" with 👍
00:19:42	Justin Florentine (Besu):	where in discord is this issue being worked?
00:19:52	Parithosh Jayanthi:	Replying to "where in discord is ..."

Peerdas-testing channel
00:19:52	Barnabas Busa:	Replying to "where in discord is ..."

peerdas-testing
00:20:29	Justin Florentine (Besu):	Replying to "where in discord is ..."

🙏
00:21:00	Barnabas Busa:	Replying to "where in discord is ..."

wen besu ready?
00:21:17	Gabe:	Like this:


# BLOBS BPO
BLOB_SCHEDULE:
 - EPOCH: 348618
MAX_BLOBS_PER_BLOCK: 48
 - EPOCH: 355368
MAX_BLOBS_PER_BLOCK: 56
00:21:43	Parithosh Jayanthi:	Options: https://discord.com/channels/595666850260713488/1252403418941624532/1362353806620495964
00:22:01	Marius:	You're only asking for cl, right?
00:22:11	stokes:	If we do EL we should timebox
00:22:15	Parithosh Jayanthi:	Replying to "You're only asking f..."

First CL decision, then EL decision I’d guess
00:22:24	Marius:	Reacted to If we do EL we shoul... with "👍"
00:22:29	Marius:	Reacted to First CL decision, t... with "👍"
00:22:49	Marius:	Replying to "If we do EL we shoul..." 

 The real yappers of the execution layer
00:23:11	Dustin:	this emergency thing is not going to be likely feasible
00:23:27	Fredrik:	Flag to me is an emergency solution (but that will also be hard to coordinate), while config is the long term solution
00:23:42	nflaig:	+1 to what Dustin is saying
00:24:09	Fredrik:	Reacted to "this emergency thing..." with ➕
00:24:30	kasey:	Relying on new binary releases does add a point of failure to the intervention. All client teams need to be available and able to quickly release binaries.
00:24:38	pk910:	different configs would lead to a fork, no? 
so even a emergengy revert needs to be coordinated.  It's not like the gaslimit which is a result of voting from all participants
00:25:19	Preston Van Loon:	fwiw - Mainnet typically has much higher SLAs since folks have real money at risk so reaction time is expected to be better.
00:25:21	Justin Florentine (Besu):	ah, so heroic action is not a premise we can rely on or design from
00:25:49	Dustin:	Replying to "ah, so heroic acti..."

precisely
00:26:10	Preston Van Loon:	Reacted to "ah, so heroic action..." with 👍
00:27:17	Parithosh Jayanthi:	Reacted to "ah, so heroic action..." with 👍
00:27:21	Justin Traglia:	Reacted to "Like this:


# BLOBS..." with 👍
00:27:25	ethDreamer (Mark):	Reacted to "Like this:


# BLOBS..." with 👍
00:27:44	Dustin:	Reacted to "ah, so heroic acti..." with 👍
00:27:48	kasey:	Isn’t the flag concept an implementation detail anyway? We should certainly ship new configs ASAP when we change the BPO in any case.
00:28:01	Barnabas Busa:	we don’t need cli override imo
00:28:03	ethDreamer (Mark):	CLI is difficult to even specify
00:28:04	Parithosh Jayanthi:	Feels easier to avoid the cli option
00:28:10	stokes:	ok
00:28:17	terence:	+1, no CLI per spec
00:28:26	Justin Florentine (Besu):	Replying to "ah, so heroic action..."

@Dustin you alluded to this already being discussed in Discord, was that in the peerdas channels?
00:29:15	kasey:	Replying to "ah, so heroic action..."

thread: https://discord.com/channels/595666850260713488/1252403418941624532/1360292816235925605
00:29:32	Justin Florentine (Besu):	Reacted to "thread: https://disc..." with 🙏
00:30:07	ethDreamer (Mark):	Are we discussing the format of the config?
00:30:11	ethDreamer (Mark):	Like this:

# BLOBS BPO
BLOB_SCHEDULE:
 - EPOCH: 348618
MAX_BLOBS_PER_BLOCK: 48
 - EPOCH: 355368
MAX_BLOBS_PER_BLOCK: 5
00:31:08	Justin Traglia:	Should we back-fill deneb & electra limits? We’ll need to do electra for sure, but not sure if we should do deneb.
00:32:06	kasey:	I think it would be alright to do that, would streamline implementation.
00:32:46	Dustin:	For Nimbus, it wouldn't really help do backfill as far as I can tell, Nimbus is already fork-driven in a way, so for deneb/electra it just does none of this
00:33:07	Justin Florentine (Besu):	community request: I need an agent that can look at an ACD agenda, and then collect and summarize discussions on each point from discord, eth-magicians, public telegrams, etc
00:33:49	Josh Davis:	Replying to "community request: I..."

I might be working on something like this ;)
00:34:22	Justin Florentine (Besu):	Replying to "community request: I..."

omg pls. i'm 20 mins into this call and already had to expose my ignorance twice. and I haven't exactly been slacking off this week
00:34:44	ethDreamer (Mark):	If we did change things in the future
00:34:54	ethDreamer (Mark):	It would be something besides `BLOB_SCHEDULE`
00:35:01	Nicolas Consigny:	Replying to "community request: I..."

actually starting with this call every ACD summary will be posted to discourse
00:35:10	Pooja Ranjan:	Reacted to "actually starting wi..." with 🔥
00:35:16	Nicolas Consigny:	Replying to "community request: I..."

adding discord convo should only be a few more lines @Justin Florentine (Besu)
00:35:17	Bastin:	Reacted to "I might be working o..." with 🔥
00:35:41	Pooja Ranjan:	Reacted to "I might be working o..." with 🔥
00:35:44	Enrico Del Fante (tbenr):	Does anyone have the link to the BPO eip?
00:35:48	Parithosh Jayanthi:	Reacted to "omg pls. i'm 20 mins..." with ❤️
00:35:48	Justin Florentine (Besu):	Replying to "community request: I..."

sick, thank you. now just to get the devs to converse in fewer places
00:35:56	stokes:	EIP-7892
00:36:01	Barnabas Busa:	no reason to be fusaka devnet 0 if we don’t have EOF. 

We could just do BPO on peerdas devnet 7
00:36:04	Enrico Del Fante (tbenr):	Thanks!
00:36:04	ethDreamer (Mark):	https://eips.ethereum.org/EIPS/eip-7892
00:36:16	Francis Li:	Reacted to "https://eips.ethereu…" with ❤️
00:36:18	nixo:	Reacted to "https://eips.ethereu..." with ❤️
00:36:21	Justin Traglia:	Reacted to "https://eips.ethereu..." with ❤️
00:36:22	Barnabas Busa:	Reacted to "https://eips.ethereu..." with ❤️
00:36:24	Nicolas Consigny:	Replying to "community request: I..."

https://github.com/ethereum/pm/blob/master/.github/ACDbot/README.md
00:36:25	ethDreamer (Mark):	👍
00:36:29	terence:	ship it
00:36:29	Enrico Del Fante (tbenr):	go
00:36:31	nflaig:	Reacted to "https://eips.ethereu..." with ❤️
00:36:43	Parithosh Jayanthi:	Have all clients had a look through their codebase and can confirm there aren’t any big foot guns with BPO?
00:38:00	Parithosh Jayanthi:	Afaik eof-devnet-1 should be ready by may 20th
00:38:28	Parithosh Jayanthi:	And the eof people are aware of the timelines
00:38:40	Ben Adams:	can do with eof-devnet-0 now; if that helps?
00:39:01	ethDreamer (Mark):	🎉
00:39:03	Justin Florentine (Besu):	Reacted to "Have all clients had..." with 👍
00:39:15	Justin Traglia:	Reacted to "🎉" with 🎉
00:39:17	Parithosh Jayanthi:	Replying to "can do with eof-devn..."

Not really, we’d like to merge the peerdas-eof worlds with eof-devnet-1, and do any changes on both side after that point
00:39:29	Parithosh Jayanthi:	Replying to "can do with eof-devn..."

But yeah, if the timeline sounds wrong then we would ofc re-evaluate
00:39:33	Parithosh Jayanthi:	Reacted to "🎉" with 🎉
00:39:47	Ben Adams:	Reacted to "Not really, we’d lik..." with 👍
00:39:53	Barnabas Busa:	Reacted to "Not really, we’d lik..." with 👍
00:39:55	Toni Wahrstätter:	Reacted to "🎉" with 🎉
00:39:59	Dragan Rakita:	Reacted to "Not really, we’d lik..." with 👍
00:40:00	Anna Thieser:	Reacted to "🎉" with 🎉
00:40:28	Ansgar Dietrichs:	I’d be for accepting EIP-7917, and for rejecting the others
00:40:44	Barnabas Busa:	https://github.com/ethereum/EIPs/blob/master/EIPS/eip-7917.md
00:40:54	Francis Li:	Reacted to "🎉" with 🎉
00:40:54	Gajinder Singh:	Replying to "I’d be for accepting..."

+1
00:41:15	Ansgar Dietrichs:	but weak on support for EIP-7917 (seems quite useful, but also: small fork!), happy to reject it if otherwise little support
00:41:45	Ahmad Bitar | Nethermind:	Reacted to I’d be for accepting... with "➕"
00:41:50	Gajinder Singh:	Reacted to "I’d be for accepting..." with ➕
00:41:50	nixo:	Reacted to "I’d be for accepting..." with ➕
00:42:52	Gajinder Singh:	7688 is important as well imo
00:42:57	Justin Florentine (Besu):	Replying to "I’d be for accepting..."

am i correct in assuming it facilitates early execution, which facilitates sealed tx and encrypted mempool designs?
00:43:10	Dmitry Gusakov:	Reacted to "7688 is important as..." with 💯
00:43:45	Justin Florentine (Besu):	Replying to "I’d be for accepting..."

sorry - delayed execution
00:43:51	Radek:	https://ethereum-magicians.org/t/reconfiguring-allcoredevs/23370
00:43:58	nflaig:	Reacted to "7688 is important as..." with 💯
00:43:58	ethDreamer (Mark):	Lighthouse is weakly in favor of 7917 so long as clients have an easy time of implementing it - it was very easy in lighthouse - enough to not delay the fork at all
00:44:34	Phil Ngo:	+1 Radek. I think 7688 is important and so is 7917, but we’re opening doors now that resemble Pectra where things get added and we have to question why X over Y
00:44:38	ethDreamer (Mark):	Replying to "7688 is important as..."

There are no consensus data structure changes in this fork
00:44:51	NC:	Reacted to "+1 Radek. I think 76..." with ➕
00:44:55	Toni Wahrstätter:	Reacted to "+1 Radek. I think 76..." with ➕
00:44:56	Parithosh Jayanthi:	Isn’t CFI when we include it in a devnet though? SFI is what goes in a fork
00:44:57	Tim Beiko:	At most, we should CFI, but not SFI anything else until we’ve got the devnets done 😄
00:45:00	Ivan Metrikin:	Reacted to "7688 is important as..." with 💯
00:45:02	Sophia Gold:	Reacted to "+1 Radek. I think ..." with ➕
00:45:02	Dustin:	Reacted to "+1 Radek. I think ..." with ➕
00:45:08	Trent:	Reacted to "At most, we should C..." with 👍
00:45:10	Mehdi Aouadi:	Reacted to "+1 Radek. I think 76..." with ➕
00:45:14	Gajinder Singh:	we shouldn't shy away from CFI
00:45:17	nflaig:	Replying to "7688 is important as..."

if EIP-7917 gets in there is
00:45:22	Barnabas Busa:	Reacted to "we shouldn't shy awa..." with 👍
00:45:29	Justin Florentine (Besu):	starting to think maybe we just lack discipline
00:45:37	nixo:	Reacted to "starting to think ma..." with 😅
00:45:42	ethDreamer (Mark):	Replying to "7688 is important as..."

It wouldn’t break proofs though even if it is included
00:45:43	Tim Beiko:	Replying to "Isn’t CFI when we in..."

CFI → we plan to include it in a devnet
SFI → next devnet

We should expect that not all CFI’d EIPs get eventually SFI'd
00:45:48	Toni Wahrstätter:	Reacted to "starting to think ma..." with 😇
00:45:49	ethDreamer (Mark):	Replying to "7688 is important as..."

That was my understanding
00:46:06	Parithosh Jayanthi:	Reacted to "CFI → we plan to inc..." with 🔥
00:46:41	Ansgar Dietrichs:	looks like justin drake is on the call to maybe give some context on how much of a difference it would make for this to be in fusaka vs glamsterdam?
00:46:53	stokes:	Replying to "looks like justin dr..."

@Justin Drake ?
00:47:30	terence:	for prysm
2 days to implement, 1 day to test, a few weeks on a devote / testnet etc etc
00:47:40	terence:	potuz already evaluated the pr
00:47:48	ethDreamer (Mark):	Reacted to "for prysm
2 days to ..." with 👍
00:47:52	Dmitry Gusakov:	Reacted to "for prysm
2 days to ..." with 👍
00:48:12	Justin Drake:	Replying to "looks like justin dr..."

It allows preconf teams to skip hacky solutions for the lookahead and ship preconfs months earlier.
00:48:23	Ahmad Bitar | Nethermind:	Reacted to It allows preconf te... with "💯"
00:48:23	Dmitry Gusakov:	Reacted to "It allows preconf te..." with 👍
00:48:25	Dmitry Gusakov:	Reacted to "It allows preconf te..." with 💯
00:48:37	Parithosh Jayanthi:	Replying to "looks like justin dr..."

Are there other blockers for preconfs? Or is this the biggest blocker right now?
00:48:51	Trent:	Replying to "At most, we should C..."

Bumping this
00:48:57	Parithosh Jayanthi:	Reacted to "At most, we should C..." with 👍
00:49:00	Gajinder Singh:	Reacted to "At most, we should C..." with 👍
00:49:16	Dustin:	Reacted to "At most, we should..." with 👍
00:49:19	Dmitry Gusakov:	Yep
00:49:21	ethDreamer (Mark):	👍
00:49:35	Justin Drake:	Replying to "looks like justin dr..."

On L1 it’s the only blocker.
00:49:45	Parithosh Jayanthi:	Reacted to "On L1 it’s the only ..." with 👍🏽
00:50:04	NC:	If we CFI 7917, then we can consider CFI 7688, since the original argument of not CFI 7688 is that there is no consensus data structure change in fusaka (which there will be in 7917).
00:50:27	Gajinder Singh:	why is beacon state so sacrosanct ?
00:50:41	Ansgar Dietrichs:	I do think “better L2 UX” should be a general top priority right now. I am not familiar enough with preconfs or this EIP to judge how much of an impact the EIP would have on that
00:50:50	Dustin:	Replying to "why is beacon stat..."

it changes proofs
00:50:54	ethDreamer (Mark):	Replying to "why is beacon state ..."

It’s not, but for clients who are not prepared it’s a good amount of boiler plate
00:50:58	Barnabas Busa:	Reacted to "I do think “better L..." with 👍
00:51:11	Phil Ngo:	Reacted to "If we CFI 7917, then..." with ➕
00:51:14	ethDreamer (Mark):	Replying to "why is beacon state ..."

My understanding is that this field does not change proofs
00:51:39	Gajinder Singh:	Replying to "why is beacon state ..."

for proofs can we please do 7688 , lets not keep tying our hands behind while driving this huge vehicle
00:51:40	Dustin:	Replying to "why is beacon stat..."

does it not reorder or push anything over a power of 2? ok
00:51:59	terence:	The question is whether EIP7917 introduces any delays to Fusaka
00:52:01	ethDreamer (Mark):	Replying to "why is beacon state ..."

Yes that is my understanding dustin
00:52:11	stokes:	Replying to "The question is whet..."

I think we all agree if it does we take it out
00:52:50	George Kadianakis:	Reacted to I do think “better L... with "👍"
00:52:51	Gajinder Singh:	Replying to "why is beacon state ..."

even if it doesn't change proof tree, 7688 we should do and make furture life easy for app layer
00:53:00	sean:	Well not “stable” without  7688😄
00:53:07	Carl Beekhuizen:	Reacted to "I do think “better L…" with 👍
00:53:16	Gajinder Singh:	Reacted to "I do think “better L..." with 👍
00:53:24	ethDreamer (Mark):	I don’t see why we wouldn’t doo 7688 the next time we have a consensus data structure change that breaks proofs
00:53:32	James He:	7549 was such a headache
00:53:32	Trent:	This is just CFI, why the extensive scheduling discussion?
00:53:40	stokes:	Replying to "This is just SFI"

CFI?
00:53:42	ethDreamer (Mark):	Replying to "why is beacon state ..."

Doing it that way is exactly the same amount of work for the app layer
00:53:47	Tim Beiko:	+1 Radek, and this is why we should only add a couple EIPs to each new devnet. And if we do CFI 7688 too, I’d caution against doing both at the same time.
00:53:47	Parithosh Jayanthi:	Yes CFI != SFI
00:53:50	Ansgar Dietrichs:	agree with Radek - obv we can’t have 20 different EIP statuses, but we should move this to “CFI but we kick it out if it creates any significant issues”
00:54:05	Trent:	Reacted to "CFI?" with 👍
00:54:12	ethDreamer (Mark):	Replying to "why is beacon state ..."

No matter what, the app layer will need to fix proofs at least one more time - hopefully exactly one more time
00:54:18	Gajinder Singh:	Replying to "I do think “better L..."

100% we should keep building the DA moat
00:54:29	Dustin:	Replying to "This is just CFI, ..."

creates some risk of assumed-by-default-lean-yes
00:54:30	Sophia Gold:	Reacted to "At most, we should..." with 👍
00:54:36	Parithosh Jayanthi:	Reacted to "creates some risk of..." with 👍🏽
00:54:42	Gajinder Singh:	scope is known
00:54:59	Parithosh Jayanthi:	Replying to "This is just CFI, wh..."

CFI still means we spend some resources on it, so we cannot CFI lightly
00:55:00	Francesco:	Replying to "This is just CFI, wh..."

That seems a bit less of a problem than in the past, given that we’re saying it should not be added to a devnet at least until peerdas and eof are stable
00:55:13	Francesco:	Replying to "This is just CFI, wh..."

*responding to assumed-by-default-lean-yes
00:56:11	Trent:	Replying to "This is just CFI, wh..."

@Parithosh Jayanthi the CFI party last week indicates otherwise 😅
00:56:15	terence:	do we have spec tests for this eip we can start testing?
00:56:19	Parithosh Jayanthi:	Reacted to "@Parithosh Jayanthi ..." with 🥲
00:56:24	stokes:	Replying to "do we have spec test..."

There are some
00:56:28	Enrico Del Fante (tbenr):	We are ok to run a devnet for this at best effort (the focus is 100% on peerDas) and if first doubt or complexity, let’s throw it away.
00:56:29	terence:	Reacted to "There are some" with 👍
00:56:40	Ansgar Dietrichs:	Reacted to "We are ok to run a d..." with 👍
00:56:50	Sophia Gold:	Reacted to "I do think “bette..." with 👍
00:56:53	Parithosh Jayanthi:	Reacted to "We are ok to run a d..." with 👍
00:57:12	Ansgar Dietrichs:	meaning also, the preconf ppl should be clear that there is no shipping guarantee yet, they should make plans accordingly
00:58:02	Barnabas Busa:	exact same argument as before.
00:58:03	Justin Traglia:	Reacted to "We are ok to run a d..." with 👍
00:58:06	Dustin:	Replying to "meaning also, the ..."

yes, would prefer if they stopped with the "we're all thundering now towards mainnet get ready!"
00:58:19	Phil Ngo:	If we’re going to CFI 7919, I don’t see why we would not CFI 7688 either then
00:58:19	Barnabas Busa:	these two EIPs should go hand by hand
00:58:24	Barnabas Busa:	either include both or either
00:58:31	Gajinder Singh:	CFI 7919 and 7688
00:58:32	Radek:	Oh, so it's 2 EIPs now... Hmmm...
00:58:36	Dustin:	Replying to "meaning also, the ..."

it's apparently misleading marketing
00:58:44	Radek:	Now I am against again
00:59:12	Enrico Del Fante (tbenr):	We can bound them in a devnet, for tegu is ok but not all clients have 7688 ready
00:59:18	ethDreamer (Mark):	Reacted to "I do think “better L..." with 👍
00:59:28	terence:	For CFI, clients have to at least make an attempt to implement it right
00:59:32	Radek:	Please one EIP for F-fork, maybe more for G-fork if things go well
00:59:40	Parithosh Jayanthi:	Reacted to "Screenshot2025_04_17_164701.jpg" with 😂
00:59:40	Gajinder Singh:	we can drop 7688 is clients are not ready by the time we are there to consider for SFI
00:59:41	Dmitry Gusakov:	Reacted to "Screenshot2025_04_17_164701.jpg" with 😂
00:59:44	Kevaundray Wedderburn:	Reacted to "Screenshot2025_04_17_164701.jpg" with 😂
00:59:45	Enrico Del Fante (tbenr):	Reacted to "Screenshot2025_04_17_164701.jpg" with 💯
00:59:46	Bastin:	Reacted to "Barnabas Busa has se..." with 😂
00:59:47	Justin Traglia:	Reacted to "Screenshot2025_04_17_164701.jpg" with 😂
00:59:47	nflaig:	Reacted to "Barnabas Busa has se..." with 😂
00:59:49	Toni Wahrstätter:	Reacted to "Barnabas Busa has se..." with 😂
01:00:01	Marius:	Reacted to Screenshot2025_04_17_164701.jpg with "😂"
01:00:25	Hsiao-Wei Wang:	Reacted to "Screenshot2025_04_17_164701.jpg" with 😂
01:00:29	NC:	The sooner we get 7688 in, the more benefit we get out of it
01:00:34	James He:	Reacted to "Screenshot2025_04_17_164701.jpg" with 😂
01:00:36	Justin Florentine (Besu):	reminder: we are aiming for 6 month hardforks, not 12
01:00:39	Tim Beiko:	Why does 7688 help 7917?
01:00:42	felix (eest):	Reacted to "Screenshot2025_04_..." with 😂
01:00:44	Tim Beiko:	Reacted to "reminder: we are aim..." with ➕
01:00:49	Toni Wahrstätter:	7917 changes the tree depth which the other solves. 7917 will work without stable containers
01:00:56	Nicolas Consigny:	Reacted to "Screenshot2025_04_17_164701.jpg" with 😂
01:00:57	Tim Beiko:	Reacted to "7917 changes the tre..." with 👍
01:01:09	Dmitry Gusakov:	Reacted to "7917 changes the tre..." with 👍
01:01:27	Tim Beiko:	Replying to "7917 changes the tre..."

Got it, ty! With this and Mark’s expectation, I’d lean against coupling them.
01:01:27	terence:	adding stable container will for sure delay fusaka no?
01:01:31	Mario Vega:	Reacted to "Screenshot2025_04_17_164701.jpg" with 😂
01:01:55	kasey:	For prysm, we have a good handle on 7688 for most consensus types, but it would require some complicated changes to our state object, so there is some scope risk if we’re changing state.
01:01:55	Gajinder Singh:	no need to couple, we can drop 7688 later if need be
01:02:46	Gajinder Singh:	lodestar is ready for 7688
01:02:57	Dustin:	Nimbus has 7688 in good condition
01:03:11	Barnabas Busa:	any client has made no progress of 7688?
01:03:25	kasey:	Replying to "For prysm, we have a..."

The state essentially does not use our ssz library because of merkleization optimizations.
01:03:34	Marius:	Small forks lfg
01:03:36	ethDreamer (Mark):	I need to confirm that we’re not crossing a power of 2 boundary but that was my understanding from the last time we discussed it
01:03:40	Barnabas Busa:	we can’t do small forks
01:03:43	Barnabas Busa:	lmao
01:03:48	Josh Davis:	Reacted to "we can’t do small fo..." with 😂
01:03:51	Dustin:	3 months seems excessive for deployment/testing concerns
01:04:01	Sophia Gold:	I think six months is reasonable
01:04:04	Tim Beiko:	Reacted to "I think six months i..." with 👍
01:04:08	Sophia Gold:	Maybe you say 3 and end up with 6 :)
01:04:11	kasey:	Reacted to "I think six months i..." with 👍
01:04:14	Parithosh Jayanthi:	Reacted to "3 months seems exces..." with 👍🏽
01:04:17	Gajinder Singh:	Reacted to "I think six months i..." with 👍
01:04:18	Justin Florentine (Besu):	Replying to "we can’t do small fo..."

difficulty bomb diffusing has entered the chat
01:04:44	Justin Florentine (Besu):	Reacted to "I think six months i..." with 👍
01:04:55	Gajinder Singh:	Replying to "we can’t do small fo..."

but we can 6mnths
01:05:04	Tim Beiko:	Replying to "Maybe you say 3 and ..."

The only way to do it 😄
01:05:20	Parithosh Jayanthi:	Reacted to "difficulty bomb diff..." with 😂
01:06:20	Barnabas Busa:	we don’t have a way to test small forks
01:06:43	Ansgar Dietrichs:	love a good acd pep talk :-)
01:06:52	Bastin:	Reacted to "love a good acd pep ..." with 😆
01:06:55	Dmitry Gusakov:	Reacted to "love a good acd pep ..." with 😆
01:06:56	Tim Beiko:	amen
01:06:57	Phil Ngo:	So we should DFI both and just try to get Glamsterdam faster because we limited Fusaka
01:07:04	Dmitry Gusakov:	Reacted to "So we should DFI bot..." with 💯
01:07:07	Justin Florentine (Besu):	Reacted to "So we should DFI bot..." with 💯
01:07:20	James He:	Reacted to "So we should DFI bot..." with 💯
01:07:23	NC:	So we couple 7917 and 7688?
01:07:50	Dustin:	Reacted to "So we should DFI b..." with 💯
01:07:53	Bastin:	Reacted to "So we should DFI bot..." with 💯
01:07:55	felix (eest):	Reacted to "So we should DFI b..." with 💯
01:10:57	Dustin:	relays/builders wait intentionally to return information anyway until it's useless for the proposer
01:11:18	nflaig:	we usually receive block via gossip sooner than from api response
01:11:27	Manu:	Reacted to "we usually receive b..." with 👍
01:11:31	Dustin:	Reacted to "we usually receive..." with 👍
01:11:37	Toni Wahrstätter:	What about just some 200 response. What would the payload give me without the blobs?
01:11:40	Manu:	Most relays apply a 1 second delay
01:11:45	Enrico Del Fante (tbenr):	And even sometimes we timeout on response 🙂
01:11:57	Dustin:	Replying to "we usually receive..."

exactly, we hae a bug filed around this even, because it looks like it "fails sending" because of gossip val checks
01:12:02	Manu:	Between publishing block on P2P and responding to the HTTP request
01:12:07	Manu:	Reacted to "And even sometimes w..." with 👍
01:12:11	Francesco:	It’s completely useless to return anything to the proposer, if the builder/relay wanted to screw you over they could just do it
01:12:14	Enrico Del Fante (tbenr):	No data in response
01:12:22	Manu:	Reacted to "It’s completely usel..." with 👍
01:12:24	Dustin:	Reacted to "It’s completely u..." with 👍
01:13:22	nflaig:	202 status code would be better and not return anything
01:13:23	Toni Wahrstätter:	Return a positive response after the relay propagated
01:13:32	Oisin Kyne:	would this impact the trust assumptions/risks faced by peerDAS? if we have a handful of relays only, how sure are we blobs will be available on p2p?
01:13:57	Oisin Kyne:	Reacted to "202 status code woul..." with 👍🏽
01:14:11	Gajinder Singh:	good with empty response
01:14:20	Francesco:	Replying to "would this impact th..."

It doesn’t. If the relay doesn’t publish the block or blobs, it will not end up being canonical
01:14:24	Enrico Del Fante (tbenr):	Replying to "202 status code woul..."

Status code is actually nothing 🙂
01:14:48	Oisin Kyne:	Reacted to "It doesn’t. If the r..." with 👍🏽
01:14:48	Toni Wahrstätter:	does "leave it alone" mean full response with blobs?
 if so, then no, make the response small but existing.
01:14:57	Dustin:	the main requirement would be that the builder API specs explicitly require the builders/relays to propagate things
01:14:59	Dustin:	it doesn't right now
01:15:33	Enrico Del Fante (tbenr):	Replying to "the main requirement..."

IIRC it has been specified somewhere that they are responsible
