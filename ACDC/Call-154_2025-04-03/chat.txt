00:05:28	Gabe:	Gm :)
00:07:00	nixo:	Replying to "Gm :)"

gm
00:07:07	lightclient:	sounds great
00:07:21	Justin Drake:	probably just my setup, sorry
00:07:59	stokes:	https://github.com/ethereum/pm/issues/1399
00:08:07	Justin Florentine (Besu):	goooooooood morning consensus layooooors
00:08:24	Katya Riazantseva:	Reacted to "goooooooood morning ..." with ❤️
00:08:26	nixo:	Reacted to "goooooooood morning ..." with ❤️
00:08:53	Enrico Del Fante (tbenr):	Reacted to "goooooooood morning ..." with ❤️
00:10:05	Fredrik:	Reacted to "goooooooood morning ..." with 🧖
00:11:41	Barnabas Busa:	you could fill up the queue, exit, fill up the queue, exit
00:12:22	Barnabas Busa:	we did 700k validator topup, 1ETH each on holesky. Thats gonna take quite a while to dequeue.
00:13:22	Barnabas Busa:	it will take about 1/2 year to dequeue all these.
00:13:25	Parithosh Jayanthi:	https://ethpandaops.io/posts/hoodi-attestation-packing/
00:13:31	Parithosh Jayanthi:	https://discord.com/channels/595666850260713488/892088344438255616/1357271429720051752
00:14:08	ethDreamer (Mark):	Reacted to "goooooooood morning ..." with ❤️
00:14:20	Parithosh Jayanthi:	Terence’s doc: https://hackmd.io/@ttsao/attestation-packing-pectra
00:18:04	terence:	nice nice, that is better than the prysm way
00:19:05	Enrico Del Fante (tbenr):	Reacted to "nice nice, that is b..." with ❤️
00:21:25	Dustin:	arguably more important than the att stuff is some real consensus issues, multiple of them
00:21:31	nixo:	I will reiterate: several members of the community asked for 30 days and if we confirm the date today, it’s less than that
00:21:38	Fredrik:	I suggest +30 days as agreed earlier
00:21:38	Dustin:	now fixed but discovered late
00:21:43	Enrico Del Fante (tbenr):	In teku we have a preference for mid May
00:21:58	Tim Beiko:	Options here: https://github.com/ethereum/pm/issues/1374#issuecomment-2741823829
00:22:28	Enrico Del Fante (tbenr):	2025-05-14 or 2025-05-07 for us
00:22:35	nixo:	Reacted to "2025-05-14 or 2025-0..." with ➕
00:22:46	Som - Erigon:	Reacted to "2025-05-14 or 2025..." with ➕
00:22:47	Josh Davis:	From YouTube “Clara van Staden

Would prefer May 7, Given that we need about 30 days to pass upgrade referendum”
00:22:57	Barnabas Busa:	may 7 LFG
00:23:00	Tim Beiko:	I like May 7 😄
00:23:03	Tim Beiko:	Any EL teams have concerns?
00:23:04	Rostislav Bortman:	Reacted to "I like May 7 😄" with ❤️
00:23:05	Karlos Zurutuza:	Reacted to "I like May 7 😄" with ❤️
00:23:05	Som - Erigon:	May 7
00:23:11	Phil Ngo:	Ok with May 7th for us. I think we want to ensure Prysm, Teku and Lighthouse are comfy
00:23:30	Parithosh Jayanthi:	Reacted to "I like May 7 😄" with ❤️
00:23:30	terence:	May 7 is fine with us
00:23:34	Parithosh Jayanthi:	LFG May 7th
00:23:36	Enrico Del Fante (tbenr):	👍
00:23:42	Ahmad Bitar | Nethermind:	👍
00:23:43	Mallesh:	Reacted to LFG May 7th with "🔥"
00:23:52	NC:	Reacted to "Ok with May 7th for …" with 👍
00:24:48	mikeneuder:	Reacted to "I like May 7 😄" with ❤️
00:25:31	spencer-tb:	Reacted to "I like May 7 😄" with ❤️
00:25:32	Julia:	Is this the confirmed date now?
00:25:48	spencer-tb:	May the 7th be with you
00:25:52	Mallesh:	Reacted to May the 7th be with ... with "😂"
00:25:54	Tim Beiko:	Reacted to "May the 7th be with ..." with 🫡
00:25:56	Mehdi Aouadi:	Reacted to "May the 7th be with ..." with 😂
00:25:56	Enrico Del Fante (tbenr):	Reacted to "May the 7th be with ..." with 🫡
00:25:57	Enrico Del Fante (tbenr):	Reacted to "May the 7th be with ..." with 😂
00:25:57	Barnabas Busa:	Reacted to "May the 7th be with ..." with 😂
00:26:00	Fredrik:	Reacted to "May the 7th be with ..." with 🫡
00:26:01	Parithosh Jayanthi:	Reacted to "May the 7th be with ..." with 🫡
00:26:01	Will Corcoran:	Happy Ether
00:26:03	Barnabas Busa:	Reacted to "Is this the confirme..." with 👍
00:26:04	Hsiao-Wei Wang:	Reacted to "May the 7th be with ..." with 🫡
00:26:09	Parithosh Jayanthi:	Reacted to "Is this the confirme..." with 👍
00:26:10	Chris:	Reacted to "May the 7th be wit..." with 😂
00:26:11	Ahmad Bitar | Nethermind:	Reacted to "May the 7th be with ..." with 🫡
00:26:11	Tim Beiko:	Reacted to "Happy Ether" with 😄
00:26:12	Lion dapplion:	May 7th ok
00:26:14	Chris:	Reacted to "Happy Ether" with 😄
00:26:22	Trent:	LFG
00:26:35	Barnabas Busa:	someone already celebrating
00:26:39	Josh Davis:	Reacted to "someone already cele..." with 😅
00:26:40	spencer-tb:	Reacted to "someone already cele..." with 🙌
00:26:40	mikeneuder:	Reacted to "someone already cele..." with 😅
00:26:40	Parithosh Jayanthi:	Reacted to "someone already cele..." with 😅
00:26:40	Ahmad Bitar | Nethermind:	Reacted to "someone already cele..." with 😅
00:26:40	Mario Vega:	Reacted to "someone already cele..." with 😅
00:26:42	Som - Erigon:	Reacted to "someone already ce..." with 😅
00:26:44	ethDreamer (Mark):	Reacted to "someone already cele..." with 😅
00:26:47	Bastin:	Reacted to "someone already cele..." with 😅
00:26:48	felix (eest):	Reacted to "someone already ce..." with 😅
00:26:48	Trent:	Gary u were unmuted shameeee
00:26:57	Parithosh Jayanthi:	Specs: https://notes.ethereum.org/@ethpandaops/peerdas-devnet-6
00:27:04	nixo:	Reacted to "someone already cele..." with 😅
00:27:12	nixo:	Reacted to "May the 7th be with ..." with 😂
00:27:28	Will Corcoran:	https://github.com/ethereum/pm/issues/1415
00:27:32	Will Corcoran:	Breakout agenda
00:27:32	Parithosh Jayanthi:	The kurtosis config already works
00:27:34	Parithosh Jayanthi:	So you can test stuff
00:27:43	stokes:	https://hackmd.io/@ralexstokes/blob-acc-2025
00:27:59	Lion dapplion:	Releases when?
00:28:14	pmmiranda:	Reacted to "someone already cele..." with 😅
00:29:40	Tim Beiko:	April 22nd at the latest, ideally 21 or earlier.
00:30:17	Ansgar Dietrichs:	I do like this “programmatic step-wise ramp-up” plan. But we should set the endstate maximum based on the empirical devnet stability close to the fork. only go to 48/72 if we have that stable on devnets by fusaka.
00:30:19	Tim Beiko:	By then, please also fill out who from your team will be on call for the release: https://github.com/ethereum/pm/blob/master/Pectra/pectra-mainnet-plan.md
00:30:37	Tim Beiko:	Replying to "I do like this “prog..."

It depends how far out we set the schedule
00:31:22	Parithosh Jayanthi:	Replying to "I do like this “prog..."

Btw re: your call to get more data on peerdas testing, its available here: https://discord.com/channels/595666850260713488/1252403418941624532/1357199183395819623
00:31:31	Dustin:	+1 yeah, to no precommitments of that sort, it creates fake emergency
00:32:04	Tim Beiko:	+1 on a rollback of the limit
00:32:19	Barnabas Busa:	isn’t this what testnets are for?
00:32:20	mikeneuder:	Reacted to "+1 on a rollback of ..." with 🦾
00:32:24	Ansgar Dietrichs:	can’t we use testnets for rollback testing?
00:32:24	Roman:	Reacted to "+1 on a rollback of ..." with 👍
00:32:28	Ansgar Dietrichs:	Reacted to "isn’t this what test..." with 👍
00:32:33	Tim Beiko:	Yes, but we should test it before 😄
00:32:37	Ansgar Dietrichs:	Reacted to "Yes, but we should t..." with 👍
00:32:41	Barnabas Busa:	Reacted to "Yes, but we should t..." with 👍
00:32:53	Ansgar Dietrichs:	Replying to "Yes, but we should t..."

agree, also to make sure we understand how to do it fast. but I do think testnets are a better place for that
00:32:55	kasey:	Yes we should do testnets of course. My concern re testnests would be that there is software only running in production.
00:33:17	ethDreamer (Mark):	Reacted to "Yes we should do tes..." with 👍
00:33:19	Parithosh Jayanthi:	Reacted to "Yes we should do tes..." with 👍🏽
00:33:42	Lion dapplion:	Only 2 weeks for the network to update feels short? Why not call for releases a week before?
00:33:45	Barnabas Busa:	programmatic ++ 
stakers —
00:33:48	Enrico Del Fante (tbenr):	We like a simpler approach
00:33:50	Roman:	+1 to programatic. having stakers vote would just be coordination overhead
00:33:50	Ansgar Dietrichs:	seems like the staker control could add complexity? how simple is that?
00:33:53	kasey:	Replying to "Yes we should do tes..."

And it would be good to discover mainnet issues without some other issue ongoing.
00:33:56	Enrico Del Fante (tbenr):	Which is programmatic 🙂
00:34:04	nixo:	Reacted to "programmatic ++ 
sta..." with ➕
00:34:05	Parithosh Jayanthi:	Reacted to "programmatic ++ 
sta..." with ➕
00:34:05	Roman:	Reacted to "programmatic ++ 
sta..." with ➕
00:34:22	nflaig:	Replying to "Only 2 weeks for the..."

+1 this two week time windows makes no sense
00:34:28	Ben Adams:	Ideologically stakers would be better; practically programmatically would be better
00:34:36	Trent:	Echoing this, but Tim might have context from the other upgrades?
00:34:44	stokes:	https://github.com/ethereum/pm/issues/1399#issuecomment-2762101549
00:34:55	Ansgar Dietrichs:	well there would be the Erigon-style option of validator control, but with a programmatic ramp-up of the voting defaults in clients
00:35:22	Ansgar Dietrichs:	Replying to "well there would be ..."

I would not actually hate that idea, main worry would be complexity
00:35:53	Tim Beiko:	Replying to "Only 2 weeks for the..."

Shapella was about 2 weeks, so was Dencun
00:36:07	Trent:	Replying to "Only 2 weeks for the..."

Should it be 3 tho?
00:36:15	Barnabas Busa:	Could we actually agree firmly that we need BPO, don’t care about specifics, but we should stop going back and forth on it.
00:36:25	stokes:	Replying to "Could we actually ag..."

Seems like we are on this page today
00:36:35	Tim Beiko:	Replying to "Only 2 weeks for the..."

I’m fine with whatever, but if client teams are concerned, can you please raise it on the actual call rather than side comment in the chat 😅?
00:36:55	stokes:	Replying to "Could we actually ag..."

Can make explicit call out in next section with SFI’d EIPs
00:38:33	Barnabas Busa:	could it be done without delaying the fork?
00:38:58	Tim Beiko:	I updated the Meta EIP with the new timestamp.  Can I get a couple +1s before merging 😄 ?

https://github.com/ethereum/EIPs/pull/9560
00:39:00	ethDreamer (Mark):	Replying to "could it be done wit..."

I did it very quickly so yes
00:39:28	nflaig:	Replying to "Only 2 weeks for the..."

wait I thought we are talking about having the first bump in BPO fork after 2 weeks 😅
00:39:32	ethDreamer (Mark):	Replying to "could it be done wit..."

Like it was a couple hours and a big part of that was because I don’t know the reth codebase
00:39:33	Barnabas Busa:	Reacted to "I updated the Meta E..." with 👍
00:40:01	NC:	Reacted to "I updated the Meta E..." with 👍
00:41:55	Barnabas Busa:	client teams can already make releases today :D
00:42:01	lightclient:	Reacted to "client teams can alr..." with 😦
00:42:02	lightclient:	Reacted to "client teams can alr..." with 🚀
00:42:04	Rostislav Bortman:	Reacted to "client teams can alr..." with 🚀
00:43:23	Barnabas Busa:	Would any client teams feel uncomfortable having mainnet releases out by 16of April?
00:44:11	Chris:	Aren't client teams still working on the attestation packing? I'm not sure clients are ready today
00:44:37	Tim Beiko:	Client teams can also put out releases before the EF blog post goes out :-D
00:44:42	Barnabas Busa:	Replying to "Aren't client teams ..."

EL teams don’t have to deal with that. Heard @lightclient is keen.
00:44:57	Dustin:	these "early versions" aren't that useful, if the plan is to do day-1 patches just wait
00:45:01	terence:	why not just define the minimal time that clients have to release by and if teams want to release earlier then release earlier
00:45:06	stokes:	Reacted to "why not just define ..." with 👍
00:45:09	Parithosh Jayanthi:	Reacted to "why not just define ..." with 👍
00:45:09	Barnabas Busa:	Reacted to "why not just define ..." with 👍
00:45:14	Josh Davis:	Reacted to "why not just define ..." with 👍
00:45:32	Barnabas Busa:	Replying to "why not just define ..."

lets make that 16th of April.
00:45:42	Barnabas Busa:	Replying to "why not just define ..."

2 weeks from now, 3 weeks before the fork.
00:46:00	Barnabas Busa:	Replying to "why not just define ..."

And then the blog post can go out on 16th as well.
00:46:05	lightclient:	so mainnet releases by april 16 ?
00:46:12	Barnabas Busa:	Reacted to "so mainnet releases ..." with 👍
00:46:22	Mario Vega:	Replying to "Would any client tea..."

We haven’t made a release from tests with these EIP changes:
https://github.com/ethereum/EIPs/pull/9508 
https://github.com/ethereum/EIPs/pull/9582 
It’s a very simple client change, but tests take longer
00:46:30	Tim Beiko:	Replying to "so mainnet releases ..."

Mainnet blog post going out on April 22
00:46:47	Tim Beiko:	Replying to "so mainnet releases ..."

Clients can do whatever they want, but if no releases by EOD April 22, you’re getting a “TBA” in the blog post 😄
00:47:03	marek:	Reacted to "Clients can do whate..." with 👍
00:47:53	Rostislav Bortman:	Reacted to "Clients can do whate..." with 👍
00:49:08	Mario Vega:	Replying to "Would any client tea..."

Although it’s unlikely that something comes out of this due to the unrealistic scenario so we should be ok
00:51:16	Karlos Zurutuza:	Reacted to "Clients can do whate..." with 👍
00:51:18	Ansgar Dietrichs:	so this is just about the CL side, right? so this is unrelated to EOF?
00:51:48	Chris:	Reacted to "Clients can do wha..." with 👍
00:52:07	nixo:	https://eips.ethereum.org/EIPS/eip-7917
00:52:22	Ladislaus:	Reacted to "https://eips.ethereu..." with 👍
00:53:49	ethDreamer (Mark):	https://github.com/ethDreamer/lighthouse/compare/unstable..deterministic_proposer_lookahead
00:54:32	Barnabas Busa:	any reason to do this at epoch transition instead of sometime in the middle of the epoch?  Feel like beacons do already enough computation on epoch transitions.
00:57:03	Potuz:	Anyone working at whisk/SLE care to say something here?
00:59:29	stokes:	Replying to "Anyone working at wh..."

You could do this with some kind of validator privacy
00:59:36	stokes:	Replying to "Anyone working at wh..."

Its not simple though
01:00:29	Potuz:	Replying to "Anyone working at wh..."

Problem I see is that this has been in the works for years and ditching years of work on something that was just proposed seems rushed
01:00:41	ethDreamer (Mark):	Replying to "Anyone working at wh..."

Current SSLE construction is also not quantum secure
01:00:45	Potuz:	Replying to "Anyone working at wh..."

Without hearing the other side and instead of “hoping” actually having research
01:01:11	Francesco:	Replying to "Anyone working at wh..."

Tbf SSLE hasn’t been actively worked on for a while, no?
01:01:23	Potuz:	Replying to "Anyone working at wh..."

There are pushes on those branches regularly
01:01:32	Francesco:	Replying to "Anyone working at wh..."

Ok not something I follow, sorry
01:01:34	Potuz:	Replying to "Anyone working at wh..."

I am not against this for the record, I think it’ s a useful feature
01:01:48	Potuz:	Replying to "Anyone working at wh..."

I just don’t like the timelines by the reasons mentioned above
01:02:04	stokes:	Replying to "Anyone working at wh..."

Which timelines?
01:02:08	mikeneuder:	https://hackmd.io/TS7ieyruQO6faT_nsf95mA 

summary doc of how the lookahead calc works if anyone forgot. i had to remind myself…
01:02:15	Potuz:	Replying to "Anyone working at wh..."

Problem I see is that this has been in the works for years and ditching years of work on something that was just proposed seems rushed
01:02:17	mikeneuder:	IBRL ? lol
01:02:23	stokes:	Reacted to "Problem I see is tha..." with 👍
01:02:29	sacha:	Reacted to "IBRL ? lol" with 😂
01:03:26	Ladislaus:	Reacted to "https://hackmd.io/TS..." with 👍
01:03:33	Gajinder Singh:	I want to propose: EIP-7898: Uncouple execution payload from beacon block to allow CLs to deal with bigger payloads from pumping the gas

https://eips.ethereum.org/EIPS/eip-7898
01:03:34	Enrico Del Fante (tbenr):	Reacted to "https://hackmd.io/TS..." with ❤️
01:04:01	Anders Elowsson:	EIP-7918 https://ethereum-magicians.org/t/eip-7918-blob-base-fee-bounded-by-execution-cost/23271
01:04:17	Justin Drake:	Reacted to "IBRL ? lol" with 😂
01:04:32	stokes:	Replying to "I want to propose: E..."

Ok, can say something after anders
01:04:37	Justin Drake:	Reacted to "https://hackmd.io/TS..." with ❤️
01:04:56	CPerezz:	Reacted to "Problem I see is tha..." with 👍
01:05:23	Ansgar Dietrichs:	seems like a reasonable change, but would be EL side, no?
01:06:28	Ansgar Dietrichs:	agree that “spiritually” any changes related to blobs have a CL connection :-)
01:06:34	Anders Elowsson:	Reacted to "agree that “spiritua..." with 😃
01:06:47	Anders Elowsson:	Replying to "agree that “spiritua..."

Hehe that’s my angle
01:06:55	Mallesh:	Reacted to agree that “spiritua... with "😂"
01:07:02	Ansgar Dietrichs:	Reacted to "Hehe that’s my angle" with 🤝
01:07:25	nixo:	Reacted to "Hehe that’s my angle" with 💙
01:07:30	Dustin:	waiting for blobs is a mess
01:07:36	Dustin:	it took months to sort out
01:08:01	Dustin:	and I mean, across the ecosystem, it wasn't any one client
01:08:13	Potuz:	https://github.com/ethereum/EIPs/blob/master/EIPS/eip-7918.md  

Cause magicians is dead
01:08:16	ethDreamer (Mark):	This is a massive change. Decoupling the ExecutionPayload from the BeaconBlock was most of the work of implementing EIP-7732
01:08:24	Dustin:	it is not a "simple" change
01:08:25	iPhone:	I don’t understand what the CL does when they don’t have the payload — they optimistically assume it will come or block until they get it?
01:08:26	Enrico Del Fante (tbenr):	Reacted to "https://github.com/e..." with 👍
01:08:28	Dustin:	in any way
01:09:31	Lin Oshitani | Nethermind:	Replying to "any reason to do thi..."

Yeah, I think it would be ok to do it few slots into the epoch. It's for the next epoch, so doesn't have to come ASAP. Especially if the computation is already heavy at epoch transition.
01:09:51	Anders Elowsson:	Replying to "https://github.com/e..."

Thanks. Actually working from this morning, super snappy
01:10:13	Lion dapplion:	Agree with Potuz, we have better solutions available
01:10:32	Lion dapplion:	This one https://ethresear.ch/t/faster-block-blob-propagation-in-ethereum/21370
01:11:44	mikeneuder:	@alex could i also talk about 7922 ? just need a few mins
01:11:49	mikeneuder:	https://ethresear.ch/t/adding-flexibility-to-ethereums-exit-queue/22061
01:11:49	stokes:	Replying to "@alex could i also t..."

Yes at the end
01:11:52	mikeneuder:	Replying to "@alex could i also t..."

o ok
01:12:00	Potuz:	For the record 7732 was also PFId
01:12:16	Potuz:	no
01:12:51	Parithosh Jayanthi:	Feature freeze peerDAS asap, harden and ship 😄
01:12:55	Potuz:	yeah
01:12:59	mikeneuder:	Reacted to "Feature freeze peerD..." with 😍
01:13:04	Francesco:	Reacted to "Feature freeze peerD..." with 👍
01:13:26	Potuz:	But if we open the can of worms of other EIPs that haven’ t been implemented at least myself will be with a knife fighting for 7732
01:13:28	Ansgar Dietrichs:	ideally by end of Q3, no? “ideally by end of year” sounds like already planning with next year
01:13:37	Parithosh Jayanthi:	Reacted to "But if we open the c..." with 🔥
01:13:41	Anders Elowsson:	Reacted to "But if we open the c..." with 😃
01:13:43	Potuz:	Replying to "ideally by end of Q3..."

Yes end of Q3
01:13:49	Potuz:	Replying to "ideally by end of Q3..."

That’s our timeline
01:14:29	sean:	Lighthouse supports it
01:14:37	Toni Wahrstätter:	For BPO, would be nice to have the blob basefee update fraction be calculated in protocol instead of having different constants in the config.
01:14:47	Ladislaus:	Reacted to "Lighthouse supports ..." with 👍
01:14:51	mikeneuder:	“researchers” is a slur now lol
01:14:55	sean:	Reacted to "“researchers” is a s..." with 😂
01:14:58	Anders Elowsson:	Reacted to "“researchers” is a s..." with 😂
01:15:00	Ladislaus:	Reacted to "“researchers” is a s..." with 😆
01:15:01	Ladislaus:	Reacted to "“researchers” is a s..." with 😆
01:15:03	Josh Davis:	Reacted to "“researchers” is a s..." with 😂
01:15:05	sacha:	Reacted to "“researchers” is a s..." with 😂
01:15:07	Ladislaus:	Reacted to "“researchers” is a s..." with 😂
01:15:37	Parithosh Jayanthi:	Reacted to "“researchers” is a s..." with 😂
01:15:44	Parithosh Jayanthi:	Reacted to "For BPO, would be ni..." with 🔥
01:15:51	Tim Beiko:	I would only CFI it, not SFI?
01:15:58	lightclient:	Replying to "“researchers” is a s..."

“now” ? 😆
01:16:09	mikeneuder:	Reacted to "“now” ? 😆" with 💔
01:16:15	Parithosh Jayanthi:	Reacted to "“now” ? 😆" with 😂
01:16:42	Ansgar Dietrichs:	if we were to include it, I would propose we agree to be very willing to kick it back out, if it looks like it causes trouble on implementation / testing / anywhere it could delay Fusaka
01:16:47	Potuz:	After having to read in Keybase weekly about consensus critical bugs in several clients, I am definitely against rushing any EIP that has just appeared and most of us haven’t even seen
01:16:54	felix (eest):	Reacted to "“researchers” is..." with 😂
01:17:00	CPerezz:	Reacted to "After having to read..." with 👍
01:17:01	Enrico Del Fante (tbenr):	Reacted to "After having to read..." with 👍
01:17:03	Parithosh Jayanthi:	Reacted to "After having to read..." with 👍
01:17:10	felix (eest):	Reacted to "After having to re..." with 👍
01:17:18	Francesco:	Reacted to "After having to read..." with 👍
01:17:26	iPhone:	Reacted to "After having to read…" with 👍
01:17:44	Tim Beiko:	Reacted to "After having to read..." with 👍
01:17:46	mikeneuder:	Reacted to "After having to read..." with 👍
01:18:03	Mikhail Kalinin:	Reacted to "After having to read..." with 👍
01:18:05	Potuz:	yes
01:18:08	Phil Ngo:	Reacted to "After having to read..." with 👍
01:18:08	Toni Wahrstätter:	Reacted to After having to read... with "👍"
01:18:38	Tim Beiko:	TBF it wasn’t clear that the “deadline” was for SFI or CFI. I’ve convinced myself this week that using the deadline to separate PFI/CFI and then devnets to separate CFI/SFI 😄
01:18:57	stokes:	Replying to "TBF it wasn’t clear ..."

Yeah, this feels like the right method
01:19:01	kasey:	In one of the prysm fulu recommendation drafts I suggested a new prioritization scheme. CFI is too 1 dimensional. We need to have a defined distinction between Required (fork is delayed if it isn’t done) and Stretch “These are features that client teams broadly agree are important, but not so critical that the fork should be delayed until they are ready. “
01:19:01	Ansgar Dietrichs:	Reacted to "TBF it wasn’t clear ..." with 👍
01:19:04	Barnabé Monnot:	Reacted to "“now” ? 😆" with 💔
01:19:24	Ansgar Dietrichs:	Reacted to "In one of the prysm ..." with 👍
01:19:46	Tim Beiko:	Replying to "In one of the prysm ..."

SFI should be our list of “required for the fork"
01:19:48	Francesco:	Replying to "In one of the prysm ..."

Are features that easy to pull out though? Feels like in the past we’ve often said “it would be harder to take it out than just go through with it at this point”
01:20:05	Tim Beiko:	Replying to "In one of the prysm ..."

@Francesco I think pulling out gets more complex as we have more features introduced at once.
01:20:07	Ansgar Dietrichs:	Replying to "In one of the prysm ..."

@Tim Beiko but EOF is a good example. It is SFI, but everyone agrees that the fork would not wait for it
01:20:17	Danno Ferrin | Ipsilon:	Replying to "In one of the prysm ..."

In a different software industry I’ve seen the separation called “Release Drivers” and “Features of Opportunity”.  Release drivers can cause deadlines to be dropped.  Deadlines can cause features of opportunity to be dropped.
01:20:34	Tim Beiko:	Replying to "In one of the prysm ..."

@Ansgar Dietrichs fair, but I also think we’re struggling with 3 buckets right now, so I’m skeptical of adding more yet
01:20:37	Ansgar Dietrichs:	Reacted to "In a different softw..." with 👍
01:20:56	Potuz:	Replying to "In one of the prysm ..."

Getting features out after implementing is indeed a problem quite often
01:21:02	Josh Davis:	Reacted to "In a different softw..." with 👍
01:21:09	ethDreamer (Mark):	I like it
01:21:11	kasey:	Replying to "In one of the prysm ..."

Actually in my full def I had something about pulling out features: "They don't interact with the required features in a way that could pose a risk to the timeline due to excess complexity in testing, or implementation details that would make them difficult to remove as we approach the fork. Ideally these are totally orthogonal to the EIPs in required."
01:21:26	ethDreamer (Mark):	Does this mean BPO is CFI or SFI?
01:21:30	kasey:	Replying to "In one of the prysm ..."

So we would not include things in stretch if there was any possibility of them interacting with a  required  eip
01:21:46	stokes:	Replying to "Does this mean BPO i..."

One sec
01:22:32	Enrico Del Fante (tbenr):	We are agnostic on 7688. We have it ready. And we are ok if we want to CFI it
01:23:08	NC:	Same with Lodestar, we have already implemented 7688. Not opposed to CFI it
01:23:12	ethDreamer (Mark):	I want to point out that the fusaka fork has no changes to consensus data structures that would impact proofs even if 7917 is included
01:23:48	ethDreamer (Mark):	Replying to "I want to point out ..."

Or at least that’s my understanding rn
01:23:53	nixo:	was already posted but reposting cuz it’s far up now: https://ethresear.ch/t/adding-flexibility-to-ethereums-exit-queue/22061
01:24:12	Mallesh:	Reacted to was already posted b... with "❤️"
01:26:10	Danno Ferrin | Ipsilon:	How do we prevent the exits from becoming 16*(M+1) exits in one block, and then M blocks of empty exits, repeated until the exit queue is empty?
01:26:19	Julia:	Can you share the link to your slides?
01:26:23	mikeneuder:	https://ethresear.ch/t/adding-flexibility-to-ethereums-exit-queue/22061
01:26:34	mikeneuder:	https://hackmd.io/@mikeneuder/eli5-ethereum-validator-exits
01:27:14	nixo:	lol
01:27:30	Ansgar Dietrichs:	danny in the chat 😢
01:28:07	Julia:	Sorry I just dropped - did you share any other links other than this one https://ethresear.ch/t/adding-flexibility-to-ethereums-exit-queue/22061 ?
01:28:09	Potuz:	Testing this will be fun
01:28:53	Josh Davis:	Replying to "Sorry I just dropped..."

https://hackmd.io/@mikeneuder/eli5-ethereum-validator-exits
01:28:58	Julia:	How much faster?
01:29:11	Mallesh:	Replying to "How much faster?" 

 8x was what we proposed
01:29:17	Julia:	Reacted to "https://hackmd.io/..." with ❤️
01:29:29	Julia:	Replying to "Sorry I just dropp..."

thanks!
01:29:46	Mallesh:	Replying to "Sorry I just dropped..." 

 There's also a draft eip fwiw
01:30:19	Julia:	Reacted to "8x was what we pro..." with 😮
01:31:15	Ansgar Dietrichs:	I do think that going forward we should focus less on shipping staking features, and more on features for real users (DA for L2s, FOCIL, delayed execution / ePBS, …)

If there is still room in Glamsterdam, this does seem like a nice-to-have
01:31:27	Parithosh Jayanthi:	Reacted to "Testing this will be..." with 🥲
01:31:28	Julia:	are these changes post pectra or in pectra?
01:31:36	Parithosh Jayanthi:	I nominate potuz to test this
01:31:42	Mallesh:	Reacted to Testing this will be... with "😂"
01:32:04	Josh Davis:	Replying to "are these changes po..."

Post-Pectra
01:32:05	Julia:	great stuff
01:32:18	Julia:	that completely changes the game 🎉
01:32:22	Mallesh:	Reacted to I nominate potuz to ... with "❤️"
