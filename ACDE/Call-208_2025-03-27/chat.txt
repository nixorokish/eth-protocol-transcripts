00:05:26	Maintainer.eth:	GM!
00:07:05	nixo:	gm
00:07:16	Karlos Zurutuza:	GM
00:07:17	jochem-brouwer (EthJS):	gm
00:07:22	Gabe:	gm
00:07:28	Danno Ferrin | Ipsilon:	gm
00:07:39	Hadrien Croubois (OpenZeppelin):	There were two EOF related EIP presentation that could not happen last time because we were overtime. Could we please present them today ???
00:07:51	Hadrien Croubois (OpenZeppelin):	(I don't see it on the agenda)
00:08:03	Hadrien Croubois (OpenZeppelin):	thank you :)
00:08:06	William Morriss:	晚上好
00:08:24	stokes:	gm
00:08:27	rodiazet | Ipsilon:	🍿
00:08:32	terence:	早上好
00:08:58	Danno Ferrin | Ipsilon:	Replying to "There were two EOF r..."

PAY is presumed in EOF option A.
00:12:22	Hadrien Croubois (OpenZeppelin):	Replying to "There were two EOF r..."

If other opcode proposals (like 7819, but I don't think its the only one) don't have an opportunity make their point, and option A happens, these is basically no clear path for them being included at any point.
That allone pushes to away from option A.
00:12:37	Parithosh Jayanthi:	Gnosis safe is live on hoodi now 😄
00:12:44	Hadrien Croubois (OpenZeppelin):	Replying to "There were two EOF r..."

A mega EOF that doesn't really include everything is not a mega EOF, is it ?
00:12:46	Parithosh Jayanthi:	(Deployed by someone else afaik)
00:12:50	spencer-tb:	Reacted to "Gnosis safe is live ..." with 🙌
00:13:14	Ivan Metrikin:	Replying to "Gnosis safe is live ..."

It was deployed by Protofire, shoutout to them!
00:13:19	Parithosh Jayanthi:	Reacted to "It was deployed by P..." with 🔥
00:13:24	nixo:	Reacted to "It was deployed by P..." with 🔥
00:13:29	Parithosh Jayanthi:	Replying to "Gnosis safe is live ..."

Yess thank you for organising that!
00:13:35	Tim Beiko:	https://github.com/ethereum/pm/pull/1409
00:13:46	Ivan Metrikin:	Reacted to "Yess thank you for o..." with 🙌
00:14:00	spencer-tb:	Reacted to "https://github.com/e..." with 🙏
00:14:07	Danno Ferrin | Ipsilon:	Replying to "There were two EOF r..."

I think there is still room to add CREATEDELEGATE no matter what option passes.  This week is focused on EOF in general.  This is not the last week for fusaka
00:14:45	pk910:	Replying to "Gnosis safe is live ..."

is there a link? :)
00:14:57	Hadrien Croubois (OpenZeppelin):	Replying to "There were two EOF r..."

2 weeks ago, it was mentioned that Fusaka EIPs would be frozen beofre today :)
00:16:33	Parithosh Jayanthi:	Replying to "Gnosis safe is live ..."

Steve should have a link, he was using it yesterday 😄
00:16:52	Ivan Metrikin:	Replying to "Gnosis safe is live ..."

https://app.safe.protofire.io/welcome
00:17:36	Tim Beiko:	I think we can debate the testnet scheduling delays separately from deciding whether we want to adopt the mainnet portion of this for Pectra 😄
00:17:52	Danno Ferrin | Ipsilon:	Replying to "There were two EOF r..."

31 march is client team opinion.  https://ethereum-magicians.org/t/all-core-devs-execution-acde-207/23020/2?u=shemnon  10 april is current scheduled freeze.

March 24 was the last day for PFI, which 7819 made the cut.
00:18:07	Karlos Zurutuza:	Reacted to "I think we can debat..." with 👍
00:18:13	Roman:	Reacted to "I think we can debat..." with 👍
00:18:21	nixo:	Reacted to "I think we can debat..." with 👍
00:20:25	Łukasz Rozmej:	We kind of doing it now already? This is just writing it down?
00:20:31	Tim Beiko:	Replying to "We kind of doing it ..."

Yes!
00:20:36	Fredrik:	Replying to "We kind of doing it ..."

yeah
00:20:45	Roman:	Reacted to "We kind of doing it ..." with 👍
00:20:48	stokes:	Strong +1 for this
00:20:56	marek:	Reacted to "We kind of doing it ..." with 👍
00:21:06	potuz:	Reacted to "I think we can deb..." with 👍
00:21:10	nixo:	Reacted to "We kind of doing it ..." with 👍
00:21:15	Fredrik:	Reacted to "We kind of doing it ..." with 👍
00:21:17	spencer-tb:	Reacted to "Strong +1 for this" with ➕
00:21:18	Enrico Del Fante (tbenr):	super welcome a process like that
00:21:19	nixo:	Reacted to "Strong +1 for this" with ➕
00:21:22	Łukasz Rozmej:	Reacted to "Strong +1 for this" with ➕
00:21:24	Parithosh Jayanthi:	Reacted to "We kind of doing it ..." with 👍
00:21:27	Parithosh Jayanthi:	Reacted to "Strong +1 for this" with ➕
00:21:56	Justin Traglia:	Reacted to "Strong +1 for this" with ➕
00:22:06	Tim Beiko:	https://eips.ethereum.org/EIPS/eip-7910
00:22:44	nflaig:	Reacted to "Strong +1 for this" with ➕
00:24:03	Mario Vega:	Reacted to "Strong +1 for this" with ➕
00:24:24	Barnabas:	Can’t we do REST api instead of JSON rpc? And might as well start pushing for making all EL’s REST compatible.
00:24:45	Danno Ferrin | Ipsilon:	Replying to "Can’t we do REST api..."

We can also do this in rest
00:24:55	Luis Pinto | Besu:	Why not Fusaka?
00:24:57	Maintainer.eth:	Reacted to "We can also do thi..." with 👍
00:25:02	Barnabas:	Replying to "Can’t we do REST api..."

all new api’s should be rest
00:25:04	marek:	Reacted to "Why not Fusaka?" with 👍
00:25:11	Mario Vega:	Reacted to "Why not Fusaka?" with 👍
00:25:11	stokes:	Reacted to "all new api’s should..." with 👀
00:25:19	Roman:	delaying seems reasonable
00:25:34	Roman:	While we take the time to argue over the specifics
00:25:35	Barnabas:	Replying to "Can’t we do REST api..."

and slowly get clients to implement all their APIs in REST using the same calls kinda like Beacon api
00:25:41	marek:	Let's have it in Fusaka
00:25:44	Tim Beiko:	Reacted to "Let's have it in Fus..." with 👍
00:25:45	Roman:	Reacted to "Let's have it in Fus..." with 👍
00:25:46	Mario Vega:	Reacted to "Let's have it in Fus..." with 👍
00:25:47	Tim Beiko:	Reacted to "While we take the ti..." with 👍
00:25:47	felix (eest):	Reacted to "Let's have it in F..." with 👍
00:25:49	Luis Pinto | Besu:	Reacted to "Let's have it in Fus..." with 👍
00:25:51	Maintainer.eth:	Reacted to "delaying seems rea..." with 👍
00:25:59	Barnabas:	Reacted to "Let's have it in Fus..." with 👍
00:26:01	Ameziane Hamlat:	Reacted to "Let's have it in Fus..." with 👍
00:26:05	Parithosh Jayanthi:	Replying to "Can’t we do REST api..."

We need a fully new rest api spec, one doesn’t exist rn
00:26:22	Barnabas:	Reacted to "We need a fully new ..." with 👍
00:26:25	Barnabas:	Replying to "Can’t we do REST api..."

That is my point 😄
00:26:27	Dustin:	Anything which requires nontrivial new code seems risky after all the devnets testnets have already happened
00:26:38	Dustin:	Reacted to "Let's have it in F..." with 👍
00:26:48	Parithosh Jayanthi:	Replying to "Can’t we do REST api..."

Yeah but a ideal solution shouldn’t stop us from making incremental progress we can have sooner
00:26:57	Parithosh Jayanthi:	Replying to "Can’t we do REST api..."

Fully specced rest api will take months
00:27:39	Łukasz Rozmej:	List activated EIP's?
00:28:10	Felix:	Replying to "Can’t we do REST ..."

We are working on a REST API proposal at Geth.
00:28:15	Parithosh Jayanthi:	Reacted to "We are working on a ..." with 🔥
00:28:25	Advaita | Nimbus:	Reacted to "Let's have it in F..." with 👍
00:28:34	marek:	Reacted to "We are working on a ..." with 🔥
00:28:50	Łukasz Rozmej:	30 April is fine with me :)
00:28:51	Parithosh Jayanthi:	Replying to "Can’t we do REST api..."

Are other clients also involved already? 😄 ideally it isn’t that geth has a new rest api, but that all clients have the same one and there’s no diff
00:28:53	julia:	Set a date
00:28:55	Barnabas:	happy with 11599872
00:29:08	Łukasz Rozmej:	Reacted to "happy with 11599872" with 👍
00:29:09	Karlos Zurutuza:	Reacted to "happy with 11599872" with 👍
00:29:12	marek:	Reacted to "happy with 11599872" with 👍
00:29:12	Rafael Matias:	Reacted to "happy with 11599872" with 👍
00:29:36	stokes:	Have we checked w/ CL teams on this date?
00:29:42	Maintainer.eth:	Reacted to "We are working on ..." with 🔥
00:29:52	Barnabas:	Replying to "Have we checked w/ C..."

they should be here lol
00:30:03	Tim Beiko:	Replying to "Have we checked w/ C..."

I see some CL devs on the call 😄
00:30:04	Mercy Boma Naps-Nkari:	Reacted to "We are working on a ..." with 🔥
00:30:20	nflaig:	Reacted to "We are working on a ..." with 🔥
00:30:49	Enrico Del Fante (tbenr):	Don’t we need until we complete attestations analysis and have a completed tests for all flows around maxEB?
00:30:54	Barnabas:	end of may seems excessive
00:30:58	Ivan Metrikin:	Ether.fi comment https://github.com/ethereum/pm/issues/1374#issuecomment-2752724721
00:31:08	Trent:	Reacted to "end of may seems exc..." with 👍
00:31:08	stokes:	Replying to "Don’t we need until ..."

Idea is we have time over next few weeks
00:31:18	Parithosh Jayanthi:	Replying to "Don’t we need until ..."

Wouldn’t these things be completed over the next week?
00:31:27	Parithosh Jayanthi:	Replying to "Don’t we need until ..."

Releases the week after perhaps?
00:31:28	Barnabas:	Reacted to "Wouldn’t these thing..." with 👍
00:31:36	Łukasz Rozmej:	Reacted to "end of may seems exc..." with 👍
00:31:40	Mario Vega:	Reacted to "end of may seems exc..." with 👍
00:31:46	Parithosh Jayanthi:	Replying to "Don’t we need until ..."

But yeah, please speak up if that timeline sounds unreasonable
00:31:59	Rostislav Bortman:	Reacted to "end of may seems exc..." with 👍
00:32:05	Ansgar Dietrichs:	Reacted to "end of may seems exc..." with 👍
00:32:36	Enrico Del Fante (tbenr):	Replying to "Don’t we need until ..."

Ok to set it tentative and discuss next week
00:32:51	Parithosh Jayanthi:	Reacted to "Ok to set it tentati..." with 👍🏽
00:32:53	stokes:	Ship it
00:32:58	marek:	Reacted to "end of may seems exc..." with 👍
00:33:16	Trent:	Reacted to "Ship it" with 🚢
00:33:17	stokes:	Reacted to "Ok to set it tentati..." with 👍
00:33:20	marek:	Reacted to "Ship it" with 🚢
00:33:28	Mario Vega:	Reacted to "Ship it" with 🚢
00:33:28	nixo:	Replying to "Ether.fi comment htt..."

they said they’ll comment on the PR if they have any opinions either way
00:33:58	Łukasz Rozmej:	Reacted to "Ship it" with 🚢
00:34:44	Caleb:	Reacted to "Ship it" with 🚢
00:34:56	Roman:	Reacted to "end of may seems exc..." with 👍
00:35:56	Felix:	Replying to "Can’t we do REST ..."

yeah, it's just a project that we have, to define a new API, like the spec for it. It's not going to be a Geth-only thing!
00:36:00	Francesco:	Geth has a very large txpool size. Do you think the size is the problem, or the prioritisation logic?
00:36:10	Parithosh Jayanthi:	Reacted to "yeah, it's just a pr..." with 👍🏽
00:36:23	marek:	Reacted to "yeah, it's just a pr..." with 🔥
00:36:26	Barnabas:	Reacted to "yeah, it's just a pr..." with 🔥
00:36:33	Hadrien Croubois (OpenZeppelin):	Replying to "There were two EOF r..."

So basically in 4 days team must give an opinion on EIPs that did not have an opportunity to present in ACD
00:36:37	Barnabas:	Replying to "Can’t we do REST api..."

wen spec for this?
00:38:06	Felix:	Replying to "Can’t we do REST ..."

we have done some preliminary research on this, but it's still in progress. We will start pushing for this more seriously after history expiry has shipped.
00:38:21	Barnabas:	Reacted to "we have done some pr..." with 🎉
00:38:25	stokes:	https://github.com/ethereum/EIPs/pull/9378
00:38:29	stokes:	https://github.com/ethereum/execution-apis/pull/630/files
00:39:09	Will Corcoran:	https://efdn.notion.site/DAS-atm-1c2d9895554180ac800fd0b571573483
00:39:15	Will Corcoran:	Notes from the breakout
00:39:16	Tim Beiko:	Replying to "There were two EOF r..."

We can extend to ACD next week, but every team has stated that they want Fusaka’s scope to be small, and to ship PeeerDAS quickly. 

There are ~20 PFI’d EIPs now. I’m not sure if it is possible to actually present all of them on ACD synchronously.
00:39:23	Tim Beiko:	Reacted to "Notes from the break..." with ❤️
00:40:04	Maintainer.eth:	Reacted to "Notes from the bre..." with ❤️
00:40:06	Matt Nelson:	Hi folks - we are looking to get EigenLayer deployed in Hoodi as soon as we can. We were waiting on some dependent contracts to be deployed, like SAFE
00:40:16	Tim Beiko:	Replying to "Hi folks - we are lo..."

SAFE has been deployed 😄
00:40:20	Gajinder:	Only required in network wrapper
00:40:29	Tim Beiko:	Replying to "Hi folks - we are lo..."

https://app.safe.protofire.io/welcome
00:40:51	Matt Nelson:	Replying to "Hi folks - we are lo…"
🚀🚀🚀
00:40:54	Matt Nelson:	Replying to "Hi folks - we are lo…"
I’ll nudge my team today
00:40:55	Roman:	Send it
00:41:05	Will Corcoran:	Reacted to "Send it" with 🚀
00:41:05	Trent:	Reacted to "Send it" with 🚢
00:41:22	stokes:	Reacted to "Send it" with 🚀
00:42:19	Shoham Chakraborty:	Reacted to "Send it" with 🚀
00:42:33	Maintainer.eth:	Reacted to "We can extend to A..." with 👀
00:43:05	Ben Adams:	Nethermind supports Complete version
00:43:11	Łukasz Rozmej:	Reacted to "Nethermind supports ..." with 👍
00:43:29	marek:	Reacted to "Nethermind supports ..." with 👍
00:43:51	Ansgar Dietrichs:	I think Vitalik’s comment was meant to indicate support for the lighter version in addition to the full version, not as opposition to the full version
00:44:00	Felix:	wat
00:44:15	Felix:	why did I bring popcorn
00:44:17	Ansgar Dietrichs:	option unspecified should be interpreted as support for full version by default, as the others were not even proposed at that point
00:44:20	Dragan Rakita:	Reacted to "Send it" with 🚀
00:44:21	Josh Davis:	Reacted to "why did I bring popc..." with 😂
00:44:22	Shoham Chakraborty:	Reacted to "why did I bring popc..." with 😂
00:44:22	spencer-tb:	Reacted to "why did I bring popc..." with 💔
00:44:22	Mario Vega:	Reacted to "why did I bring popc..." with 😂
00:44:23	Enrico Del Fante (tbenr):	Reacted to "why did I bring popc..." with 😂
00:44:23	Piotr | Ipsilon:	Reacted to "why did I bring popc..." with 😂
00:44:23	nixo:	Reacted to "why did I bring popc..." with 😂
00:44:23	Sina Mahmoodi:	Reacted to "why did I bring popc..." with 😂
00:44:24	Luis Pinto | Besu:	Reacted to "why did I bring popc..." with 😂
00:44:24	Sophia Gold:	Reacted to "why did I bring po..." with 😂
00:44:24	stokes:	Reacted to "why did I bring popc..." with 😂
00:44:26	Francesco:	Reacted to "why did I bring popc..." with 💔
00:44:27	Pooja Ranjan:	Reacted to "why did I bring popc..." with 😂
00:44:29	marek:	Reacted to "why did I bring popc..." with 😂
00:44:30	Parithosh Jayanthi:	Reacted to "why did I bring popc..." with 😂
00:44:30	Caspar Schwarz-Schilling:	Reacted to "why did I bring popc..." with 😂
00:44:31	Akash | ECH:	Reacted to "why did I bring popc..." with 😂
00:44:31	Martin | ethrex:	Reacted to "why did I bring popc..." with 😂
00:44:31	felix (eest):	Reacted to "why did I bring po..." with 💔
00:44:32	Martin | ethrex:	Reacted to "why did I bring popc..." with 💔
00:44:34	Kevaundray Wedderburn:	Which version is currently implemented?
00:44:35	Nicolas Consigny:	Reacted to "why did I bring popc..." with 😂
00:44:36	stokes:	Replying to "why did I bring popc..."

We need an ACD chat comment hall of fame
00:44:38	Will Corcoran:	Reacted to "why did I bring popc..." with 😂
00:44:38	rodiazet | Ipsilon:	Reacted to "why did I bring popc..." with 😂
00:44:39	yoav:	Reacted to "I think Vitalik’s co..." with 👍
00:44:40	felix (eest):	Reacted to "why did I bring po..." with 😂
00:44:40	Minhyuk Kim:	Reacted to "why did I bring popc..." with 😂
00:44:41	nflaig:	Reacted to "why did I bring popc..." with 😂
00:44:43	Alex (axic):	Replying to "Which version is cur..."

A
00:44:44	Łukasz Rozmej:	Reacted to "why did I bring popc..." with 🍿
00:44:44	Barnabas:	Reacted to "why did I bring popc..." with 😂
00:44:47	Alex (axic):	Replying to "Which version is cur..."

The Complete EOF
00:44:48	Ben Adams:	Replying to "Which version is cur..."

devnet-0 :)
00:44:57	ignacio:	Reacted to "why did I bring popc..." with 😂
00:45:04	Danno Ferrin | Ipsilon:	Replying to "Which version is cur..."

Devnet 0 which is most of A.
00:45:07	Alex (axic):	Replying to "Which version is cur..."

Yeah, to be correct devote-0, but tests are working off option A
00:45:07	Nicolas Consigny:	Replying to "why did I bring popc..."

Say no more
00:45:10	Mikhail Kalinin:	Reacted to "why did I bring popc..." with 😂
00:45:13	Parithosh Jayanthi:	Reacted to "Say no more" with 😂
00:45:16	nixo:	Reacted to "Say no more" with 💙
00:45:16	Nicolas Consigny:	Reacted to "We need an ACD chat ..." with 💯
00:45:17	Dragan Rakita:	Reacted to "why did I bring popc..." with 😂
00:45:23	Dragan Rakita:	Reacted to "We need an ACD chat ..." with 💯
00:45:23	Fredrik:	Reacted to "why did I bring popc..." with 🍿
00:45:25	Dragan Rakita:	Reacted to "why did I bring popc..." with 🍿
00:45:30	Alex (axic):	Reacted to "why did I bring popc..." with 😂
00:45:32	Alex (axic):	Reacted to "why did I bring popc..." with 🍿
00:45:40	Łukasz Rozmej:	What is the reasoning why not to ban code introspection?
00:45:41	Ahmad Bitar:	Reacted to why did I bring popc... with "😂"
00:45:43	Kevaundray Wedderburn:	Reacted to "A" with 👍
00:45:49	Luis Pinto | Besu:	Replying to "Which version is cur..."

Should not impact the decision though
00:45:52	spencer-tb:	Replying to "Which version is cur..."

Cc-ing hive instance, very green: https://hive.ethpandaops.io/eof-devnet-0/index.html
00:46:23	danceratopz:	Reacted to "Cc-ing hive instance..." with 💙
00:46:36	Mario Vega:	Reacted to "We need an ACD chat ..." with 💯
00:46:39	Hadrien Croubois (OpenZeppelin):	Replying to "What is the reasonin..."

My understanding is that there are a lot of exisitng practices/standards that cannot work without some sort of contract introspection
00:46:50	Mario Vega:	Reacted to "Cc-ing hive instance..." with 💙
00:46:53	William Morriss:	this objection is solved by the PAY opcode
00:46:54	Danno Ferrin | Ipsilon:	William morris, PAY opcode fixes
00:47:10	Alex (axic):	It was not discovered last week, it is a well known TODO item on Solidity. It is just not implemented yet in Solidity, and is not an EVM issue.
00:47:11	Hadrien Croubois (OpenZeppelin):	Replying to "What is the reasonin..."

In particular ERC-721 requires checking if some account has code to do stuff conditionnally
00:47:14	Tomasz Stańczak:	Easier to add introspections than remove them from EOF, no?
00:47:18	lightclient:	option D does still removes gas introspection right though?
00:47:33	lightclient:	Replying to "option D does still ..."

so felix is saying he wants gas introspection
00:47:37	yoav:	Reacted to "why did I bring popc..." with 😂
00:47:48	Danno Ferrin | Ipsilon:	Replying to "option D does still ..."

gas introspection is orthagonal to code introspection, they are not tied to each other
00:47:50	frangio:	Replying to "What is the reasonin..."

the solution for this without code introspection has been known for a while now and it is part of the eof proposal
00:47:54	yoav:	Reacted to "why did I bring popc..." with 🤣
00:47:58	Kamil Śliwak | Solidity:	The send/transfer issue was just something that was not blocked off yet in the (incomplete) Soldiity prototype. Not a flaw in EOF itself.
00:48:03	William Morriss:	I support removing gas introspection because gas costs should be free to change
00:48:05	Piotr | Ipsilon:	Replying to "option D does still ..."

Option D "Introspecting" keeps gas introspection
00:48:07	Hadrien Croubois (OpenZeppelin):	Replying to "What is the reasonin..."

If EOF doesn't support that, contract will code "legacy code" to do introspectrion anyway
00:48:14	Tim Beiko:	Replying to "option D does still ..."

Lots of double negatives 😅
00:48:26	Piper Merriam:	Gas introspection should be removed (in my opinion). It's a major pain point and worth removing. It has big benefits of we get it removed.
00:48:27	lightclient:	Replying to "option D does still ..."

okay i understand
00:48:35	Sina Mahmoodi:	Removing gas introspection simplifies also gas estimation
00:48:41	William Morriss:	Reacted to "Removing gas introsp..." with 👍
00:48:41	Tomasz Stańczak:	Replying to "What is the reasonin..."

As in making calls to legacy contracts from inside EOF contracts?
00:48:47	rodiazet | Ipsilon:	Reacted to "Gas introspection sh..." with ❤️
00:48:48	Tomasz Stańczak:	Replying to "What is the reasonin..."

Then seems ok?
00:48:53	Tomasz Stańczak:	Replying to "What is the reasonin..."

(Or much more costly?)
00:48:54	Łukasz Rozmej:	Reacted to "Removing gas introsp..." with 👍
00:48:54	rodiazet | Ipsilon:	Reacted to "Removing gas introsp..." with 👍
00:48:55	lightclient:	How do you do 4337 when removing gas introspection?
00:49:14	Luis Pinto | Besu:	Gas pricing changes are safer without gas introspection
00:49:21	Tim Beiko:	Can gas/code introspection be added back in a future fork?
00:49:23	Alex (axic):	Replying to "What is the reasonin..."

I actually went through Solady adapting it to EOF, and at least two big patterns it uses with CREATE2 can be done clearly with EOF. I did not go through everything they have because it is a large codebase.
00:49:33	Francis Li:	Reacted to "Gas pricing change..." with ➕
00:49:35	Alex (axic):	Replying to "What is the reasonin..."

I.e. non-failing payments and proxy creation.
00:49:35	stokes:	Replying to "Can gas/code introsp..."

I think easier to have and then remove later
00:49:43	stokes:	Replying to "Can gas/code introsp..."

Vs other way around
00:49:43	Fabio Di Fabio:	Reacted to "Gas pricing changes ..." with ➕
00:49:44	Tomasz Stańczak:	Reacted to "I actually went thro..." with ❤️
00:50:06	Danno Ferrin | Ipsilon:	Replying to "Can gas/code introsp..."

It can be restored just by restoring the opcodes.
00:50:14	Tim Beiko:	Reacted to "It can be restored j..." with 👍
00:50:19	William Morriss:	Reacted to "It can be restored j..." with 👍
00:50:19	Mario Vega:	Reacted to "It can be restored j..." with 👍
00:50:19	Tomasz Stańczak:	Replying to "Can gas/code introsp..."

Yeah, easier to add back
00:50:29	Danno Ferrin | Ipsilon:	Replying to "Can gas/code introsp..."

But if we ship w/ GAS /CALL* opcode we can never remove it
00:50:31	frangio:	Replying to "Can gas/code introsp..."

we already have gas introspection and eof is showing that it's not easy to remove
00:50:33	Tomasz Stańczak:	Replying to "Can gas/code introsp..."

Alex, explain 😅
00:50:41	Tomasz Stańczak:	Reacted to "we already have gas ..." with 👍
00:50:41	Tim Beiko:	Reacted to "Alex, explain 😅" with ➕
00:50:43	Tim Beiko:	Reacted to "we already have gas ..." with 👍
00:50:45	Alex (axic):	Replying to "What is the reasonin..."

There’s proper lack of language support in the current experimental Solidity version to do everything nicely, but the instructions/features exists in EOF.
00:50:48	stokes:	I think im wrong here
00:50:48	rodiazet | Ipsilon:	Reacted to "I actually went thro..." with ❤️
00:50:49	Piper Merriam:	I feel the same about removal of code introspection, it should be removed. It's another pain point that gets in the way of upgrading things.
00:50:51	William Morriss:	address.pay() can replace address.transfer() and address.send() in solidity eof
00:50:53	Tomasz Stańczak:	Reacted to "I think im wong here" with ❤️
00:51:12	rodiazet | Ipsilon:	Reacted to "address.pay() can re..." with 👍
00:51:12	frangio:	Reacted to "Removing gas introsp..." with 👍
00:51:28	Luis Pinto | Besu:	Reacted to "address.pay() can re..." with 👍
00:51:31	stokes:	Replying to "Can gas/code introsp..."

But intuition is around keeping continuity of model, and then AIUI we can have a new EOF version later with further restrictions
00:51:48	frangio:	Replying to "How do you do 4337 w..."

you can't. this is one of the unsolved issues. there is also similar logic like cross-chain messaging contracts where you need to specify a gas limit
00:52:02	0xTraub:	Reacted to "you can't. this is o..." with 💯
00:52:02	Hadrien Croubois (OpenZeppelin):	But you can call legacy code from EOF, can't you ?
00:52:05	Ben Adams:	Can call legacy; just not delegate call it
00:52:06	Shoham Chakraborty:	Reacted to "you can't. this is o..." with 💯
00:52:07	Danno Ferrin | Ipsilon:	It’s only delegate calling that doesn’t interoperate.  Standard calls and static calls work fine.
00:52:20	lightclient:	Reacted to "you can't. this is o..." with 💯
00:52:26	Tomasz Stańczak:	Deploying legacy contracts still possible, so it is not that we lose it?
00:52:30	yoav:	Replying to "How do you do 4337 w..."

1. EIP-7701 no longer needs EntryPoint or gas introspection.
2. As long as we need EntryPoint (pre-7701) we can transact with EntryPoint outside of EOF.
00:52:50	Tomasz Stańczak:	So the user experience could only get better but not worse? (Except for confusion between choosing the VM type when developing)
00:52:52	Tim Beiko:	Replying to "Deploying legacy con..."

Yes, we still maintain the ability to deploy legacy contracts
00:52:56	Tim Beiko:	Reacted to "So the user experien..." with 👍
00:53:04	yoav:	Replying to "How do you do 4337 w..."

So basically native AA doesn't need gas introspection and actually benefits from removing it.  And non-native remains legacy (non-EOF)
00:53:04	Tim Beiko:	One difference @Tomasz Stańczak is we may choose to only ship new features in EOF going forward (but not decided yet)
00:53:07	rodiazet | Ipsilon:	Reacted to "So the user experien..." with 👍
00:53:25	yoav:	Replying to "How do you do 4337 w..."

EntryPoint can still call into accounts that *are* EOF
00:53:28	Mario Vega:	Regarding EOF testing I invite everyone to take a look here: https://eest.ethereum.org/main/tests/osaka/eip7692_eof_v1/ 

This is all tests implemented (so far) by the ipsilon/steel teams, but extra eyes are always welcome on suggestions on missing cases/extra coverage!
00:53:50	lightclient:	Replying to "How do you do 4337 w..."

yes true, but there is a intermediate time where you need legacy EntryPoint but all tooling has moved over to EOF
00:54:34	yoav:	Replying to "How do you do 4337 w..."

During that period we keep using EntryPoint as a legacy contract which can call EOF accounts.  The handleOps transaction itself calls the non-EOF EntryPoint.
00:54:39	Dankrad Feist:	I continue to oppose EOF
00:54:58	Dankrad Feist:	developer features can be delivered by voluntary binary format
00:54:58	0xTraub:	TSTORE/TLOAD is a particularly relevant example of how managing byte code differences on different networks which don’t support it is a huge pain point for solidity devs.
00:55:18	Tomasz Stańczak:	Which would be ok?
00:55:21	Dankrad Feist:	chain side features will never come to bear because we cannot deprecate legacy
00:56:27	Tim Beiko:	1000 lines of consensus critical changes, though
00:56:33	marek:	Reacted to "1000 lines of consen..." with 👍
00:56:38	lightclient:	it’s 1000 line change with another 1000 or 2 that have already been merged 🙂
00:56:41	Sina Mahmoodi:	Reacted to "1000 lines of consen..." with 👍
00:56:45	lightclient:	Reacted to "1000 lines of consen..." with 👍
00:56:47	Parithosh Jayanthi:	Reacted to "1000 lines of consen..." with 👍
00:56:51	felix (eest):	Reacted to "1000 lines of cons..." with 👍
00:57:01	stokes:	There’s appetite to do something, so we will have some lines of change
00:57:04	frangio:	Replying to "chain side features ..."

i don't think it's been settled that legacy can never be deprecated. it's possible there are small additions to eof that enable translating legacy to eof code
00:57:20	Ansgar Dietrichs:	one more aspect here: the EVM was pretty ossified over the past few years, but we will start to make bigger changes in the future again, on the path to scaling the L1.

That includes major changes to the gas model. A lot of the “hard coded assumptions around gas” will break at this point anyway. it would be very healthy to have the modern part of the smart contract ecosystem no longer rely on the crutch of gas introspection that we will take away soon anyway
00:57:37	Kevaundray Wedderburn:	I didn’t get the point about side stepping — can I still deploy legacy contracts once EOF is live?
00:57:47	Nicolas Consigny:	Reacted to "I didn’t get the poi..." with 👍
00:57:55	lightclient:	also should note that we had chain split issue due to identity contract which is very simple 🙂 EOF creates many more interfaces for these types of problems
00:58:00	stokes:	Replying to "I didn’t get the poi..."

AFAIK
00:58:01	Dankrad Feist:	Reacted to I didn’t get the poi... with "👍"
00:58:06	Charles:	Reacted to "also should note t..." with 👍
00:58:07	Dankrad Feist:	Replying to "I didn’t get the poi..." 

 yes
00:58:08	William Morriss:	execution being faster is not a reason to block eof
00:58:08	Parithosh Jayanthi:	Replying to "I didn’t get the poi..."

Yes you can
00:58:09	Potuz:	this doesn't generate more MEV though
00:58:15	Roman:	Replying to "this doesn't generat..."

yeeeee
00:58:16	William Morriss:	Reacted to "this doesn't generat..." with 👍
00:58:16	Danno Ferrin | Ipsilon:	Replying to "also should note tha..."

Ban precompiles
00:58:16	Piper Merriam:	Reacted to execution being fast... with "👍"
00:58:17	0xTraub:	Reacted to "I didn’t get the poi..." with 👀
00:58:18	Roman:	Reacted to "this doesn't generat..." with 👍
00:58:22	Tim Beiko:	Yeah, this seems beside the point
00:58:26	Dankrad Feist:	Replying to "I didn’t get the poi..." 

 you cannot stop this or you would break existing patterns
00:58:27	Tomasz Stańczak:	It is not additional MEV, it is improved efficiency of block building
00:58:27	stokes:	Replying to "this doesn't generat..."

right
00:58:31	Roman:	Very out of scope for the discussion
00:58:54	Danno Ferrin | Ipsilon:	Replying to "also should note tha..."

EIP-7666: EVM-ify the identity precompile
https://eips.ethereum.org/EIPS/eip-7666
00:59:01	0xTraub:	Replying to "I didn’t get the poi..."

How so?
00:59:08	Dustin:	Replying to "I didn’t get the ..."

In principle, hardforks (conceptually) could stop exactly this. They change existing patterns, that's the point
00:59:20	spencer-tb:	Reacted to "1000 lines of consen..." with 👍
00:59:43	Piper Merriam:	Reacted to I didn’t get the poi... with "👍"
00:59:51	lightclient:	Reacted to "I didn’t get the poi..." with 👍
01:00:48	stokes:	I would be curious to hear if we go w/ some variant of EOF today, what would it mean for shipping timelines?
01:00:50	Danno Ferrin | Ipsilon:	can I share and talk?
01:00:52	frangio:	who is making the case to have code and gas introspection?
01:00:56	Piper Merriam:	Reacted to who is making the ca... with "👍"
01:00:59	lightclient:	Reacted to "who is making the ca..." with 👍
01:01:00	Tomasz Stańczak:	I think that Complete actually had some support that was maybe not expressed here? @Ben Adams ?
01:01:10	lightclient:	Replying to "who is making the ca..."

i think Felix was
01:01:11	lightclient:	Replying to "who is making the ca..."

also me
01:01:17	stokes:	Replying to "who is making the ca..."

Ya I think many ppl
01:01:24	Piper Merriam:	I haven't heard a strong case to add introspection back in
01:01:32	Josh Davis:	Link to this doc?
01:01:36	Ansgar Dietrichs:	Replying to "I haven't heard a st..."

same
01:01:39	Sina Mahmoodi:	Replying to "who is making the ca..."

I think generally contract devs are not super happy to have these “features” taken away
01:01:39	Tomasz Stańczak:	Reacted to "I haven't heard a st..." with 👍
01:01:40	Ben Adams:	Nethermind supports A (Complete); has already been stated
01:01:43	Ansgar Dietrichs:	Reacted to "I haven't heard a st..." with 👍
01:01:43	Tomasz Stańczak:	Replying to "I haven't heard a st..."

same
01:01:47	rodiazet | Ipsilon:	Reacted to "Nethermind supports ..." with 👍
01:01:48	lightclient:	Replying to "I haven't heard a st..."

many contracts use it today
01:01:50	Piotr | Ipsilon:	Replying to "Link to this doc?"

https://notes.ethereum.org/@ipsilon/eof_fusaka_options
01:01:51	Tomasz Stańczak:	Replying to "I haven't heard a st..."

Just heard Felix mostly on it
01:02:01	Alex Forshtat:	Replying to "I didn’t get the poi..."

You can also use a legacy contract to regain some of the functionality banned by the EOF as far as I know, such as excodecopy legacy contracts, observing gas, etc, right?
Not likely any future hard-fork will ever ban EOF-to-legacy calling in my opinion.
01:02:03	Tomasz Stańczak:	Replying to "I haven't heard a st..."

These contracts can continue using it
01:02:04	Josh Davis:	Reacted to "https://notes.ethere..." with 👍
01:02:05	lightclient:	Replying to "I haven't heard a st..."

4337 + all user op relaying systems require it
01:02:07	frangio:	Reacted to "I haven't heard a st..." with 👍
01:02:08	Tomasz Stańczak:	Reacted to "Nethermind supports ..." with 👍
01:02:37	Luis Pinto | Besu:	Replying to "Nethermind supports ..."

Besu is also split between A and C
01:02:51	Dustin:	Replying to "I didn’t get the ..."

yeah, create a bunch of "gadget" contracts which exist to call now-banned opcodes
01:03:02	William Morriss:	Reacted to "Nethermind supports ..." with 👍
01:03:04	Piper Merriam:	Replying to "I haven't heard a st..." 

 But legacy evm still allows 4337 stuff yes?
01:03:06	rodiazet | Ipsilon:	If we ban it now it can be reintroduced back without version bump.
01:03:07	Ansgar Dietrichs:	Replying to "I haven't heard a st..."

for L1 we always have legacy. any chain that launches EOF-only can find simple ways to add introspection in specific gated ways
01:03:07	frangio:	Replying to "I haven't heard a st..."

most contracts that use these features can switch to eof features that achieve the same end effect. 4337 is an extremely special case
01:03:11	pcaversaccio:	sorry just joined now: I still have to meet an application dev who asks for EOF. Can someone elaborate here from the core devs?
01:03:25	Tomasz Stańczak:	Reacted to "If we ban it now it ..." with 👍
01:03:36	Tim Beiko:	Replying to "sorry just joined no..."

https://soliditylang.org/blog/2025/03/27/the-case-for-eof/
01:03:38	0xTraub:	Replying to "sorry just joined no..."

I support EOF
01:03:42	lightclient:	Replying to "I haven't heard a st..."

solidity wants to drop support for legacy so how will there be any future development on user op relaying systems
01:03:43	Tomasz Stańczak:	Reacted to "https://soliditylang..." with 👍
01:03:57	Luis Pinto | Besu:	Reacted to "If we ban it now it ..." with 👍
01:03:58	Felix:	Replying to "sorry just joined ..."

It's not really the question here. The push for EOF comes from compiler authors and client devs.
01:04:05	William Morriss:	Reacted to "I haven't heard a st..." with 👍
01:04:22	Ahmad Bitar:	Reacted to Nethermind supports ... with "👍"
01:04:26	Ahmad Bitar:	Reacted to If we ban it now it ... with "👍"
01:04:28	Shoham Chakraborty:	Reacted to "It's not really the ..." with 👍
01:04:29	Ansgar Dietrichs:	I am in favor of A (or no EOF at all)
01:04:35	Ahmad Bitar:	Reacted to I haven't heard a st... with "👍"
01:04:36	rodiazet | Ipsilon:	Reacted to "I am in favor of A (..." with ❤️
01:04:41	Justin Florentine (Besu):	same. I want A plus PAY
01:04:46	jochem-brouwer (EthJS):	Heeft gereageerd op "same. I want A plu..." met ❤️
01:04:48	rodiazet | Ipsilon:	Reacted to "same. I want A plus ..." with ❤️
01:04:48	Piper Merriam:	Reacted to I am in favor of A (... with "❤️"
01:04:48	Luis Pinto | Besu:	Reacted to "same. I want A plus ..." with ➕
01:04:50	Piper Merriam:	Long live full EOF!
01:04:50	jochem-brouwer (EthJS):	Heeft gereageerd op "same. I want A plu..." met ➕
01:04:52	pcaversaccio:	Replying to "sorry just joined no..."

well should this be the right approach? At the end the consumers are the application layer devs
01:04:54	Karlos Zurutuza:	Reacted to "same. I want A plus ..." with ❤️
01:04:55	rodiazet | Ipsilon:	Reacted to "Long live full EOF!" with ❤️
01:04:55	Karlos Zurutuza:	Reacted to "I am in favor of A (..." with ❤️
01:04:56	Karlos Zurutuza:	Reacted to "Long live full EOF!" with ❤️
01:04:57	Shoham Chakraborty:	Reacted to "I am in favor of A (..." with ❤️
01:04:58	spencer-tb:	Reacted to "Long live full EOF!" with ❤️
01:04:58	Shoham Chakraborty:	Reacted to "same. I want A plus ..." with ❤️
01:04:59	spencer-tb:	Reacted to "same. I want A plus ..." with ❤️
01:04:59	Shoham Chakraborty:	Reacted to "Long live full EOF!" with ❤️
01:04:59	spencer-tb:	Reacted to "I am in favor of A (..." with ❤️
01:05:03	Pooja Ranjan:	Reacted to "Long live full EOF!" with ❤️
01:05:09	felix (eest):	zoom poll would be spicy
01:05:11	Enrico Del Fante (tbenr):	Reacted to "same. I want A plus ..." with 🚀
01:05:15	stokes:	Reacted to "zoom poll would be s..." with 😂
01:05:19	nixo:	Reacted to "zoom poll would be s..." with 😂
01:05:21	Maintainer.eth:	Reacted to "Long live full EOF!" with ❤️
01:05:23	spencer-tb:	Reacted to "zoom poll would be s..." with 🌶️
01:05:30	Maintainer.eth:	Reacted to "zoom poll would be..." with 😂
01:05:43	Enrico Del Fante (tbenr):	Replying to "zoom poll would be s..."

ZK poll here 🙂
01:05:50	Ahmad Bitar:	A plus Pay to go, please 🙏
01:05:55	Ansgar Dietrichs:	strong +1 to what Ben and Tim just said, full EOF is the maximally forward compatible version
01:05:58	Parithosh Jayanthi:	Reacted to "zoom poll would be s..." with 😂
01:06:04	Ahmad Bitar:	Reacted to Long live full EOF! with "❤️"
01:06:04	Piper Merriam:	Reacted to strong +1 to what Be... with "👍"
01:06:05	spencer-tb:	Reacted to "strong +1 to what Be..." with ➕
01:06:06	Karlos Zurutuza:	Reacted to "strong +1 to what Be..." with 👍
01:06:08	yoav:	Replying to "I haven't heard a st..."

I don't think solidity can safely drop support for legacy contracts, but I also don't understand what you mean by user op relaying system. There's just the EntryPoint contract which is a singleton and already exists. Anything else that handles UserOp (account,paymaster,factory,aggregator) can be an EOF contract that gets called by EntryPoint.  Which contract do we need to compile as legacy?
01:06:09	Luis Pinto | Besu:	Replying to "sorry just joined no..."

Can we set in stone all of the use cases that are going to break and brainstorm if they cannot be done without introspection?
01:06:09	Shoham Chakraborty:	Reacted to "A plus Pay to go, pl..." with ❤️
01:06:15	Alex (axic):	Reacted to "Long live full EOF!" with ❤️
01:06:16	Trent:	Reacted to "I haven't heard a st..." with 👍
01:06:18	Ahmad Bitar:	Reacted to strong +1 to what Be... with "👍"
01:06:30	Mario Vega:	Reacted to "A plus Pay to go, pl..." with ❤️
01:06:32	jochem-brouwer (EthJS):	Heeft gereageerd op "strong +1 to what ..." met 👍
01:06:36	Maintainer.eth:	Reacted to "ZK poll here 🙂" with 🔥
01:06:41	Tomasz Stańczak:	Replying to "sorry just joined no..."

App devs are not affected if they want to continue building legacy way
01:06:52	Ahmad Bitar:	Reacted to App devs are not aff... with "➕"
01:07:00	Justin Florentine (Besu):	💯make the call today. if you want a say, be at the table.
01:07:03	Potuz:	The discussion has been on ACD for a very very very very long time, I think the community has had more than enough time to analyze it
01:07:08	Justin Florentine (Besu):	it's an infinite table
01:07:12	felix (eest):	Reacted to "💯make the call ..." with 👍
01:07:14	Shoham Chakraborty:	Reacted to "💯make the call toda..." with 👍
01:07:17	rodiazet | Ipsilon:	Reacted to "💯make the call toda..." with 👍
01:07:20	rodiazet | Ipsilon:	Reacted to "The discussion has b..." with 👍
01:07:20	Francesco:	Reacted to "The discussion has b..." with 👍
01:07:22	Karlos Zurutuza:	Reacted to "The discussion has b..." with 👍
01:07:22	Ben Adams:	Reacted to "it's an infinite tab..." with 👍
01:07:22	Danno Ferrin | Ipsilon:	An infinite garden with an infinite table.
01:07:24	frangio:	Reacted to "💯make the call toda..." with 👍
01:07:29	rodiazet | Ipsilon:	Reacted to "An infinite garden w..." with 😃
01:07:30	Ansgar Dietrichs:	I don’t think we need to keep bikeshedding the versions
01:07:30	Tomasz Stańczak:	Reacted to "💯make the call toda..." with 👍
01:07:31	frangio:	Reacted to "An infinite garden w..." with 😂
01:07:32	Ben Adams:	Reacted to "💯make the call toda..." with 👍
01:07:32	Shoham Chakraborty:	Reacted to "An infinite garden w..." with 🚀
01:07:33	Roman:	Reacted to "An infinite garden w..." with 😂
01:07:33	Tomasz Stańczak:	Reacted to "The discussion has b..." with 👍
01:07:36	Piper Merriam:	Reacted to 💯make the call toda... with "👍"
01:07:37	stokes:	Reacted to "I don’t think we nee..." with 👍
01:07:39	Kevaundray Wedderburn:	Replying to "I didn’t get the poi..."

I was under the impression that we would also ban new legacy contracts — I guess any gas increases we make to EOF would also be made to the legacy in perpetuity
01:07:41	Ahmad Bitar:	Reacted to An infinite garden w... with "😂"
01:07:41	Ansgar Dietrichs:	so if we want to make a decision today, it should be a full decision
01:07:59	Potuz:	Reacted to "so if we want to mak..." with 👍🏼
01:08:01	Tomasz Stańczak:	Let’s commit
01:08:07	rodiazet | Ipsilon:	Reacted to "Let’s commit" with ❤️
01:08:10	stokes:	Replying to "I didn’t get the poi..."

Can have different gas schedules, but yeah can’t ignore legacy
01:08:12	Tomasz Stańczak:	This is a call dedicated to a big decision
01:08:13	Piper Merriam:	Reacted to Let’s commit with "❤️"
01:08:14	nixo:	Reacted to "Let’s commit" with ❤️
01:08:14	felix (eest):	Reacted to "Let’s commit" with ❤️
01:08:14	pcaversaccio:	Replying to "The discussion has b..."

well this is an issue btw - it takes so much time to dig into this that very few people do this from the community
01:08:26	Danno Ferrin | Ipsilon:	That’s a standing requirement for any EIP.  Security breakage means fix or pull.
01:08:29	lightclient:	Reacted to "well this is an issu..." with 👍
01:08:34	pcaversaccio:	Replying to "The discussion has b..."

the issue is that due to the complexity there is a bias who can give feedback
01:08:41	Tomasz Stańczak:	Replying to "The discussion has b..."

Core devs can
01:08:43	pcaversaccio:	Replying to "The discussion has b..."

it took weeks for me
01:08:46	Justin Florentine (Besu):	yeah, we did that throughout pectra
01:08:49	Karlos Zurutuza:	Reacted to "That’s a standing re..." with 👍
01:08:51	Kevaundray Wedderburn:	Replying to "I didn’t get the poi..."

If legacy cost 100 gas and EOF cost 300 gas, wouldn’t I use legacy as a “gadget” in that case?
01:08:52	lightclient:	Reacted to "the issue is that du..." with 👍
01:08:55	Justin Florentine (Besu):	rough consensus is not a suicide pact
01:09:01	Tim Beiko:	Reacted to "rough consensus is n..." with 😂
01:09:06	William Morriss:	please move PAY to CFI
01:09:07	Josh Davis:	Reacted to "rough consensus is n..." with 😂
01:09:07	Mario Vega:	Reacted to "rough consensus is n..." with 😂
01:09:12	felix (eest):	Reacted to "The discussion has..." with 👍
01:09:14	Parithosh Jayanthi:	Reacted to "rough consensus is n..." with 😂
01:09:19	William Morriss:	Reacted to "rough consensus is n..." with 😂
01:09:19	Tomasz Stańczak:	Replying to "The discussion has b..."

They spent 4 years building and analyzing across multiple teams, together with Solidity team, etc
01:09:20	Parithosh Jayanthi:	Reacted to "That’s a standing re..." with 👍
01:09:22	pcaversaccio:	Replying to "The discussion has b..."

Core devs are disconnected to some extend to the application layer if you ask me
01:09:24	rodiazet | Ipsilon:	lest decide and get back to testing and finalising spec
01:09:24	Potuz:	Replying to "The discussion has b..."

I agree, but there's not much that can be done but ossifying if any change to the EVM takes over 4 years to agree on and the community reacts after things have been scheduled after years of active discussions
01:09:25	Roman:	Replying to "The discussion has b..."

@pcaversaccio do you wanna speak up since you are informed and haven’t had a chance to? Or do you feel like the post was enough?
01:09:28	Shoham Chakraborty:	Reacted to "please move PAY to C..." with 👍
01:09:30	Danno Ferrin | Ipsilon:	Replying to "rough consensus is n..."

EIP-1057 has entered the chat.
01:09:34	Maintainer.eth:	Reacted to "rough consensus is..." with 😂
01:09:35	Ahmad Bitar:	Reacted to please move PAY to C... with "👍"
01:09:38	pcaversaccio:	Replying to "The discussion has b..."

I'm happy to speal
01:09:39	pcaversaccio:	Replying to "The discussion has b..."

speak
01:09:42	Ben Adams:	What if EOF is ready and PeerDAS is not?
01:09:48	Danno Ferrin | Ipsilon:	Replying to "please move PAY to C..."

Better, SFI
01:09:52	Shoham Chakraborty:	Reacted to "What if EOF is ready..." with 😂
01:09:54	Tomasz Stańczak:	Replying to "The discussion has b..."

Some core devs are very close to application layer, it would be a very generalizing statement
01:09:55	William Morriss:	Reacted to "Better, SFI" with ❤️
01:09:55	Ahmad Bitar:	Reacted to What if EOF is ready... with "😂"
01:09:58	rodiazet | Ipsilon:	Reacted to "please move PAY to C..." with 👍
01:10:02	Sophia Gold:	Reacted to "rough consensus is..." with 😂
01:10:02	Parithosh Jayanthi:	Reacted to "What if EOF is ready..." with 😂
01:10:03	Ahmad Bitar:	Replying to "What if EOF is ready..." 

 Thats more likely than people think
01:10:09	0xTraub:	Reacted to "rough consensus is n..." with 😂
01:10:09	Ansgar Dietrichs:	Replying to "What if EOF is ready..."

that would be the ideal case. then EOF waits
01:10:11	Luis Pinto | Besu:	Replying to "sorry just joined no..."

True, new features won’t land on legacy EOF though I suppose
01:10:12	yoav:	Pascal
01:10:17	Marissa Posner:	Reacted to "What if EOF is ready..." with 😂
01:10:21	Potuz:	Replying to "The discussion has b..."

FWIW, after studying a bit of it I feel I would also be against inclusion of EOF, however, at this point in time, I feel it's in detriment of Ethereum as a whole to keep bikeshedding
01:10:25	Danno Ferrin | Ipsilon:	Reacted to "that would be the id..." with ❤️
01:10:31	William Morriss:	Replying to "What if EOF is ready..."

EOF is quite ready; they have been iterating on it for a while
01:10:33	lightclient:	Reacted to "FWIW, after studying..." with 😆
01:10:33	Roman:	Replying to "The discussion has b..."

Agree with @Tomasz Stańczak, that’s not a fair characterization
01:10:34	Danno Ferrin | Ipsilon:	Replying to "What if EOF is ready..."

We spend the time testing an fuzzing
01:10:34	Ansgar Dietrichs:	Replying to "rough consensus is n..."

a suicide pact is rough consensus though
01:11:03	stokes:	Replying to "What if EOF is ready..."

Would love more EL resources on blobs (mempool)
01:11:06	Hsiao-Wei Wang:	Reacted to "rough consensus is n..." with 😂
01:11:12	Luis Pinto | Besu:	What is complex is for a compiler to go through the current EVM bytecode
01:11:12	Fabio Di Fabio:	Reacted to "rough consensus is n..." with 😂
01:11:15	Tim Beiko:	If we do Option A (with PAY), what is the diff with the current Meta EIP? 

https://eips.ethereum.org/EIPS/eip-7607
01:11:16	Ansgar Dietrichs:	Replying to "What if EOF is ready..."

yes I don’t expect EOF to miss the fork. just wanted to make sure we are aligned on process here
01:11:22	Francesco:	Reacted to "I agree, but there's..." with 👍
01:11:24	frangio:	it's a very technical EVM change so i dont know to what extent app devs can give feedback

and fwiw i think EOF is really hard to understand in large part because of the split into thousands of EIPs and overall its not well presented
01:11:44	Tim Beiko:	Replying to "it's a very technica..."

It used to be a single EIP but then people gave the feedback that it was too long and should be too modular 😄
01:11:45	Tomasz Stańczak:	But if it is hard to understand for someone then better not to take a stance instead of advocating against?
01:11:55	Roman:	Reacted to "But if it is hard to..." with 👍
01:11:57	Piper Merriam:	I'm not sold on general "complexity" fear. I've read the post. Evm itself is also complex.
01:12:01	Gary Schulte:	Reacted to But if it is hard to... with "👍"
01:12:09	rodiazet | Ipsilon:	Reacted to "But if it is hard to..." with 👍
01:12:16	Alex (axic):	Reacted to "it's a very technica..." with 💯
01:12:17	Tom Teman:	Reacted to I'm not sold on gene... with "👍"
01:12:24	yoav:	Are you against even the minimal version that allows introspection and just adds the container?
01:12:26	Tom Teman:	Reacted to But if it is hard to... with "👍"
01:12:28	Tomasz Stańczak:	But same, very appreciated that you did raise these concerns.
01:12:34	Mercy Boma Naps-Nkari:	Reacted to "it's a very technica..." with 💯
01:12:37	Enrico Del Fante (tbenr):	Reacted to "But same, very appre..." with 💯
01:12:43	yoav:	Reacted to "But same, very appre..." with 👍
01:12:51	frangio:	Reacted to "But same, very appre..." with 👍
01:12:52	Maintainer.eth:	Reacted to "But same, very app..." with ❤️
01:12:58	yoav:	Reacted to "But same, very appre..." with 👍
01:13:00	Dustin:	Replying to "I'm not sold on ge..."

Yes, also, various of the objections were generic "EVM change" objections, it didn't matter which change
01:13:01	Luis Pinto | Besu:	Reacted to "But same, very appre..." with 💯
01:13:02	pcaversaccio:	to be clear I don't want to sound disrespectful
01:13:07	sacha:	mteam has a good thread on pushbacks
https://x.com/mteamisloading/status/1900733790873587906
01:13:09	yoav:	Reacted to "But same, very appre..." with 👍
01:13:11	nixo:	Reacted to "But same, very appre..." with 💯
01:13:11	nixo:	Reacted to "But same, very appre..." with ❤️
01:13:12	nixo:	Reacted to "But same, very appre..." with 👍
01:13:26	Dragan Rakita:	Reacted to "But same, very appre..." with ❤️
01:13:26	Dankrad Feist:	Replying to "sorry just joined no..." 

 why should we do something that app devs don't need though...
01:13:29	William Morriss:	Replying to "it's a very technica..."

modular is much better
01:13:30	Dragan Rakita:	Reacted to "But same, very appre..." with 💯
01:13:34	felix (eest):	Reacted to "But same, very app..." with ❤️
01:13:35	lightclient:	Reacted to "why should we do som..." with 👍
01:13:36	Maintainer.eth:	Reacted to "to be clear I don'..." with ❤️
01:13:55	Ahmad Bitar:	Reacted to But if it is hard to... with "👍"
01:13:57	rodiazet | Ipsilon:	Reacted to "it's a very technica..." with 💯
01:14:02	Dankrad Feist:	Reacted to well should this be ... with "👍"
01:14:03	Piper Merriam:	Also not sold on the suggested alternative approach via iterative change. I think doing it as a single push is a much more effective way to do these changes.
01:14:04	nflaig:	Reacted to "But same, very appre..." with 💯
01:14:15	frangio:	app devs were bit by gas schedule changes in the past. eof would have prevented that and will prevent that in the future
01:14:34	yoav:	Replying to "sorry just joined no..."

@Dankrad Feist it unlocks things that they do want. E.g. native AA (eip-7701). More unlocks to come.
01:14:41	Karlos Zurutuza:	Reacted to "Also not sold on the..." with ❤️
01:14:47	Dustin:	Replying to "I'm not sold on ge..."

And especially this narrative of, well, ok, the overall goals are still good, but here's minimal approach to subgoal A, minimal approach to subgoal B, to subgoal C, etc.
 
That's how EOF evolved -- no one part is that complex on its own (mostly, a couple exceptions), it's a lot of changes all at once
01:14:57	Carl Beekhuizen:	Reacted to "why should we do som..." with 👍
01:15:06	Dankrad Feist:	Replying to "sorry just joined no..." 

 yes I'd be ok with an eof version that implements native aa
01:15:19	Nicolas Consigny:	Replying to "But if it is hard to..."

The way I understood it is Pascal says that it's very hard for the average app dev to give feedback due to the complexity. Which is a valid concern and something we can maybe improve (i.e the "disconnect between core devs and app layer"). But Pascal did spend the time and learned all the details to give a thoughtful feedback (shoutout to him for doing so).
01:15:19	Ansgar Dietrichs:	+1 to normalizing shipping cutoff
01:15:19	rodiazet | Ipsilon:	Reacted to "I'm not sold on gene..." with 👍
01:15:25	Dankrad Feist:	Replying to "sorry just joined no..." 

 but any version that doesn't seems like complexity with low benefit
01:15:25	Karlos Zurutuza:	Reacted to "+1 to normalizing sh..." with 👍
01:15:26	Nicolas Consigny:	Reacted to "to be clear I don't ..." with ❤️
01:15:28	yoav:	Replying to "sorry just joined no..."

@pcaversaccio what's your opinion of the minimal EOF version that doesn't remove things like introspection?
01:15:31	Sophia Gold:	Reacted to "+1 to normalizing ..." with 👍
01:15:39	Guillaume:	I disagree, a lot of unnecessary things are just shipped because people, including core devs, don't understand the implications and remain silent. The burden of proof is on the EIP champion.
01:15:53	Philippe Schommers:	Reacted to "I disagree, a lot of..." with 👍
01:15:56	Matilda Clerke:	Reacted to "I disagree, a lot of..." with 👍
01:16:11	pcaversaccio:	Replying to "sorry just joined no..."

Let me get back to you on this later - need to read this properly
01:16:20	Nicolas Consigny:	Replying to "But if it is hard to..."

Disagree on which part ?
01:16:23	yoav:	Replying to "sorry just joined no..."

> yes I'd be ok with an eof version that implements native aa

AA is not an EOF feature, but a feature built upon EOF.  EOF is not a feature but scaffolds that enable many things in future forks
01:16:31	Dustin:	Replying to "I'm not sold on ge..."

And I'm 100% unconvinced that people who just this week are discovering this (not necessarily the author of some of these posts) this month won't make a lot of the same mistakes and evolve a lot of the same quirks the various EOF EIPs have
01:16:32	Piper Merriam:	Reacted to +1 to normalizing sh... with "👍"
01:16:32	Bastin:	Reacted to "But if it is hard to..." with 👎
01:16:37	Guillaume:	Replying to "But if it is hard to..."

that you should remain silent if you feel a change is hard to understand
01:16:44	Nicolas Consigny:	Reacted to "that you should rema..." with 👍
01:16:52	Nicolas Consigny:	Replying to "But if it is hard to..."

Agreed 🤝
01:16:54	stokes:	Now we turn to shipping
01:17:01	Dankrad Feist:	Replying to "sorry just joined no..." 

 right but in the sense of having version, eof is already shipped
01:17:11	Luis Pinto | Besu:	Reacted to "I disagree, a lot of..." with 👍
01:17:12	yoav:	Reacted to "Let me get back to y..." with 👍
01:17:14	Dankrad Feist:	Replying to "sorry just joined no..." 

 versioning*
01:17:14	Matilda Clerke:	Reacted to "Now we turn to shipp..." with 🚢
01:17:16	Trent:	Reacted to "Now we turn to shipp..." with 🚢
01:17:26	Justin Florentine (Besu):	Reacted to "Also not sold on the..." with ❤️
01:17:35	Dankrad Feist:	Replying to "sorry just joined no..." 

 my argument is that we should only have versions that add major features
01:17:39	pcaversaccio:	Replying to "sorry just joined no..."

verkle tree EIP has versioning as well btw
01:17:41	Ansgar Dietrichs:	+1 to modexp raise cfi, seems super uncontroversial
01:17:44	frangio:	Reacted to "We spend the time te..." with 👍
01:17:44	marek:	Reacted to "+1 to modexp raise c..." with 👍
01:17:52	Ben Adams:	Reacted to "+1 to modexp raise c..." with 👍
01:18:01	Roman:	Reacted to "+1 to modexp raise c..." with 👍
01:18:24	Francis Li:	Would love to include https://eips.ethereum.org/EIPS/eip-7892 as well, it's BPO, and requires minimal change with PoC already done
01:18:32	Ansgar Dietrichs:	acd process halted for 4 weeks while geth looks into blog providers
01:18:40	Sina Mahmoodi:	Reacted to "acd process halted f..." with 😂
01:18:41	Roman:	Reacted to "acd process halted f..." with 😂
01:18:42	Karlos Zurutuza:	Reacted to "acd process halted f..." with 😂
01:18:46	Tomasz Stańczak:	Replying to "But if it is hard to..."

Yeah, do not remain silent, that was not the intention behind the sentence. Asking lots of questions - desired. Advocating against seems a bit more opinionated that ideally would stem from better understanding. But I can also see the argument that someone was not given enough time. But here we hear that from the 4 years process only a few weeks were used.
01:18:51	Francis Li:	Reacted to "acd process halted..." with 😂
01:18:53	Maintainer.eth:	Reacted to "acd process halted..." with 😂
01:19:11	Potuz:	ohh crap
01:19:19	Barnabas:	Replying to "ohh crap"

micdao
01:19:22	Tomasz Stańczak:	Replying to "But if it is hard to..."

There will be always someone in the community who has not had enough time yet to analyze an d understand in details
01:19:22	Philippe Schommers:	Reacted to "ohh crap" with 😂
01:19:26	Ben Adams:	Reacted to "ohh crap" with 😂
01:19:44	Barnabas:	Reacted to "ohh crap" with 😂
01:19:51	rudolf:	Reacted to "Would love to includ…" with 👌
01:19:52	Tim Beiko:	https://eips.ethereum.org/EIPS/eip-7607#proposed-for-inclusion
01:19:55	Roman:	Reacted to "ohh crap" with 😂
01:19:57	milen:	Reacted to "acd process halted f..." with 😂
01:20:00	Potuz:	Replying to "ohh crap"

yeah
01:20:05	Potuz:	Replying to "ohh crap"

Fixed it hopefully
01:20:09	Tim Beiko:	https://github.com/ethereum/EIPs/pull/9528
01:20:11	Dustin:	Reacted to "The discussion has..." with 👍
01:20:13	Tim Beiko:	https://github.com/ethereum/EIPs/pull/9451
01:20:19	Ameziane Hamlat:	Reacted to "+1 to modexp raise c..." with 👍
01:20:29	Barnabas:	Reacted to "Fixed it hopefully" with 🎉
01:20:35	Dustin:	Reacted to "I agree, but there..." with 👍
01:20:36	Nicolas Consigny:	Reacted to "There will be always..." with 👍
01:20:41	Nicolas Consigny:	Reacted to "Fixed it hopefully" with 🎉
01:20:41	Ansgar Dietrichs:	Replying to "But if it is hard to..."

a meta problem is that we are not good at resolving conflicts for in-work EIPs before they reach this acd inclusion discussion stage, at which point they are already time sensitive.

see e.g. ePBS, Verkle, …
01:20:56	Parithosh Jayanthi:	Reacted to "Fixed it hopefully" with 🎉
01:20:57	sacha:	Reacted to "Yeah, do not remain ..." with ❤️
01:21:03	Sophia Gold:	Scope for time!
01:21:09	spencer-tb:	If we stick to PeerDAS + EOF (opt. A with PAY), I’d rather not add anything else on the EL. Smaller fork is safer fork.
01:21:24	Luis Pinto | Besu:	Reacted to "If we stick to PeerD..." with 🍴
01:21:37	Ansgar Dietrichs:	ideally peerdas before devconnect tbh
01:21:46	Justin Florentine (Besu):	not even r1 curve 🧌
01:22:03	Ansgar Dietrichs:	Replying to "If we stick to PeerD..."

I think small changes might still be fine, but yes, should be very limited
01:22:03	Tomasz Stańczak:	Very much the community ask
01:22:04	Shoham Chakraborty:	Replying to "not even r1 curve 🧌"

We need the r1 curve
01:22:16	Ansgar Dietrichs:	Reacted to "We need the r1 curve" with 👍
01:22:17	Parithosh Jayanthi:	Reacted to "If we stick to PeerD..." with 🍴
01:22:42	kasey (fnord):	Replying to "But if it is hard to…"
An idea I’ve shared with a few people is to build a look ahead into the acd process. Separate quick presentation of a topic from more in depth discussion. So at the end of each call, have 5 minute slots where people explain what they want to talk about on the next call and direct everyone to the eth pm gh issue for that next call to discuss further. Arrange these calls more explicitly around the eth pm github issues, so we do more of the discussion and basic question asking async, and only use these calls to resolve informed contention.
01:22:44	spencer-tb:	Replying to "If we stick to PeerD..."

Okay for small changes if its not big on testing complexity
01:22:55	Ansgar Dietrichs:	r1 is CFI, no?
01:23:08	Barnabas:	anyone working on r1, any client impl ready?
01:23:08	Guillaume:	Replying to "If we stick to PeerD..."

I know where this is going ...
01:23:17	danceratopz:	Reacted to "I know where this is..." with 😆
01:23:23	Justin Florentine (Besu):	Reacted to "anyone working on r1..." with ➕
01:23:24	Ansgar Dietrichs:	Replying to "anyone working on r1..."

is it not already in geth?
01:23:26	spencer-tb:	Reacted to "I know where this is..." with 😆
01:23:27	Toni Wahrstätter:	Reacted to "I know where this is..." with 😆
01:23:31	Parithosh Jayanthi:	Replying to "anyone working on r1..."

Its on op-geth
01:23:33	Parithosh Jayanthi:	Replying to "anyone working on r1..."

Not geht
01:23:38	Ansgar Dietrichs:	Replying to "anyone working on r1..."

ah, makes sense
01:23:40	Dragan Rakita:	Reacted to "We need the r1 curve" with 👍
01:23:41	Shoham Chakraborty:	Reacted to "I know where this is..." with 😆
01:23:49	Ansgar Dietrichs:	Replying to "anyone working on r1..."

but also, I think I remember some concerns around some small details, return value and gas price
01:23:58	Carl Beekhuizen:	Reacted to "+1 to normalizing sh..." with 👍
01:23:58	Philippe Schommers:	Reacted to "I know where this is..." with 😢
01:24:01	Ansgar Dietrichs:	Replying to "anyone working on r1..."

not sure if these have been addressed yet
01:24:10	Carl Beekhuizen:	Reacted to "+1 to modexp raise c..." with 👍
01:24:21	Ansgar Dietrichs:	Reacted to "Okay for small chang..." with 👍
01:24:24	William Morriss:	Reacted to "If we stick to PeerD..." with 🍴
01:24:34	rodiazet | Ipsilon:	ipsilon plans to have C++ implementation
01:25:08	Andrew Ashikhmin:	Replying to "anyone working on r1..."

Erigon has it (and it’s live on Polygon)
01:25:32	rodiazet | Ipsilon:	Reacted to "Erigon has it (and i..." with ❤️
01:25:44	Potuz:	what does it mean "from scratch"?
01:25:56	Shoham Chakraborty:	Reacted to "Erigon has it (and i..." with ❤️
01:26:19	Piper Merriam:	Which CL clients are not currently ready for this?
01:26:59	Gajinder:	Shouldn't be an issue for lodestar post pectra transition is complete for deposits with ofcourse checkpoint sync onwards that point
01:27:05	Ahmad Bitar:	Reacted to I know where this is... with "😆"
01:27:28	Dustin:	Post 6110 it would violate specs, more or less
01:27:39	marek:	We tested this internally and confirmed with (all?) CL clients that they are ready for history expiry. However, it would still be good to double-check.
01:27:41	James He:	I think we have an issue ( prysm)
01:27:52	marek:	Replying to "We tested this inter..."

of course, after Pectra - sepolia
01:27:56	James He:	At least it will print an error*
01:28:17	Dustin:	Just wait for 6110, it resolves all
01:28:23	Dustin:	before, it's messy
01:28:37	Dustin:	there's a transition period
01:28:38	marek:	can we drop pre-merge history for sepolia?
01:28:46	stokes:	Ah yes, that is a small but important detail
01:28:46	Tim Beiko:	Heh we said we’d drop history on May 1st: if we keep our April 30th mainnet date, we’re good :tong
01:28:50	Tim Beiko:	Replying to "Ah yes, that is a sm..."

yes
01:29:03	Parithosh Jayanthi:	Replying to "can we drop pre-merg..."

Yes, huge fan of doing history expiry on the testnet first
01:29:12	Tim Beiko:	Replying to "can we drop pre-merg..."

I think it would be pretty reckless not to
01:29:13	Potuz:	just days max
01:29:27	Dustin:	meh
01:29:31	Dustin:	enough with "Target dates"
01:29:31	Dustin:	etc
01:29:35	Dustin:	wait for 6110 transition
01:29:40	Dustin:	just wait for it
01:29:42	marek:	Replying to "can we drop pre-merg..."

yeah, but I am wondering if we have any blocking issues
01:29:46	Parithosh Jayanthi:	Why not set a date for sepolia now, then do it on mainnet after
01:29:53	Mario Vega:	Reacted to "Why not set a date f..." with 👍
01:29:56	Josh Davis:	Reacted to "Why not set a date f..." with 👍
01:29:59	Carl Beekhuizen:	Reacted to "Why not set a date f..." with 👍
01:30:01	felix (eest):	Reacted to "Why not set a date..." with 👍
01:30:02	Barnabas:	Reacted to "Why not set a date f..." with 👍
01:30:15	Mikhail Kalinin:	it is hours to cover the gap and to deprecate eth1data poll, not days
01:30:26	Rafael Matias:	Reacted to "Why not set a date f..." with 👍
01:30:27	Barnabas:	could we not do it before mainnet fork?
01:30:35	Mikhail Kalinin:	Replying to "it is hours to cover..."

*depends on when the first 6110 deposit is submitted
01:30:36	marek:	Reacted to "Why not set a date f..." with 👍
01:30:52	Potuz:	I agree with Piper
01:30:59	marek:	Replying to "Why not set a date f..."

yes, let's agree on a date for sepolia now
01:31:02	Potuz:	we can probably schedule something conservative now
01:31:07	stokes:	Does provisional 4 weeks timeline work?
01:31:08	Potuz:	and we can delay it beacuse it's cheap
01:31:13	Parithosh Jayanthi:	Reacted to "we can probably sche..." with 👍🏽
01:31:14	Potuz:	yes
01:31:53	Barnabas:	we don’t need to schedule this tho?
01:31:57	marek:	Reacted to "we don’t need to sch..." with 👍
01:32:04	Gajinder:	Replying to "Does provisional 4 w..." 

 Makes sense to me
01:32:10	Barnabas:	lets just roll it out asap
01:32:18	marek:	yes, we just need a green light for ELs to drop history
01:32:23	Tim Beiko:	We only have 5m left, I feel like we should move this to a breakout?
01:32:25	Dustin:	+1 to Felix
01:32:28	Potuz:	Reacted to "lets just roll it ou..." with 👍🏼
01:32:31	Tim Beiko:	But the plan seems a bit half-baked right now 😅
01:32:41	stokes:	Replying to "But the plan seems a..."

Is it?
01:32:44	stokes:	Replying to "But the plan seems a..."

Sepolia may 1st
01:32:47	Dustin:	Replying to "But the plan seems..."

howso
01:32:52	stokes:	Replying to "But the plan seems a..."

Provisionally say mainnet 4 weeks after pectra on mainnet
01:32:57	Tim Beiko:	Replying to "But the plan seems a..."

Did we agree to this?
01:33:02	Dustin:	Replying to "But the plan seems..."

yes
01:33:10	stokes:	Replying to "But the plan seems a..."

Not explicitly but it is consistent w/ what has been said
01:33:13	Tim Beiko:	Replying to "But the plan seems a..."

Ok then! Wasn’t super clear to me
01:33:26	Dustin:	Replying to "But the plan seems..."

Bangkok L1 R&D discussions, and Portal Summit
01:33:29	Tim Beiko:	Reacted to "Bangkok L1 R&D discu..." with 👍
01:33:36	Matilda Clerke:	I thought the idea was that eth/69 signals that a node may not have the full block history? i.e. An eth/68 node is expected to have full block history.
01:34:03	Tim Beiko:	Replying to "But the plan seems a..."

It would be nice to have a canonical place to document this 😄
01:34:12	Dustin:	Replying to "I thought the idea..."

Part of EIP-4444 redefines this
01:34:31	Dustin:	Replying to "I thought the idea..."

That expectation disappears
01:34:43	Dustin:	Replying to "But the plan seems..."

Agree
01:35:20	Gajinder:	A info EIP added to fusaka meta
01:35:26	Matilda Clerke:	Replying to "I thought the idea w..."

ok, I'll revisit the EIP
01:35:27	Pooja Ranjan:	Reacted to "A info EIP added to ..." with 👍
01:35:30	Maintainer.eth:	Reacted to "A info EIP added t..." with 👍
01:35:37	Piper Merriam:	Agreed
01:35:41	Piper Merriam:	Yes
01:36:43	Ansgar Dietrichs:	link to research call announcement: https://ethereum-magicians.org/t/protocol-research-call/23261
01:36:54	Tim Beiko:	Reacted to "link to research cal..." with ❤️
01:36:56	nixo:	Reacted to "link to research cal..." with ❤️
01:36:57	stokes:	Reacted to "link to research cal..." with ❤️
01:37:00	Pooja Ranjan:	Reacted to "link to research cal..." with ❤️
01:37:04	Ansgar Dietrichs:	Replying to "link to research cal..."

hope to see some of you all there!
01:37:13	jochem-brouwer (EthJS):	Heeft gereageerd op "hope to see some o..." met 👍
01:37:15	Barnabé Monnot:	Reacted to "link to research cal..." with ❤️
01:37:22	Tim Beiko:	https://ethereum-magicians.org/t/testnet-name-needed-for-sepolia-replacement/23221
01:37:31	Potuz:	history expiry: I think we can 
- Mainnet: agree right now that it will be dropped 4 weeks after Pectra and that's it, roll back this if there are problems Sepolia or too many deposits.
- Sepolia, I'd say clients can start dropping now if they want to.
01:37:38	Potuz:	it' s preferrable than to wait to test
01:37:42	Maintainer.eth:	Reacted to "https://ethereum-m..." with 👍
01:37:51	Ansgar Dietrichs:	I maintain that all acd naming decisions should be auctioned off onchain
01:37:56	Matilda Clerke:	Reacted to "history expiry: I th..." with 👍
01:38:02	Maintainer.eth:	Thank you all, gm. 👋
01:38:05	Tim Beiko:	Replying to "I maintain that all ..."

I had a devcon talk about that!
01:38:07	Danno Ferrin | Ipsilon:	Replying to "I maintain that all ..."

With suitable veto rights.
