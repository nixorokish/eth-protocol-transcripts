WEBVTT

1
00:01:32.230 --> 00:01:33.340
Barnabas: Hello?

2
00:01:36.610 --> 00:01:37.540
Matthew Keil: Heidi-ho.

3
00:01:37.790 --> 00:01:38.790
Enrico Del Fante (tbenr): Hello.

4
00:02:16.860 --> 00:02:17.610
Tim Beiko: Hello?

5
00:02:20.760 --> 00:02:21.890
Pooja Ranjan: Good morning.

6
00:04:25.840 --> 00:04:29.459
Justin Florentine (Besu): Good morning, all core devs!

7
00:04:30.900 --> 00:04:32.419
Tim Beiko: Mori, Justin.

8
00:05:21.170 --> 00:05:24.599
Tim Beiko: Okay, we'll get started in just a minute.

9
00:06:37.020 --> 00:06:41.110
Tim Beiko: Okay, we can move over to the livestream.

10
00:06:43.100 --> 00:06:44.230
Josh Davis: You're alive.

11
00:06:45.020 --> 00:06:59.449
Tim Beiko: Thanks, Josh. So welcome, everyone, to ACDE number 221. I have a fairly light agenda today, but we'll talk about a lot of important things, so,

12
00:06:59.990 --> 00:07:14.879
Tim Beiko: Fusaka, obviously, and, the path towards the testnets. Then, if there's any, updates on Glamsterdam, we can cover those, and a couple minor process things.

13
00:07:14.880 --> 00:07:25.130
Tim Beiko: But to start on Fusaka, we've had the Bug Bounty competition, live. I don't know if Frederick is on the call to give a…

14
00:07:25.150 --> 00:07:27.749
Tim Beiko: High-level overview of how that's been going.

15
00:07:28.470 --> 00:07:30.240
Fredrik: Yeah, I'm here.

16
00:07:30.690 --> 00:07:38.170
Fredrik: Yeah, we have, had a few interesting reports. We've had a lot of…

17
00:07:39.330 --> 00:07:44.680
Fredrik: Issues that are not actually issues as well, but,

18
00:07:46.080 --> 00:07:50.279
Fredrik: Yeah, things are, definitely progressing, and

19
00:07:50.880 --> 00:08:02.670
Fredrik: What's… like, if we look at the previous, competitions, we've seen more and more valid reports as the competition nears its end, because it's quite complex to…

20
00:08:03.080 --> 00:08:07.389
Fredrik: To wrap your head around these, these upgrades, so,

21
00:08:07.940 --> 00:08:11.229
Fredrik: Yeah, quite excited to see what's gonna come out of the competition.

22
00:08:14.950 --> 00:08:15.690
Tim Beiko: Thanks.

23
00:08:17.390 --> 00:08:24.430
Tim Beiko: And yeah, I know, there's been, like, already some bugs reported in some clients, some clients seem to be working on them,

24
00:08:24.870 --> 00:08:31.409
Tim Beiko: But yes, at least so far, nothing catastrophic, seems to have, come up.

25
00:08:32.000 --> 00:08:40.469
Fredrik: Nothing, nothing that should affect the timeline has come up on the main upgrade or anything should, has come up yet.

26
00:08:41.130 --> 00:08:41.730
Tim Beiko: Nice.

27
00:08:41.840 --> 00:08:44.299
Tim Beiko: I'm… Yeah, so I guess this…

28
00:08:44.890 --> 00:09:01.499
Tim Beiko: Yeah, this kind of ties into the second point, so the testnet schedule. We discussed this last week, and had, like, a full update for the rollouts for Fusaka, including the BPOs on testnets.

29
00:09:01.770 --> 00:09:17.799
Tim Beiko: So the plan was to, for Koleshky, on October 1st, so basically a week from now, and then, two weeks after that for Sepolia, two weeks after that for Kudi, have the BPOs, on each of these networks,

30
00:09:17.800 --> 00:09:22.310
Tim Beiko: activate one week after their, Fusaka activation.

31
00:09:22.310 --> 00:09:26.759
Tim Beiko: So, yes, there's this…

32
00:09:27.510 --> 00:09:45.540
Tim Beiko: still makes sense to people. I know some clients have put out some releases, so the plan is we'll, announce this formally with a blog post tomorrow, once we have a couple more releases. I think there might be one or two clients, who would have a release more by Monday than by tomorrow.

33
00:09:45.980 --> 00:09:49.869
Tim Beiko: But yeah, just wanted to give people a chance to chime in on the schedule, and…

34
00:09:50.040 --> 00:09:53.490
Tim Beiko: Raise any concerns before we… move ahead.

35
00:10:01.790 --> 00:10:08.220
Tim Beiko: Okay, Lighthouse release will be ready Monday, and…

36
00:10:10.620 --> 00:10:20.069
Tim Beiko: Okay, we're… and then, yeah, Barnabas saying we're… we still don't have a release from Geth, Lighthouse, Nimbus, Prism. I guess, is there anyone from Geth, Nimbus, or Prism that wants to give a…

37
00:10:20.590 --> 00:10:21.790
Tim Beiko: Bit of context.

38
00:10:23.320 --> 00:10:25.390
Tim Beiko: Or EPA for their releases.

39
00:10:29.860 --> 00:10:35.760
Dustin: Sure. So… the release, per se, for Nimbus is…

40
00:10:36.190 --> 00:10:46.140
Dustin: ready? We're having process issues on the… on the… Build side for… still… unclear reasons.

41
00:10:46.310 --> 00:10:50.230
Dustin: In any case, that's where we are. Where we are, sorry.

42
00:10:53.340 --> 00:11:00.810
Tim Beiko: Got it. And I guess… Should we expect something in the next day or so, or… I…

43
00:11:00.810 --> 00:11:03.229
Dustin: That… that's the goal, yeah.

44
00:11:03.230 --> 00:11:05.619
Tim Beiko: Good luck, yeah. Sounds good.

45
00:11:06.780 --> 00:11:11.179
Dustin: In any case, we're not debugging Ethereum issues at this point. We're looking at others.

46
00:11:11.180 --> 00:11:15.340
Tim Beiko: Yeah, debugging CI pipeline issues. Yeah, yeah.

47
00:11:15.530 --> 00:11:17.570
Tim Beiko: Yeah, that's a good sign.

48
00:11:18.020 --> 00:11:22.169
Tim Beiko: Anyone from Prism or guests wanna… Give some coffects?

49
00:11:33.490 --> 00:11:39.799
Tim Beiko: Okay, if not, then, oh, yeah, Prism is working on it, also hoping for a release in the next day or so.

50
00:11:40.580 --> 00:11:41.470
Tim Beiko: Awesome.

51
00:11:44.290 --> 00:11:52.210
Tim Beiko: And then, yeah, Geth, if you want to help Geth also, working on it already, he's trying to get it out today.

52
00:11:52.770 --> 00:12:02.870
Tim Beiko: So yeah, so, some clients already have the releases out. If you're using those other clients, you can already go to their GitHub pages and download the latest release.

53
00:12:02.910 --> 00:12:14.709
Tim Beiko: for everyone else, expect something either tomorrow or Monday. We'll have the announcement go live tomorrow, and then obviously update it on Monday if more releases come in, from other clients.

54
00:12:15.080 --> 00:12:31.080
Tim Beiko: And then, Barnabas said that PandaOps is gonna run, Shadow Fork of Holeshky tomorrow with, I guess, the releases that are out, and then potentially some of the branches, for the, targeted releases for other clients.

55
00:12:31.120 --> 00:12:35.209
Tim Beiko: But yeah, congrats, everyone. It's been a…

56
00:12:35.880 --> 00:12:42.510
Tim Beiko: long, long sprint, to get the Fusaka releases, so excited to see this,

57
00:12:42.640 --> 00:12:48.590
Tim Beiko: Yeah, finally about to ship on testnets, yeah, Trudy, great work, everyone.

58
00:12:50.090 --> 00:13:14.690
Tim Beiko: And yeah, for anyone who wants the full schedule ahead of the, announcement tomorrow, the Meta EIP, EIP7607 has been updated, so there's, both the fork activations there, as well as all the BPO listed for all of the testnets, and then once we've seen Houdi finally activate successfully, assuming there's no issues through this rollout, obviously, then we talk about, the specific timeline for mainnet.

59
00:13:15.950 --> 00:13:16.810
Tim Beiko: I'm…

60
00:13:18.010 --> 00:13:29.689
Tim Beiko: And then one last exciting thing, I guess, to, at least call out on this call is that as part of this release, we've, discussed on Monday

61
00:13:29.690 --> 00:13:38.810
Tim Beiko: raising the default gas limit on mainnet to 60 million, so we had an informational EIP for this, and I believe,

62
00:13:38.840 --> 00:13:44.470
Tim Beiko: the EL clients and CL clients that are, that are being released will have a default

63
00:13:44.620 --> 00:13:53.119
Tim Beiko: value for $60 million as part of their mainnet Fusaka releases. So the testnet's already running at $60 million, but then

64
00:13:53.300 --> 00:14:04.470
Tim Beiko: Once we have these mainnet releases out, the plan is to have a 60 million default gas limit so that, yeah, the network can kind of, increase towards this by default.

65
00:14:04.470 --> 00:14:17.909
Tim Beiko: Once we… once we start, preparing for… for, Fusaka's activation on Mainnet, and if things go smoothly, this means that before Fusaka goes live, Mainnet would already be running at 60 million gas.

66
00:14:18.040 --> 00:14:18.730
Tim Beiko: Pop.

67
00:14:19.210 --> 00:14:21.219
Tim Beiko: Yeah, any comments?

68
00:14:21.570 --> 00:14:23.140
Tim Beiko: Thoughts on this?

69
00:14:30.970 --> 00:14:39.040
Tim Beiko: Okay, that's the last minor thing, so, for everyone who's just an EIP author for Dysphoric.

70
00:14:39.040 --> 00:14:47.960
Tim Beiko: When we move to testnets is the time to move the EIPs to last call, so I… I opened a bunch of PRs right before this call.

71
00:14:47.960 --> 00:15:00.019
Tim Beiko: to move every single Fusaka EIP to last call, so if you're an author, you can just go and review the PR and ideally approve it or make any final changes in your EIP, and then,

72
00:15:00.030 --> 00:15:05.919
Tim Beiko: once mainnet is, is, once Fusaka's gone live on Mainnet, we'll move all these to 5 off.

73
00:15:07.370 --> 00:15:14.820
Tim Beiko: But yeah, anything else on Fusaka? We are in the finishing stages.

74
00:15:22.270 --> 00:15:23.389
Tim Beiko: Okay, off.

75
00:15:24.250 --> 00:15:29.510
Tim Beiko: Nice. Yeah, again, congrats, this is huge to finally see this start to ship.

76
00:15:30.000 --> 00:15:33.920
Tim Beiko: Moving on, then?

77
00:15:34.060 --> 00:15:44.399
Tim Beiko: Glamsterdam, I know there were some breakouts on EPVS and block access lists. Did people want to give updates on those, or have points from them they wanted to discuss on the call?

78
00:15:51.160 --> 00:16:01.919
Toni Wahrstätter: I can give a quick update on block access lists. We had the breakout on Wednesday, we discussed, several points, yeah, please have a look at the agenda.

79
00:16:02.160 --> 00:16:15.129
Toni Wahrstätter: Basically there's no change to the block level access list ERP. We went a little deeper on self-destructs and how we want to handle precompiles in the block level access list and clarified

80
00:16:15.350 --> 00:16:19.219
Toni Wahrstätter: Yeah, how clients should, should handle them.

81
00:16:20.360 --> 00:16:26.609
Toni Wahrstätter: So, not that many news, I think. We are still, on the timeline to,

82
00:16:26.840 --> 00:16:29.730
Toni Wahrstätter: having the first FNET by October.

83
00:16:32.700 --> 00:16:33.470
Tim Beiko: I'll sub…

84
00:16:37.970 --> 00:16:41.120
Tim Beiko: Any other thoughts or updates on BALs?

85
00:16:45.010 --> 00:16:53.069
Tim Beiko: And, yeah, I… Taryn said in the chat there's an EPBS breakout, tomorrow. Taryn said, do you think people should

86
00:16:53.250 --> 00:16:56.740
Tim Beiko: Read up on, or try to look into before that?

87
00:16:57.040 --> 00:17:09.180
terence: We had a SPAC release, thanks to Justin, yesterday for, I believe this is Beta 0, so I think, like, EI37732 with this release,

88
00:17:09.180 --> 00:17:22.750
terence: at least the container type and the stage transition function are at a pretty good stage, such that we can implement and ready for definite zero. Hopefully, early November and end of October.

89
00:17:22.750 --> 00:17:38.520
terence: we should… we, like, want to claim will have a definite zero by then, but the latest spec is good for that. It also contains spec tests for the basic things, so we can do that as well. And yeah.

90
00:17:38.710 --> 00:17:45.049
terence: And, if there's questions, feedback, yeah, this Friday's breakout is a good forum for that.

91
00:17:48.410 --> 00:17:52.459
Tim Beiko: Nice. Barnabas asking if there's any EL implementation progression.

92
00:17:54.840 --> 00:18:02.960
terence: For, for EPBS, EIP7732, there's no EL, changes at all, yeah.

93
00:18:04.710 --> 00:18:06.330
Barnabas: My question was for Atlanta.

94
00:18:06.330 --> 00:18:07.010
Tim Beiko: Both.

95
00:18:07.810 --> 00:18:09.450
Tim Beiko: Okay, got it. Yeah.

96
00:18:14.640 --> 00:18:17.970
Tim Beiko: Yeah, do any of the ELs have started to work on the ELs?

97
00:18:21.480 --> 00:18:27.509
Andrew Ashikhmin: Yeah, so in Aragon, we've started working on it, but it's still early days.

98
00:18:29.340 --> 00:18:35.980
Tim Beiko: Okay, and Justin's saying Basu has, and I believe Geth has as well, so… at least a couple of the…

99
00:18:36.200 --> 00:18:40.240
Tim Beiko: ELs are, working on it, another one too, so… Nice.

100
00:18:42.880 --> 00:18:46.459
Tim Beiko: And then, back to EPBS,

101
00:18:46.970 --> 00:19:04.309
Tim Beiko: Barnabas is asking whether we should use, the latest CLPAC as the basis, I guess, for both EPBS and block accesses, should we use, yeah, beta 0 from V1.6 to base these definites on?

102
00:19:07.920 --> 00:19:14.640
Tim Beiko: I assume we should have to make sure that they're based on Fusaka, but does anyone… Disagree with that?

103
00:19:29.170 --> 00:19:45.099
Tim Beiko: Okay, maybe you can discuss this, I think, but yeah, I think to the extent we can build both the BAL and the PBS definites on top of Fusaka, that will save us some pain in the future, trying to rebase on the… from an old version of the spec.

104
00:19:53.510 --> 00:19:55.069
Tim Beiko: Anything else on that?

105
00:19:55.350 --> 00:19:58.869
Tim Beiko: either EPVS or block access lists people wanted to bring up.

106
00:20:11.210 --> 00:20:27.710
Tim Beiko: Okay, if not, then, the other thing I wanted to flag for, Amsterdam is, obviously, we've started to work on these two EIPs that are SFI'd, want to make some progress on them before accepting anything else, but, in terms of proposals for

107
00:20:27.970 --> 00:20:35.789
Tim Beiko: at Amsterdam generally. We said the deadline should be when we put out the mainnet releases for Fusaka.

108
00:20:36.130 --> 00:20:40.809
Tim Beiko: Which we don't have a date for yet, but I expect would happen in the next month or so.

109
00:20:40.930 --> 00:20:56.869
Tim Beiko: And so, if anyone on this call or listening has some EIPs they want to propose for Fusaka, or sorry, for Glamsterdam, please do so in the next few weeks. To do this, you just open a PR against the Meta EIP for Glamsterdam, and,

110
00:20:57.070 --> 00:21:00.500
Tim Beiko: yeah, propose your EIP. Justin?

111
00:21:01.490 --> 00:21:12.409
Justin Florentine (Besu): Hi, Tim, long-time listener, first-time caller. Quick question. How do you imagine, when we have EIPs that are, like, really early for CFI,

112
00:21:14.270 --> 00:21:26.579
Justin Florentine (Besu): getting them from CFI to SFI while still juggling all of the smaller PFI issues. I know I'm using a lot of acronyms here, but I'm thinking about things like, FOSSIL,

113
00:21:26.580 --> 00:21:40.130
Justin Florentine (Besu): Right? Where we're kind of like, we really want to do this, but it's also kind of a lot of work, and I'm just curious as to, like, how we imagine this fitting into this early process where we're trying to get everything in order and promote them through the different stages.

114
00:21:40.130 --> 00:21:43.000
Justin Florentine (Besu): So, thanks for your time, I'll take my answer off the air.

115
00:21:44.170 --> 00:21:46.750
Tim Beiko: Thanks. I guess my view there is…

116
00:21:47.130 --> 00:21:50.889
Tim Beiko: Yeah, look, we have to gate when the new proposals come in, so it limits

117
00:21:51.170 --> 00:21:57.309
Tim Beiko: what we have to review. So first step is actually looking at everything that's come in.

118
00:21:57.520 --> 00:22:02.560
Tim Beiko: And then, yes, I would… Advocate fairly strongly that we don't

119
00:22:03.110 --> 00:22:14.779
Tim Beiko: move anything from CFI to SFI until we're very far along with the implementations for the SFI EIPs, in this case, BALs and EPVS.

120
00:22:16.450 --> 00:22:20.310
Tim Beiko: And I think, you know, for fossil specifically, the question will be.

121
00:22:20.480 --> 00:22:32.459
Tim Beiko: do we think we understand it well enough? Do we think it adds, you know, like, a reasonable amount of complexity relative to the value we get of having it in this fork? And…

122
00:22:32.660 --> 00:22:42.019
Tim Beiko: you know, do we think it'll be easier to do, say, Fossil, or potentially, like, 3 small EIPs that are, like, you know, very well understood?

123
00:22:42.960 --> 00:22:47.730
Tim Beiko: So, yeah, I don't think there's a silver bullet here, beyond just making sure that we

124
00:22:47.980 --> 00:22:52.169
Tim Beiko: Keep the focus on the things we've already committed to before committed.

125
00:22:52.510 --> 00:22:55.070
Tim Beiko: Committing to even more, and…

126
00:22:58.490 --> 00:22:59.490
Tim Beiko: So…

127
00:23:00.600 --> 00:23:09.159
Tim Beiko: Yeah, I… so I guess I would put a pin in moving things from CFI to SFI until EQBS and block access lists are, like.

128
00:23:09.400 --> 00:23:18.769
Tim Beiko: you know, at the very least, running on a multi-client DevNet that's, you know, showing us what's the… what are, like, the open issues.

129
00:23:19.040 --> 00:23:31.400
Tim Beiko: And then I think the move from PFI to CFI, like, yeah, we should have the teams review all the different EIPs, kind of like we did in the last work, and, you know, make a list of

130
00:23:31.400 --> 00:23:45.480
Tim Beiko: what are the EIPs everyone feels strongly about, prioritize those, and when we have some breathing room in terms of implementation, we make a call of what from the CFI bucket we want to actually move up to SFI.

131
00:23:50.110 --> 00:23:51.509
Justin Florentine (Besu): That's clear. Thanks, bud.

132
00:23:51.840 --> 00:23:52.829
Tim Beiko: Yep, of course.

133
00:23:53.590 --> 00:23:57.300
Tim Beiko: I'm… Any other questions about this?

134
00:24:04.740 --> 00:24:14.190
Tim Beiko: Okay, related to this, Mark had a proposal, to somewhat more formally define

135
00:24:14.310 --> 00:24:24.679
Tim Beiko: what an EIP champion is and should do. He had a PR for this, but, yeah, Mark, do you want to give some context on this, and…

136
00:24:24.810 --> 00:24:27.169
Tim Beiko: Yeah, what you hope to get out of it?

137
00:24:28.080 --> 00:24:38.979
wolovim: Yeah, sure. Mostly what I'm doing is posing the question, like, would it be more helpful to clearly spell out the point of contact for each proposed EIP in a given fork? So…

138
00:24:39.270 --> 00:24:40.690
wolovim: Within…

139
00:24:40.910 --> 00:24:47.529
wolovim: The link you shared there is a minimal suggestion that we define the role as the primary point of contact.

140
00:24:47.720 --> 00:25:03.490
wolovim: Within a given network upgrade, and then we state that an EIP should specify a champion in the PR to propose it for inclusion. So the… the motivation there is… is obviously the ship has sort of sailed on Fusaka, but there are…

141
00:25:03.970 --> 00:25:06.990
wolovim: Looks like 23 proposed.

142
00:25:07.100 --> 00:25:09.650
wolovim: For Glabsterdam now?

143
00:25:10.340 --> 00:25:20.110
wolovim: And that represents a lot of communication channels when you consider all the parties involved, between authors, call facilitators, client teams, panda ops, testing teams, so on.

144
00:25:20.520 --> 00:25:26.900
wolovim: Not to mention, any other external parties, like L2s or app teams that might want to share some insights.

145
00:25:27.030 --> 00:25:30.530
wolovim: So, yeah, open question there.

146
00:25:30.980 --> 00:25:42.690
wolovim: If we require a, or a soft require, a champion be named for each of these given proposed EIPs, will that meaningfully reduce friction?

147
00:25:43.100 --> 00:25:46.989
wolovim: By establishing those clear communication channels out of the gate.

148
00:25:49.620 --> 00:25:55.980
wolovim: So there's some small logistics questions baked within, but I don't think any of them are…

149
00:25:56.530 --> 00:25:57.870
wolovim: Much more than trivial.

150
00:26:00.840 --> 00:26:06.099
wolovim: So I suppose the call to action is if you'd like to weigh in on that, to jump into the…

151
00:26:06.690 --> 00:26:08.610
wolovim: The poll request there, and leave a comment.

152
00:26:13.600 --> 00:26:16.999
Tim Beiko: Thanks. Yeah, I… I personally think this is good. I…

153
00:26:17.580 --> 00:26:30.969
Tim Beiko: yeah, like, I think it's true that we sometimes get people who are championing EIP who aren't necessarily the author, or, you know, EIPs have, like, 7 authors, and it's not clear who to ping.

154
00:26:31.050 --> 00:26:40.569
Tim Beiko: And some EIPs also get proposed, like, you know, multiple forks, over and over, like, 2537 is probably the best example we've had of this.

155
00:26:41.060 --> 00:26:48.540
Tim Beiko: so my, minor proposal would be that whoever opens the PFI PR should be…

156
00:26:48.900 --> 00:26:51.169
Tim Beiko: You know, considered the champion.

157
00:26:51.390 --> 00:26:57.679
Tim Beiko: And maybe if that changes, it's, like, on them to change it throughout the process, but that's also kind of an easy…

158
00:26:58.120 --> 00:27:07.489
Tim Beiko: like, think to hook on, and just say, like, okay, if you're… if you're proposing the CIP for the fork, you're also signing up to be, like, the main point of contact and whatnot, and…

159
00:27:07.800 --> 00:27:18.680
Tim Beiko: And honestly, if no one is willing to do that for an EIP, then it's unlikely that the EIP will… will make it through the entire process anyway, so we're probably just wasting people's time,

160
00:27:19.350 --> 00:27:30.780
Tim Beiko: of having them review, so I kind of like the idea of, like, yeah, gaining the proposal on whoever proposes it, being willing to step up and be the champion for EIP.

161
00:27:36.410 --> 00:27:42.719
Tim Beiko: And… Yeah, and I know the PR was just open yesterday, there's a couple comments on it already.

162
00:27:43.490 --> 00:27:44.540
Tim Beiko: So, like.

163
00:27:44.690 --> 00:27:52.230
Tim Beiko: maybe we can leave it open for a few more days, and at the lay lists get it merged by next Awkward Evs. If…

164
00:27:52.630 --> 00:27:58.990
Tim Beiko: Yeah, maybe there's some outstanding questions, but… And…

165
00:27:59.180 --> 00:28:11.749
Tim Beiko: if we do move forward with something like this, then we can maybe say, kind of by default, everyone who's already proposed an EIP for Fusakai is a champion, and if people want to opt out, or, you know, they're unresponsive, we can deal with that, but…

166
00:28:11.880 --> 00:28:13.730
Tim Beiko: Given we're, like.

167
00:28:14.150 --> 00:28:23.540
Tim Beiko: partially through the process already. Whatever we decide, we could kind of just retrofit to Fusaka, and then have it start cleanly for Amsterdam.

168
00:28:25.130 --> 00:28:30.020
Tim Beiko: Sorry, retrofit the Glamsterdam, and then have it start Q&B for H-star.

169
00:28:34.220 --> 00:28:38.789
wolovim: Yeah, I will volunteer. If this is, an attractive

170
00:28:38.940 --> 00:28:47.370
wolovim: solution, then I'll volunteer the protocol support team to go and source the champion name for all of the existing PFI EIPs.

171
00:28:48.250 --> 00:28:49.040
Tim Beiko: Amazing.

172
00:28:53.540 --> 00:29:01.019
Tim Beiko: Yeah, I guess anyone have concerns or objections that they want to raise? Otherwise, like, we can discuss the specifics of it in detail, but…

173
00:29:03.270 --> 00:29:05.299
Tim Beiko: Is the role of the chip?

174
00:29:05.450 --> 00:29:24.729
Pooja Ranjan: I just have a point to make. I mean, like, I'm just trying to understand here, like, do we really need to mention the name of the champion? Because anytime we make any changes to an EIP, all the authors and champions are by default co-authors of the project. So, if we find, like, too much value in adding this

175
00:29:24.730 --> 00:29:36.740
Pooja Ranjan: piece of information in Meta EP, then only we should consider this, because I feel like MetaEP is very, very important, and we should not go too much granular there.

176
00:29:36.990 --> 00:29:40.740
Pooja Ranjan: That's my personal thought on that, but yeah,

177
00:29:41.530 --> 00:29:49.689
Pooja Ranjan: I'm more open if people think it, otherwise, and we should add the name of the champion in the proposal of MetaEP itself as well.

178
00:29:53.950 --> 00:29:59.060
Tim Beiko: I… I don't have a sh… I guess, like, once the fork is final.

179
00:29:59.390 --> 00:30:03.549
Tim Beiko: I don't think we should have it in the Meta EIP.

180
00:30:03.930 --> 00:30:10.080
Tim Beiko: Because it's kind of weird, like, once the forecast ships, we care more about, like, the authors, in a way. But,

181
00:30:11.300 --> 00:30:21.489
Tim Beiko: I don't have a strong opinion. Like, I would actually just start by having it on, like, forecast or something before we put it in the meta-EIP, see if that's,

182
00:30:21.610 --> 00:30:23.620
Tim Beiko: See if that's, like, sufficient.

183
00:30:23.810 --> 00:30:30.380
Tim Beiko: We can also add it to the MetaE IP as, like, yeah, just, like, a semi-ephemeral bit.

184
00:30:31.610 --> 00:30:48.440
Pooja Ranjan: Yeah, right. Yeah, that's my point as well, like, you know, this is, like, too granular information, and I don't see it's too much valuable in MetaHeep. Although the proposal, which are already included, we have the link, and that proposal includes the list of authors, so we are anyway going to get it there.

185
00:30:48.780 --> 00:30:58.550
Tim Beiko: Yeah, I do think one notable thing is the champions aren't necessarily the authors, like, this was true, say, of, like, the BLS precompile, and

186
00:30:59.070 --> 00:31:12.260
Tim Beiko: I don't know, the last EIP I championed was 1559, and I wasn't an author either, and yeah, like, Mixo has another example in the chat, so, like, I think there is value in setting up, like, okay, who is, like.

187
00:31:12.420 --> 00:31:20.400
Tim Beiko: the champion for this EIP for this fork, and they don't necessarily have to be an author, and then similarly, the most,

188
00:31:22.270 --> 00:31:28.360
Tim Beiko: the most, like, I don't know, like, contributing author might not be the person you ping,

189
00:31:28.810 --> 00:31:36.989
Tim Beiko: And yeah, I guess to Daniel's comment, like, by semi-ephemeral, what I would say is, like, for the development cycle of a fork. So, like.

190
00:31:37.080 --> 00:31:49.750
Tim Beiko: if you're the champion for, I don't know, EIPX during the Glamsterdam fork, it's expected that you're, like, listed as that, and you're the main point of contact at EIP until we ship the fork, but then once the fork is shipped.

191
00:31:49.910 --> 00:31:58.499
Tim Beiko: We don't necessarily record like, who was the champion beyond just the authors on the EIP.

192
00:31:59.040 --> 00:32:16.759
Pooja Ranjan: I would rather advocate to add champions as co-authors, and in any way, EIP1 provides us that provision to be added, because champion would be the one who would be most active, and we need that most active person in order to merge any small changes that is recommended to that proposal.

193
00:32:16.760 --> 00:32:21.900
Pooja Ranjan: And if we don't have Champion added as an EIP author, like co-author.

194
00:32:21.900 --> 00:32:25.750
Pooja Ranjan: Then the proposal will be sitting on the repository for a very long time.

195
00:32:26.440 --> 00:32:31.769
Tim Beiko: Okay, so we can… I'm not against adding the champion by default as an author, but

196
00:32:32.250 --> 00:32:48.139
Tim Beiko: I think it's also worth explicitly flagging the champion, because they, because an EIP can have, like, many authors, so it should be clear that there's an EIP with, like, 6 authors. Who's the person I paid to get, yeah, a test case added, or something like that.

197
00:32:50.950 --> 00:32:55.469
Tim Beiko: Yeah, so I, yeah, no issues with adding them as an author by default, but I think it's worth…

198
00:32:56.580 --> 00:33:03.890
Tim Beiko: making it explicit, like, who is the champion and how, and I think proposing the EIP for the fork is kind of the…

199
00:33:04.430 --> 00:33:10.079
Tim Beiko: The most formal hook we have into the process, in a way, where someone says.

200
00:33:10.500 --> 00:33:14.539
Tim Beiko: I will push for this to happen in this fort.

201
00:33:16.260 --> 00:33:23.929
Pooja Ranjan: Just to be clear that we are planning to keep it on forecast, or on an FMRL basis on Meta ETH.

202
00:33:30.860 --> 00:33:33.419
Tim Beiko: I don't have a strong opinion. I'm fine.

203
00:33:34.480 --> 00:33:38.800
Tim Beiko: Either way, I don't know if anyone… Feel strongly.

204
00:33:40.340 --> 00:33:42.140
wolovim: It's an open question.

205
00:33:42.840 --> 00:33:52.879
wolovim: Yeah, forecast is an easy way to socially enforce this, if we don't… in a minimally invasive way to the rest of what goes on in the protocol, so…

206
00:33:53.630 --> 00:34:00.479
wolovim: maybe that's our starting point, and if we want to add… if it's useful to champion… to add champion names to the meta EIP,

207
00:34:00.630 --> 00:34:04.280
wolovim: To anyone specifically, I would suggest that they

208
00:34:04.550 --> 00:34:07.299
wolovim: Leave those comments in the poll request?

209
00:34:08.540 --> 00:34:20.010
Tim Beiko: Yeah. I kind of like trying it on Forecast 2, just for Glamsterdam, seeing if we like it, or if there's changes to be made, and then, you know, based on how it goes, we can…

210
00:34:20.350 --> 00:34:36.860
Tim Beiko: quote, like, enshrine it in either, like, the meta-EIPs or the individual EIPs themselves, but I think, like, yeah, forecast is a nice way to… to test it, to iterate quickly, without having to mess with the EIP process as a whole, and then, yeah, in Glamsterdam, we can figure out the right

211
00:34:36.880 --> 00:34:46.320
Tim Beiko: you know, set of expectations, the right way to set this up, and then for H-star, we can potentially formalize it in either the meta-EIP or,

212
00:34:46.540 --> 00:34:49.340
Tim Beiko: Or, like, yeah, the EIP header field or something.

213
00:34:56.630 --> 00:34:57.420
Tim Beiko: Okay.

214
00:34:59.200 --> 00:35:00.990
Tim Beiko: Anything else on this?

215
00:35:04.180 --> 00:35:15.389
Tim Beiko: Yeah, thanks, Mark, for pushing this proposal. I think this is going to be really helpful in coordinating, the different, yeah, different EIPs for the fork.

216
00:35:17.260 --> 00:35:19.049
Tim Beiko: That was the last thing, yeah.

217
00:35:19.490 --> 00:35:26.240
Tim Beiko: we had for Glamsterdam, and generally on the agenda? Anything else people want to chat about?

218
00:35:36.520 --> 00:35:40.799
Tim Beiko: And no one, yeah, no one asked to present any…

219
00:35:40.970 --> 00:35:51.199
Tim Beiko: PFI the IPs, but if people have some that they'd like to present, that they've already proposed, that we can definitely do that. And if…

220
00:35:52.210 --> 00:35:59.329
Tim Beiko: Yeah, if folks want to hop off and, you know, watch their presentations later, that's fine, but if we,

221
00:35:59.580 --> 00:36:08.679
Tim Beiko: if we are doing these presentations, I just make it clear we're not going to make any decision about Clam Sudan or the scope today, and it's more about, yeah, sharing information and answering questions, but…

222
00:36:08.840 --> 00:36:12.410
Tim Beiko: Yeah, happy to… to do that. If there's nothing else, I'd wrap it up.

223
00:36:16.000 --> 00:36:17.530
Tim Beiko: Yeah, Adrian?

224
00:36:18.190 --> 00:36:35.589
Hadrien Croubois (OpenZeppelin): Yes, thank you. So, since we have time, I don't want to keep everybody… anybody here, but I'd like to present my Missouri IP I've proposed for inclusion in Amsterdam very quickly. It's something that I've proposed in Fusaka, but at a very late stage, and it could not make it for inclusion.

225
00:36:35.670 --> 00:36:46.770
Hadrien Croubois (OpenZeppelin): For obvious reasons. This is EIP 7819, which is, which proposed to introduce a new set delegate insertion, or op code.

226
00:36:46.920 --> 00:36:55.779
Hadrien Croubois (OpenZeppelin): The idea of this EIP is to propose a mechanism so that smart account factories are able

227
00:36:56.040 --> 00:37:09.629
Hadrien Croubois (OpenZeppelin): to instantiate objects that are equivalent to what we have today in terms of proxies or clones. So those are currently designed around ERC 1167 or ERC 1967.

228
00:37:09.630 --> 00:37:26.990
Hadrien Croubois (OpenZeppelin): and replace those objects with something that is more native to the protocol, which are the EIP7702 delegation. The 7702 delegation are something we are used to have now placed at the location of EOA, or of private keys, addresses.

229
00:37:26.990 --> 00:37:32.170
Hadrien Croubois (OpenZeppelin): The idea is to have the ability for factories to deploy these objects.

230
00:37:32.210 --> 00:37:35.929
Hadrien Croubois (OpenZeppelin): The rationale for proposing that, there are a few.

231
00:37:36.290 --> 00:37:50.719
Hadrien Croubois (OpenZeppelin): one of the first ones is to… to reduce the cost of using these kind of proxies. Grantedly, this kind of proxies rely on having code on-chain and storage for the gradability part.

232
00:37:50.720 --> 00:38:00.299
Hadrien Croubois (OpenZeppelin): And even when they are not upgradable, you still have to copy a lot of things from call data to memory, and then perform a subsequent delegate call.

233
00:38:00.300 --> 00:38:15.070
Hadrien Croubois (OpenZeppelin): This would avoid all of that complexity by moving it to the protocol using a primitive that already exists, and that's already implemented in execution clients. One of the benefits would also be that the object that we would create, that this factory would create.

234
00:38:15.070 --> 00:38:22.030
Hadrien Croubois (OpenZeppelin): would be way smaller. A 7702 delegation is just 23 bytes, when, like.

235
00:38:22.160 --> 00:38:38.460
Hadrien Croubois (OpenZeppelin): Clones are close to 70, and proxies are in the multiple of hundreds. And those make up for a very large fraction of the contracts that are deployed in chain, so one of the benefits would be that those factories would deploy smaller objects, and that would

236
00:38:38.600 --> 00:38:42.940
Hadrien Croubois (OpenZeppelin): Use less states on-chain for… for storing things.

237
00:38:43.030 --> 00:38:43.900
Hadrien Croubois (OpenZeppelin): So…

238
00:38:43.980 --> 00:39:01.470
Hadrien Croubois (OpenZeppelin): So that's one of the rationales. Another rationale is to have clearer upgradeability patterns and the ability to do things in a more, like, native way, using the delegation, instead of relying on storage. We've seen bugs in the past, or attacks.

239
00:39:01.480 --> 00:39:11.339
Hadrien Croubois (OpenZeppelin): From clones and proxies that were using unconventional storage slots, which explorers were not able to observe and document for the users.

240
00:39:11.470 --> 00:39:18.290
Hadrien Croubois (OpenZeppelin): So… so those are… are the main idea. Everything should be documented on the… on the, on the EIP document.

241
00:39:19.690 --> 00:39:27.000
Hadrien Croubois (OpenZeppelin): I'm really looking for feedback and curious on what the community feel about this proposal.

242
00:39:33.210 --> 00:39:35.979
Tim Beiko: Thanks, Felix and Guillaume after.

243
00:39:39.270 --> 00:39:41.870
Felix (Geth): Yeah, sorry, I hope you can hear me alright.

244
00:39:42.020 --> 00:39:51.099
Felix (Geth): I just quickly want to ask, just to clarify, so this proposal is for adding a create-like mechanism that will create a delegation, right?

245
00:39:51.880 --> 00:39:56.230
Hadrien Croubois (OpenZeppelin): Yes, create and also update existing delegations.

246
00:39:57.440 --> 00:40:01.449
Felix (Geth): Okay, so, but then in that case, also, there has to be some kind of…

247
00:40:02.290 --> 00:40:07.410
Felix (Geth): authorization method built in. I'm sorry, I mean, I have skimmed the eep, this is just, like.

248
00:40:07.670 --> 00:40:08.319
Felix (Geth): I was just curious.

249
00:40:08.320 --> 00:40:21.849
Hadrien Croubois (OpenZeppelin): No problem. Yeah, so it's similar to Create2 in the sense that the address that is used for the new object is deterministic based on the address of the factory and assault.

250
00:40:21.890 --> 00:40:34.549
Hadrien Croubois (OpenZeppelin): So, basically, the factory that… the contract that uses this OP code can create a delegation, and if they reuse the same salt, they could be… could replace it, which is the equivalent of an EOA

251
00:40:34.550 --> 00:40:42.720
Hadrien Croubois (OpenZeppelin): Re-delegating, changing the address of the target of the delegation, so access control would have to be implemented in the factory contract.

252
00:40:44.270 --> 00:40:45.610
Felix (Geth): Alright, thank you very much.

253
00:40:49.260 --> 00:40:50.430
Tim Beiko: Justin?

254
00:40:53.500 --> 00:41:05.309
Justin Florentine (Besu): I just wanted to… I think I'm pretty clear on the design and, you know, what it's going to do. Could you elaborate maybe a little bit on the impact? I'm looking through the motivation section of the EIP. I understand what it's going to do.

255
00:41:05.310 --> 00:41:15.399
Justin Florentine (Besu): I'm unclear as to, like, how much of our population we expect would actually benefit from this, and, you know, how much… how much code reuse do we think we're going to yield?

256
00:41:15.400 --> 00:41:20.320
Justin Florentine (Besu): You know, without having to speculate on adoption. I know that's impossible.

257
00:41:20.560 --> 00:41:21.350
Justin Florentine (Besu): Thanks.

258
00:41:22.030 --> 00:41:38.599
Hadrien Croubois (OpenZeppelin): Yeah, so all I can say is that I think it's the guest team that came up with this number for contract usage. I think the… I would have to get the right number. I'm sure someone from the guest team can find them, or it's posted somewhere on my Twitter page, but

259
00:41:38.720 --> 00:41:47.699
Hadrien Croubois (OpenZeppelin): the estimates were, like, about, I think, 80% of contracts on-chain are likely to be clones or proxies, or a similar objects.

260
00:41:47.780 --> 00:41:52.809
Hadrien Croubois (OpenZeppelin): So, even if there is little adoption by factories, even if, like.

261
00:41:52.830 --> 00:42:11.549
Hadrien Croubois (OpenZeppelin): 50% of the future factories adopt that, and then they have an incentive to adopt that because it makes it cheaper for them to both deploy these objects, and then use… for users to use them. Then we are looking at something that could be in, like, it could be a quarter of all future contract deployment on-chain that would be these objects.

262
00:42:11.590 --> 00:42:17.110
Hadrien Croubois (OpenZeppelin): And we would be saving Multiple bytes, sometimes hundreds of bytes per object.

263
00:42:18.950 --> 00:42:19.510
Justin Florentine (Besu): Thanks, Logan.

264
00:42:19.510 --> 00:42:21.520
lightclient: There is a trade-off here?

265
00:42:21.930 --> 00:42:22.990
lightclient: And that's

266
00:42:24.420 --> 00:42:35.029
lightclient: It's going to be more expensive to interact with these contracts now, that you have to warm both the contract with delegate lives and the contract which is the target of the delegates.

267
00:42:35.330 --> 00:42:53.539
Hadrien Croubois (OpenZeppelin): That's already the case for all clones and proxies. You already have to warm up the clone and then warm up the implementation, and when the clones are upgradable, or when the proxies are upgradable, you also have to warm up a storage slot. That is the address of the implementation. So actually, it should be cheaper now.

268
00:42:53.610 --> 00:43:10.039
Hadrien Croubois (OpenZeppelin): And I'm not even considering the cost that doing that in user space have of copying call data to memory, and then doing an additional call with that. And on the way back, getting return data, and copying that to memory, and then forwarding that again.

269
00:43:10.440 --> 00:43:15.700
lightclient: Right. Are you also proposing of an ability of changing the delegation?

270
00:43:16.680 --> 00:43:19.149
lightclient: There's, like, a creative… okay, I see, I see.

271
00:43:20.010 --> 00:43:30.330
lightclient: Yeah, I mean, I think it makes sense. The only comment I have is we should look into if it makes sense to do this with code hash instead of address.

272
00:43:32.660 --> 00:43:39.430
lightclient: But… obviously, 7702 does it by address, so… I think that's the most straightforward answer.

273
00:43:43.330 --> 00:43:49.150
Hadrien Croubois (OpenZeppelin): And I don't have a strong opinion either way. The idea to reuse 7702 is also to

274
00:43:49.700 --> 00:43:56.330
Hadrien Croubois (OpenZeppelin): Use objects and workflows that are already present in the execution code, so that it's easier to implement?

275
00:43:56.790 --> 00:44:02.429
Hadrien Croubois (OpenZeppelin): But if core devs want to do it a better way, that is more work for them, that's fine by me.

276
00:44:05.480 --> 00:44:17.099
Felix (Geth): Yeah, it is kind of funny, because this is sort of, like, coming at 7702 from the other direction. So it's like, you know, with 7702, you can turn an EOA into a contract, and with this, you can turn a contract into a kind of EOA. Like, it's…

277
00:44:20.890 --> 00:44:25.839
Danno Ferrin: So this was, gonna be the basis of my comment to talk to Justin. What are the use cases for this?

278
00:44:25.890 --> 00:44:29.670
Danno Ferrin: And one would be for a smart, a smart wallet contract.

279
00:44:29.710 --> 00:44:36.769
Danno Ferrin: And there's some that just, when they look at the delegate process, they say, I don't want to use it, because there's a chance this EOA key could override it.

280
00:44:36.800 --> 00:44:50.489
Danno Ferrin: But if it's coming from the contract, and the contract controls, and they know how it's going to be changed, then there's a whole category of smart wallets that can be created that don't, that are never, impacted by any CDSA EOA account.

281
00:44:50.490 --> 00:44:57.869
Danno Ferrin: Because, yeah, I've read lots of places where people say, I'd love to use that, but I don't want to have the chance that someone's public key is going to change the delegation.

282
00:44:59.760 --> 00:45:17.969
Hadrien Croubois (OpenZeppelin): Yeah, so the factory is in charge of the upgrade, so all the re-delegation logic is visible and clearly on-chain. In the case of smart wallets, you could imagine that the smart wallet could update itself, and the factory would recognize that only the smart wallet has the ability to self-upgrade.

283
00:45:18.050 --> 00:45:21.629
Hadrien Croubois (OpenZeppelin): It would be up to the factory to decide how they want to implement that.

284
00:45:26.570 --> 00:45:27.950
Tim Beiko: Thanks, Guillaume.

285
00:45:27.950 --> 00:45:43.850
Guillaume: Yeah, I just wanted to add, so, it's not the guest team who has done this research, it's take less consensus, namely it's Wei Han, who's in that chat. So if you have more questions about the reason why, we think it's a good idea.

286
00:45:43.850 --> 00:46:02.080
Guillaume: you should talk to him, but to give you the TLDR, we have seen that, indeed, a lot of contracts are… that are deployed, like, a huge portion of them are just the same contract over and over again. We don't know exactly how many of those are proxies.

287
00:46:02.410 --> 00:46:17.040
Guillaume: So we're going to look into this, but, yeah, just, in the world of support for the CIP, it seems that it could, if our research confirms it, it looks like it could have a lot of impact on state growth.

288
00:46:23.300 --> 00:46:24.810
Danno Ferrin: Beneficial impact?

289
00:46:25.820 --> 00:46:27.740
Guillaume: Yes, absolutely.

290
00:46:37.000 --> 00:46:39.640
Tim Beiko: Sweet. Anything else on the CIP?

291
00:46:48.060 --> 00:46:52.560
Tim Beiko: Okay, any other PFI DIP people wanted to discuss?

292
00:46:57.670 --> 00:46:59.090
Tim Beiko: Yeah, fragile.

293
00:46:59.950 --> 00:47:06.480
frangio: Yeah, sorry, this is not about PFI, EIP, but more like a temperature check.

294
00:47:07.100 --> 00:47:12.040
frangio: I've been looking into, Swap N and DupeN.

295
00:47:12.460 --> 00:47:15.540
frangio: which are EAP663.

296
00:47:15.970 --> 00:47:25.609
frangio: Originally, and the possibility of doing that… that EIP is built on EOF, so it's obviously not, viable.

297
00:47:25.890 --> 00:47:33.959
frangio: But I've been looking into the possibility of doing that without EOF, there's… Actually, quite a few…

298
00:47:34.470 --> 00:47:39.200
frangio: Alternatives and ways… to do it,

299
00:47:39.970 --> 00:47:45.819
frangio: I just wanted to see if anyone has any opinions about Trying to get those in.

300
00:47:46.060 --> 00:47:52.450
frangio: And these are the extended stack operations which go beyond

301
00:47:52.960 --> 00:48:02.710
frangio: Depth 16, and, you know, they would be useful to very easily solve the Solidity stack too deep error.

302
00:48:03.900 --> 00:48:09.660
frangio: You know, there are alternative fixes for that error, but it is…

303
00:48:10.070 --> 00:48:13.319
frangio: True that, you know, having these opcodes would make things…

304
00:48:14.400 --> 00:48:18.730
frangio: a compiler so much easier.

305
00:48:19.210 --> 00:48:30.090
frangio: And the stack too deep is just… it's an extremely pervasive problem in the ecosystem. Smart contract developers, you know, deal with that all the time.

306
00:48:32.480 --> 00:48:41.409
frangio: And so, yeah, I just wanted to check on, like, does anyone have an opinion? Should I try to pursue this? And then, you know.

307
00:48:42.230 --> 00:48:46.760
frangio: We… you know, there's a discussion to be had about how to do the immediate.

308
00:48:46.920 --> 00:48:49.150
frangio: But it's… it's not an issue.

309
00:48:49.370 --> 00:48:53.619
frangio: There are quite a few ways to do them without breaking change.

310
00:48:59.480 --> 00:49:02.299
Tim Beiko: Thanks. Does anyone have opinions on this?

311
00:49:15.080 --> 00:49:19.740
Tim Beiko: Okay, if not, maybe we can discuss on the Discord in the EDM channel or something?

312
00:49:25.170 --> 00:49:27.809
Tim Beiko: Anything else people wanted to bring up today?

313
00:49:37.000 --> 00:49:50.880
Tim Beiko: Okay, then we can wrap up early. Also, as a reminder, Ansgar will be taking over, for the rest of the year, starting for the next ACDE, so, I will see you all in the new year.

314
00:49:51.000 --> 00:49:56.149
Tim Beiko: And yeah, looking forward to seeing Fusaka go live.

315
00:49:56.820 --> 00:49:57.730
Tim Beiko: Thanks, Oliver.

316
00:49:57.730 --> 00:49:59.769
Justin Florentine (Besu): Tim, we'll miss you, Tim!

317
00:50:00.900 --> 00:50:01.570
Tim Beiko: Thanks.

318
00:50:02.330 --> 00:50:03.240
Tim Beiko: Yes.

319
00:50:04.170 --> 00:50:05.210
Pooja Ranjan: Thank you, Tim.

320
00:50:06.280 --> 00:50:08.110
Marius van der Wijden: Hey, guys.

321
00:50:08.110 --> 00:50:09.220
Pooja Ranjan: Thanks, everyone.

