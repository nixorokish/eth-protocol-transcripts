WEBVTT

1
00:02:57.430 --> 00:02:59.930
Ansgar Dietrichs: Good morning, everyone. Good afternoon.

2
00:03:00.040 --> 00:03:02.069
Ansgar Dietrichs: Whatever your time zone is. Good night.

3
00:04:20.620 --> 00:04:24.070
Ansgar Dietrichs: Okay, let's give it another minute for people to come in. Then we get started

4
00:04:29.020 --> 00:04:30.990
Ansgar Dietrichs: just a quick check. Can you all hear me?

5
00:04:34.250 --> 00:04:34.620
jochem-brouwer: Lift.

6
00:04:34.620 --> 00:04:35.030
Josh Davis: There you go!

7
00:04:35.030 --> 00:04:35.650
Ameziane Hamlat: This.

8
00:05:00.440 --> 00:05:06.250
Ansgar Dietrichs: I put it in the chat. Is the live stream switched over.

9
00:05:07.410 --> 00:05:08.860
Josh Davis: Whenever you're ready.

10
00:05:09.280 --> 00:05:10.910
Ansgar Dietrichs: Okay, yeah, let's do it.

11
00:05:12.620 --> 00:05:13.690
Josh Davis: Alright! You're live!

12
00:05:17.700 --> 00:05:31.220
Ansgar Dietrichs: Perfect. Hello, everyone. Let's try to get started more or less on time, because I think we have quite a bit of agenda to go through today. I am filling in for Tim today who is out of office?

13
00:05:31.641 --> 00:05:58.569
Ansgar Dietrichs: Yeah. Then let's just jump right into it. 1st off on the agenda. We wanted to briefly recap a few items from interop. In particular, the 45 million gas limit increase that is planned, and the devnet that was run at interop. So 1st for the gas level increase. Pari, are you on? Could you give a quick update on client readiness and the timeline here.

14
00:06:00.490 --> 00:06:28.420
EF Berlin: Yeah, hey? I hope you guys can hear me. So over the course of the week we had a bunch of opcode tests and benchmarks that we ran against all the clients we were able to get all the clients above the 20 million mark without MoD. Xp. And around the thirteen-ish 1 million mark with MoD. Xp. Most clients do have some performance fixes or releases pending which should happen over the course of the next week.

15
00:06:28.420 --> 00:06:36.660
EF Berlin: and also was discussed on acdt, and all the clients seem to be okay with moving ahead with 45 million.

16
00:06:36.690 --> 00:06:47.680
EF Berlin: Once the releases are done, we should have some blog posts, analyzing how stuff looks and what approaches we use to get to the number. But yeah, more would be coming over the next week.

17
00:06:54.720 --> 00:07:00.459
Ansgar Dietrichs: Okay, sounds good. Any client comments on this. Anything we need to talk about here on this point.

18
00:07:07.160 --> 00:07:14.120
Ansgar Dietrichs: Okay, then we can briefly go to the other inter point, which was the

19
00:07:14.260 --> 00:07:23.219
Ansgar Dietrichs: Belintop devnet 2 that we ran at intop. Barnabas. Do you want to very quickly give an update of where that is at.

20
00:07:24.030 --> 00:07:27.179
Barnabas: Sure. So the lunch barely interrupt

21
00:07:28.140 --> 00:07:35.660
Barnabas: approximately almost a week ago now, 5 days ago, and we have 83% participation on the network right now.

22
00:07:36.662 --> 00:07:46.870
Barnabas: There's a quick link. We have a few clients that are looking into some missed slots. I have been everyone already yesterday, and

23
00:07:46.980 --> 00:07:48.210
Barnabas: they're taking a look.

24
00:07:49.400 --> 00:07:57.960
Barnabas: And we plan to shut down this network on next week. Tuesday just the day after we have launched 2.

25
00:08:01.080 --> 00:08:09.740
Ansgar Dietrichs: Sounds good, and I assume that also depends obviously on finalizing the timing for Devnet 2, which will be the next agenda point. Ben here to remark.

26
00:08:10.539 --> 00:08:17.730
Ben Adams: Yeah, do we need to discuss what was in the berlin interrupted. Oh, I suppose that's the

27
00:08:17.930 --> 00:08:20.108
Ben Adams: yeah. Never mind. That's the next point.

28
00:08:21.740 --> 00:08:36.060
Ansgar Dietrichs: So the next point will be on the full. Devnet 2. The naming is a bit confusing, right? So basically, Belintop Devnet 2, the one that we had at interop, and then we will have full devnet. 2. I guess we could have called it Devnet 3. But whatever that we will launch hopefully next week.

29
00:08:36.495 --> 00:08:42.179
Ansgar Dietrichs: Ben, do you think it would be important to also briefly recap the scope of Berlin top? Devnet.

30
00:08:43.000 --> 00:08:48.949
Ben Adams: Well, it it it comes up in the in the next point, so we can discuss it there.

31
00:08:50.189 --> 00:08:53.139
Ben Adams: It was just the scope of it, that was all.

32
00:08:54.380 --> 00:08:59.750
Ansgar Dietrichs: Okay, yeah. My understanding, my understanding was that, I mean, yeah, it basically included the

33
00:09:00.255 --> 00:09:09.274
Ansgar Dietrichs: Cfi eips except for 7, 9, 0 7, and it included one, not Cfi eap, which was 7, 9, 3, 9. But yeah, that's

34
00:09:09.820 --> 00:09:12.540
Ansgar Dietrichs: Talk about the implications of of that in the next section.

35
00:09:18.650 --> 00:09:30.560
Ansgar Dietrichs: Then, yeah, we can move on to thank you, Barnabas, to the to talking about the the next devnet, which will be Devnet 2, and the hope would be to launch that.

36
00:09:30.940 --> 00:09:34.460
Ansgar Dietrichs: And next week

37
00:09:34.710 --> 00:09:53.380
Ansgar Dietrichs: in general, just to briefly basically recap where we're at in terms of Fusaka progress, we are really getting to the point where we want to have the fork frozen. Frozen means 2 points, one. Ideally, we can today make final decisions about inclusion. So we have Cfi dips

38
00:09:53.440 --> 00:10:09.659
Ansgar Dietrichs: where we today should make the final go. No go decision whether to move them to Sfi and schedule them for the upcoming devnet, with the understanding that whatever is not selected for Devnet 2 at least, as of today, would then be intended to also just not go into the hard fog.

39
00:10:09.730 --> 00:10:18.620
Ansgar Dietrichs: and then, within the already sfied Eaps there are some small last parameters that also need to be cited. And again, ideally, we would make that

40
00:10:18.710 --> 00:10:27.229
Ansgar Dietrichs: decision today as well. And Barnabas, I think you also wanted to briefly talk about basically the ideal timeline for Devnet 2. And

41
00:10:27.520 --> 00:10:30.830
Ansgar Dietrichs: but basically the plan would be assuming we can get all of these finalized today.

42
00:10:31.460 --> 00:10:44.040
Barnabas: Yeah. So the timeline would be that we can start testing basic interrupt functionality tomorrow. And we should be able to launch that net 2 on Monday around noon

43
00:10:44.350 --> 00:10:45.999
Barnabas: control European time.

44
00:10:46.520 --> 00:10:53.039
Barnabas: This is assuming that we will have at least 3 years and 3 cls. Ready by then.

45
00:10:53.530 --> 00:10:59.223
Barnabas: if we can get it by then, then we're gonna push the launch by today and see if

46
00:11:00.010 --> 00:11:02.150
Barnabas: this can get certified. Then.

47
00:11:05.290 --> 00:11:20.000
Ansgar Dietrichs: Sounds good, so the plan would be now for us to just go through the list of 1st the list of all the Eaps where there's still a question about inclusion decision. So those are 4 Eaps here in particular, and then we have 3 more Eaps that are already included where or

48
00:11:20.190 --> 00:11:26.479
Ansgar Dietrichs: 2 equally that already included 1 1 special case. That's that's a non, non,

49
00:11:27.770 --> 00:11:49.740
Ansgar Dietrichs: protocol changing eip that we then also have to talk about. So 1st off, the 1st section here will be final inclusion decisions. Basically. So let's get going with that. The 1st item here, the 1st one to talk about is Eip 7,951. That is the r. 1 precompile. The number might be confusing to people, because there used to be an IP. IP. 7 to 12.

50
00:11:49.750 --> 00:12:07.839
Ansgar Dietrichs: But because there were some small spec incompatibilities with the version that we want to have on Mainnet. The decision was made, I think on a previous call already to have that be superseded by a proper eap. So now that is, eap 7,951, that eap is currently still on Cfi, and so the proposal would be today to move it to

51
00:12:07.860 --> 00:12:10.252
Ansgar Dietrichs: Sfi and included.

52
00:12:11.790 --> 00:12:35.369
Ansgar Dietrichs: I have 2 items on my list to discuss about this, the 1st one would be the final cost of the precompile. Marius had looked into this and had found that the precompile is underpriced at roughly, basically half the cost per millisecond compute as easy recover, and so was recommending a doubling of the cost.

53
00:12:35.798 --> 00:12:46.200
Ansgar Dietrichs: Do do have other clients had time to look into the performance of the r. 1 precompile? And do they generally agree with this recommendation, or would they prefer to keep the current pricing in place.

54
00:12:57.310 --> 00:13:00.060
stokes: So if wait, is there an echo.

55
00:13:02.620 --> 00:13:04.739
EF Berlin: Yeah, alright, it's 4.

56
00:13:05.565 --> 00:13:25.139
EF Berlin: Yeah. I think if Marius found this, it'd be nice if other clients could confirm. And then, yeah, assuming we find this differential, we should just raise the cost of our that being said, I think, that can be done in parallel to having it on devnets. This is something we can keep iterating on in the same time, so I think we should go ahead and move forward with inclusion.

57
00:13:28.895 --> 00:13:56.159
Ansgar Dietrichs: Well, then, I mean, I mean to just immediately revisit. The goal would be to today. Come, get to a version where at least from the El side. Basically, everything is frozen, including parameters. We could. Of course, that could mean we make the decision. And that eap then still has to be updated. If, then, in testing and everything, of course, we, we find reasons to still need changes that that is still possible. But I would still rather include the eap today in a form that at least hopefully does not require further changes.

58
00:14:00.360 --> 00:14:01.780
EF Berlin: Do we.

59
00:14:02.510 --> 00:14:14.390
Ansgar Dietrichs: Like my proposal would basically be to to just move the eip to Sfi with the understanding of that, that the price is doubled. And then we will just update that the eip to to reflect that today.

60
00:14:14.770 --> 00:14:18.740
Ansgar Dietrichs: But we can also, of course, keep the current price in place. If that people prefer that.

61
00:14:20.840 --> 00:14:45.350
EF Berlin: I would say that it. The decision should be made without a specific price. So we can still figure that I think changing the price is kind of easy to do even later, and we may have to change it a bunch more times if we discover more edge cases and so on. So I feel like we should just make a fundamental decision that yeah, this precompied will be included, but not about which specific gas price.

62
00:14:46.030 --> 00:14:49.210
EF Berlin: because that is just still like subject to testing.

63
00:14:50.330 --> 00:15:02.259
Ansgar Dietrichs: Okay, that's fine with me. And then, just to confirm that would mean we would leave the price, as it currently is in the Erp for Devnet to launch? Or would we try to by Monday, basically get to get to a updated view on this.

64
00:15:06.160 --> 00:15:13.669
Barnabas: I think it makes no sense to change the price right now in a rush. We should actually evaluate what the same

65
00:15:14.323 --> 00:15:20.379
Barnabas: pricing will be, and then we can do all the repricing eips in demonstry.

66
00:15:24.060 --> 00:15:29.089
Ansgar Dietrichs: Okay, sounds good. When you say repricing earpiece, you mean just repricing the existing earpiece. There won't be any extra repricing.

67
00:15:29.090 --> 00:15:30.820
Ansgar Dietrichs: It's like piece. Okay, perfect.

68
00:15:30.820 --> 00:15:37.489
Barnabas: Well, I I don't know whether party would have any other vips that they would need to get into for second.

69
00:15:40.080 --> 00:15:42.480
Barnabas: or possibly interestingly, doesn't.

70
00:15:43.550 --> 00:15:50.560
Ansgar Dietrichs: Right. I mean again, I think I think we would be good if we made a decision today, whether we will be still open to including other eips.

71
00:15:51.170 --> 00:15:52.949
Ansgar Dietrichs: even just replacing your piece.

72
00:15:53.570 --> 00:15:54.250
Ansgar Dietrichs: But

73
00:15:56.500 --> 00:16:09.700
Ansgar Dietrichs: let's let's talk about this at the end of the section. Okay, so we we include anyone against including oh, wait! Wait! Sorry. There was 1 1 other point on our one and there was still some question around the return format. Do we have?

74
00:16:10.090 --> 00:16:13.669
Ansgar Dietrichs: Can. I'm not sure if we have Kyle on the call. Kyle.

75
00:16:15.030 --> 00:16:17.993
Carl Beekhuizen: I mean I can. I can speak to this briefly.

76
00:16:19.320 --> 00:16:29.359
Carl Beekhuizen: it's that people don't like the fact that the precompile returns either one on success or nothing, if the verification fails.

77
00:16:30.192 --> 00:16:33.219
Carl Beekhuizen: The reason we have this is this is what's deployed

78
00:16:34.147 --> 00:16:48.899
Carl Beekhuizen: as as the rip on all of the l twos and in terms of like the number of the amount of gas you need to spend to to like, verify what its return was. That doesn't change so functionally, it's just that it looks a bit ugly.

79
00:16:49.763 --> 00:16:52.989
Carl Beekhuizen: And you need to look at what the return type is.

80
00:16:53.840 --> 00:17:06.500
Carl Beekhuizen: But I I think, having, like backwards compility, compatibility with all of the l twos that have deployed the rip is more important than having what I think is mostly aesthetic improvement

81
00:17:06.609 --> 00:17:08.030
Carl Beekhuizen: on the return type.

82
00:17:09.911 --> 00:17:14.899
Carl Beekhuizen: There hasn't been any like changes like this. This is what I presented on the last

83
00:17:16.670 --> 00:17:19.420
Carl Beekhuizen: Acd. There haven't been any major changes in terms of.

84
00:17:20.480 --> 00:17:25.319
Carl Beekhuizen: But my overall thoughts on this. And I think, yeah, it's mostly just an opinion thing on this.

85
00:17:28.290 --> 00:17:36.270
Carl Beekhuizen: Yeah, wait. Can you clarify how it looks like now. So if it succeeds, you get back a 1 value, and if it doesn't succeed.

86
00:17:36.270 --> 00:17:41.440
Carl Beekhuizen: it returns 0 Byte. As I'm not like bytes that are 0 as a 0 number of bytes.

87
00:17:43.480 --> 00:17:46.410
EF Berlin: But what's the alternative? Returning.

88
00:17:46.410 --> 00:17:49.330
Carl Beekhuizen: It returns all 32 zeros.

89
00:17:49.570 --> 00:17:52.309
EF Berlin: Yeah, okay. And then.

90
00:17:54.440 --> 00:18:06.919
Carl Beekhuizen: Again. It's it's an aesthetic thing, or, like you, you need to look what the the opcode does. So the free compile does kind of thing in the specs. It's maybe not as intuitive as as one might expect.

91
00:18:07.280 --> 00:18:14.129
EF Berlin: How do the other precompiles work here? I assume they return a word back in either case. No, no, okay.

92
00:18:14.260 --> 00:18:14.870
Carl Beekhuizen: Yeah.

93
00:18:15.600 --> 00:18:20.030
EF Berlin: Then let's leave this. Then. Yeah, we're not changing this, I think, okay.

94
00:18:20.400 --> 00:18:30.309
EF Berlin: sorry for the authoritative statement. But I feel like this is like I don't know. I mean, it's just how it is with the other ones as well.

95
00:18:31.460 --> 00:18:35.480
Carl Beekhuizen: That. That's why it was chosen to be this way in the beginning. But there has been some

96
00:18:35.900 --> 00:18:37.110
Carl Beekhuizen: some pushback

97
00:18:37.419 --> 00:18:43.599
Carl Beekhuizen: from a number of people that they just said. They don't like the aesthetics of this, which I think is fair, but, as you say, it's it is what is also.

98
00:18:49.610 --> 00:18:56.029
Ansgar Dietrichs: Right? So then, basically, I think the decision we need to do make now is just, is this, do we lock this behavior in

99
00:18:56.444 --> 00:19:05.420
Ansgar Dietrichs: or do we say, like the pricing, it is still up for discussion again. And the more we can lock in today, the better. So it sounds. Maybe, like we are ready to lock to lock this behavior in

100
00:19:06.700 --> 00:19:08.010
Ansgar Dietrichs: any objections.

101
00:19:11.760 --> 00:19:27.070
Ansgar Dietrichs: Okay, then, as long as no one is supposed to adding this, this eap. Then I will move this eap to Sfi and the understanding is that the just, the specific pricing is still up for potential change.

102
00:19:28.320 --> 00:19:35.040
Ansgar Dietrichs: Okay, perfect. Then one down, next one up, and next one up is a bit of a

103
00:19:35.540 --> 00:19:56.999
Ansgar Dietrichs: contentious one, that is, eap 7,907, which is the maximum contract code size increase that is currently on Cfi as well. And the question is also to move whether to move that to sfi or not, and this one was the one Cfi eap that was not on the Berlin top. Devnet 2

104
00:19:57.612 --> 00:20:13.089
Ansgar Dietrichs: and we now have an alternative simplified proposal, which is erp 7, 9, 5, 4, basically, because there are some concerns around the original erp being too complex and not being well enough tested.

105
00:20:14.670 --> 00:20:20.600
Ansgar Dietrichs: in general. This is a bit of a trick situation, and I'm not sure if maybe anyone could hear

106
00:20:20.760 --> 00:20:23.159
Ansgar Dietrichs: has any prepared

107
00:20:23.350 --> 00:20:29.690
Ansgar Dietrichs: remarks either for or against any of the 2 alternative eaps. Otherwise I can try to to summarize the situation.

108
00:20:37.240 --> 00:20:54.390
Ansgar Dietrichs: So basically, the situation is as follows, we have the original proposed eap that was marked Cfi. 7, 9, 0, 7, 7, 9, 0 7. What it does is it makes the cost for a loading contract code from disk

109
00:20:54.520 --> 00:21:01.360
Ansgar Dietrichs: no longer constant, but above 24 k. So basically, the point is that it raises the limit to above 24 k. And

110
00:21:01.400 --> 00:21:05.320
Ansgar Dietrichs: if a contract is indeed above 24 k. Then

111
00:21:05.330 --> 00:21:21.589
Ansgar Dietrichs: the cost for loading it for any purpose, whether for whether for xcode, hash, or xcode size, or for directly calling the contract. In all of these cases, basically. Now, the cost is proportional to the size of the of the code, at least above that initial 24 k.

112
00:21:21.996 --> 00:21:36.210
Ansgar Dietrichs: The concerns that were raised at the beginning of interop were that basically, so far this has not been tested. We also don't have performance good performance benchmarks yet. And in this eap has the

113
00:21:36.707 --> 00:21:46.520
Ansgar Dietrichs: somewhat nuanced implication that because you need to know the size of the contract to charge the right amount of gas.

114
00:21:46.690 --> 00:21:59.669
Ansgar Dietrichs: Basically you. Now, every client needs a new data structure where you basically have a table of contracts to size so that you can look up the size as a 1st step, so you can charge the the appropriate amount of gas

115
00:22:01.240 --> 00:22:16.159
Ansgar Dietrichs: in light of us being relatively late into the fog, there was the question of is this, maybe too big of a change to be added at this moment in time? And so that that's why we had the alternative proposal. Maybe let's 1st talk about 7, 9, 0 7, and then we can

116
00:22:16.340 --> 00:22:18.569
Ansgar Dietrichs: talk about the alternative. Andrew.

117
00:22:20.395 --> 00:22:29.530
Andrew Ashikhmin: So I heard, if I'm not mistaken. I heard at the interrupt that bigger code sizes make it more difficult for

118
00:22:30.220 --> 00:22:43.719
Andrew Ashikhmin: to produce Zk proofs. So if our strategic direction is Zk, evm, then maybe we should think twice about like increasing the code size limit.

119
00:22:44.710 --> 00:22:55.330
Andrew Ashikhmin: But maybe I maybe I misunderstand. Perhaps if someone could clarify how like the interplay between the code size limit and the Zkvm, that would be great.

120
00:22:55.520 --> 00:22:58.840
Andrew Ashikhmin: But say, if it is the case

121
00:22:59.040 --> 00:23:02.129
Andrew Ashikhmin: that it makes it harder. But maybe

122
00:23:02.670 --> 00:23:14.009
Andrew Ashikhmin: perhaps the extra, the extra pricing in 79 0 7 compensate for that, and maybe 79 0, 7 is a better version, because, yeah, it's just.

123
00:23:14.350 --> 00:23:18.109
Andrew Ashikhmin: But the pricing is better aligned to Dk groups.

124
00:23:20.830 --> 00:23:35.189
Derek Lee: Hey, everyone my name is Derek. I couldn't find the hands up button, but I'd like to advocate for including 7, 9 0, 7, or any sort of smart contracts has increased on behalf of arbitra we have a lot of devs that hit this hurdle and delayed mainnet

125
00:23:35.670 --> 00:23:40.550
Derek Lee: So any kind of increase, preferably the one specified in 7 9 7 would be great.

126
00:23:40.800 --> 00:23:41.770
Derek Lee: Appreciate it.

127
00:23:42.470 --> 00:23:50.529
Derek Lee: So yeah, I would definitely love to hear like some of the feedback or criticisms for you know the posting and or lack there else.

128
00:23:51.250 --> 00:23:52.279
Derek Lee: and fix it.

129
00:23:57.450 --> 00:24:02.554
EF Berlin: I mean, maybe one thing to respond to Andrew's point. I think

130
00:24:03.070 --> 00:24:27.990
EF Berlin: it's not just the size of the contract increasing. That's complicated for Zkvm. It's more that the cost is constant right now, and it happens that 24 kB is kind of a lot to compute the hash of in the Zkvm, and there's no dynamic pricing. So it's actually better if the pricing becomes dynamic, so that you can charge for the work that's being done

131
00:24:28.230 --> 00:24:40.177
EF Berlin: in that. And maybe you know the price right now is not exactly what you know. It's exactly perfect to support, but at least it like puts us on the path to having better support for it.

132
00:24:40.660 --> 00:24:51.810
EF Berlin: whereas this, like, you know, just increase the code size to 32 kB, or 30 or 48 kB. These don't really address the fact that the computation requirements are different at different code sizes.

133
00:24:52.060 --> 00:25:11.879
EF Berlin: So that's kind of one thing. And then, like further term, we probably need something even better than 7, 9 0, 7. For like many reasons, like stateless execution, is probably gonna need code chunking. And that's kind of the thought with 7, 9 0, 7 is that eventually we will rethink how code is stored in the State

134
00:25:11.940 --> 00:25:25.620
EF Berlin: at that point, like we have the ability to like really change the costs. But that's likely not gonna happen for a few years. And this is like a, you know, not too difficult pragmatic change to improve the developer experience right now.

135
00:25:26.660 --> 00:25:33.619
Andrew Ashikhmin: So it sounds like 79 0, 7 is better aligned with the Zkvm strategy

136
00:25:33.740 --> 00:25:37.519
Andrew Ashikhmin: then, and the other one, then 79, 54.

137
00:25:37.770 --> 00:25:42.540
EF Berlin: I don't know if anyone from the team is here. I talked to

138
00:25:42.640 --> 00:25:47.769
EF Berlin: some messages from Kev that he seemed like this was how he felt. But

139
00:25:50.260 --> 00:25:55.770
EF Berlin: yeah, I'm not a Zk Evm person, so I can't speak on their behalf.

140
00:25:58.370 --> 00:25:58.970
Ansgar Dietrichs: Pen.

141
00:26:00.520 --> 00:26:06.589
Ben Adams: 7, 9 0, 7 is in principle. The better eip.

142
00:26:06.710 --> 00:26:16.455
Ben Adams: However. The issue, if we're spec freezing and going live on Monday is

143
00:26:18.640 --> 00:26:22.260
Ben Adams: We? We don't know if any of the pricing is correct.

144
00:26:24.630 --> 00:26:32.629
Ben Adams: anything like that, because it's it's from. Where is it the Paris for pricing? And we're we're doing much more empirical testing now

145
00:26:33.140 --> 00:26:34.260
Ben Adams: to.

146
00:26:34.520 --> 00:26:36.630
Ben Adams: So if we want a hundred 1 million.

147
00:26:36.750 --> 00:26:39.709
Ben Adams: 300 million we don't know.

148
00:26:40.520 --> 00:26:42.459
Ben Adams: This is very good pricing.

149
00:26:44.250 --> 00:26:58.190
EF Berlin: Yeah, I mean, we just kind of said with the r 1 precompile, we don't know what the pricing is, and we need to commit to figuring out the pricing. But like we need to commit to the feature. And I kind of feel it's the same here, like people really need

150
00:26:58.720 --> 00:27:05.110
EF Berlin: to have larger contracts. And this is like the right shape of the solution. And we need to figure out.

151
00:27:06.270 --> 00:27:16.943
EF Berlin: you know what the exact numbers are going to be. I see some comments also, like I made a Pr. 2, 7, 9, 0, 7 earlier today to reduce the Max size to 48 kB.

152
00:27:17.480 --> 00:27:25.220
EF Berlin: So the 2 56 kB number, I think, is kind of off the table right now. That was my feeling from the Berlin interop.

153
00:27:29.910 --> 00:27:36.400
Ansgar Dietrichs: Right? So obviously, the big difference between r 1 and this is that r, 1 is

154
00:27:36.940 --> 00:27:43.149
Ansgar Dietrichs: fully implemented and benchmarked or basically, the benchmarking is just needs to be

155
00:27:43.260 --> 00:27:55.489
Ansgar Dietrichs: to be done a bit more thoroughly. So. So it's just just like a 1 constant change, I think. Here there's still more open questions. But but in principle, yeah, of course, we, this would be in a possible cause of action. Maybe.

156
00:27:55.490 --> 00:27:56.969
EF Berlin: Yeah, like, we don't.

157
00:27:56.970 --> 00:27:58.430
Ansgar Dietrichs: Can we? Can we try to

158
00:27:58.690 --> 00:28:00.440
Ansgar Dietrichs: keep the order of speakers? Julio.

159
00:28:01.618 --> 00:28:07.601
Giulio: Yeah. So I actually also agree. 7 and 7 is in theory a better solution.

160
00:28:08.110 --> 00:28:14.010
Giulio: however, it really depends. If you want to freeze the spec today, because if you freeze the spec today.

161
00:28:14.458 --> 00:28:39.179
Giulio: it just seems like nobody kind of agree on the specific of the Ap. Itself yet. So I think 1st of all, if we want to. If 1, 7 and 7, it has to happen, maybe with for only 48 kB, because at 48. Kilobyte, you can to some extent you. You may even not need the extra structure, and that's easier to implement and to test. So that's 1 thing.

162
00:28:40.120 --> 00:28:46.739
Giulio: and so you cannot go straight. 128 kB after Fuzac, anyway, in my opinion. And secondly.

163
00:28:48.041 --> 00:29:04.779
Giulio: and secondly, it's yeah. It's just kind of like, do we want to freeze the specs today? Because it seems to me like, we are basically now just discussing whether we we include it now and then we remove it in 2 weeks. Right? So so like

164
00:29:05.100 --> 00:29:10.349
Giulio: depends, in my opinion, what the objective here area is. So if you want to spread the specs today? I I mean.

165
00:29:10.450 --> 00:29:14.139
Giulio: we're not sure with 7 0 7. That's my only concern.

166
00:29:14.390 --> 00:29:20.260
EF Berlin: I mean, we technically froze the specs last awkward. That execution dev call so.

167
00:29:20.260 --> 00:29:30.090
Giulio: Yeah, so I, yeah, I'm just, I'm just saying, like, do you want? Do we? Do? We want to make the conscious decision not to freeze the specs today. It's just that's just my question. It's not really anything.

168
00:29:30.310 --> 00:29:34.939
EF Berlin: Think this is true the same way we did our one like, it's an important thing we want to do, and.

169
00:29:34.940 --> 00:29:47.929
Giulio: Right. I understand. I'm okay. I'm just. I'm I'm just. I'm just putting out the question right? So if the answer is, yes, it's fine. No, it's funny also, like it's just one. It's just yes or no question.

170
00:29:48.330 --> 00:29:50.810
EF Berlin: Sure I think it's starting to.

171
00:29:51.400 --> 00:30:19.830
Ansgar Dietrichs: So the main the main goal that I would at least be somewhat adamant on. And of course I'm happy to be ruled if there is agreement on this. I, personally, would really, really want to make decisions today that minimize the risk of us needing a devnet 3 at least in terms of el sized features. Pdas is obviously the one Cl side topic that might require further changes. The question is, if we say for a 1. Anyway, we would want to make a final call on the specific price on Monday.

172
00:30:20.110 --> 00:30:49.780
Ansgar Dietrichs: Can we get to a version of 7 9 0 7 that we can include today. That would only require until Monday for us to have high confidence that we can make final decisions of for all the parameters on Monday for 7, 9 0 7. If so, then I, personally would be fine, basically saying, we basically delay Devnet to launch until Tuesday, for example. And on Monday we make final decisions, but if we think that by Monday we will likely not be in a place yet for the absolute final scope of of 7, 9 0 7

173
00:30:50.231 --> 00:31:00.469
Ansgar Dietrichs: then I would personally prefer we would not move it to Sfi. I don't know if if clients have a feeling for how confident they are on that timeline.

174
00:31:02.140 --> 00:31:08.390
jochem-brouwer: I just want to mention that if there's any benchmark or any test, what we need, just let me know.

175
00:31:08.820 --> 00:31:18.189
jochem-brouwer: Yeah, I can bench everything. But I just need to know what we want. And I also like light lines. Pr, to just limit this Max code size limit. I think we should do that.

176
00:31:18.420 --> 00:31:23.560
jochem-brouwer: and I think we should decide this on Monday. But I can make this benchmarks or any tests before Monday. So yeah.

177
00:31:27.210 --> 00:31:29.339
Ansgar Dietrichs: Sounds good. Thank you, Lucas.

178
00:31:29.726 --> 00:31:38.233
Łukasz Rozmej: Yeah, I think we can also stand behind more or less the newer, newer version with the with the recent pr,

179
00:31:38.840 --> 00:31:44.940
Łukasz Rozmej: we won't have the implementation for next week, though, probably because we don't have it yet, so

180
00:31:45.120 --> 00:31:48.010
Łukasz Rozmej: I'm not sure what that was about. The Devnet.

181
00:31:49.100 --> 00:32:01.690
Ansgar Dietrichs: So that would be specifically my concern. Like we really we want to launch Defnet 2 and Devnet 2 on Tuesday next week at the latest, and so that would have to include all the El sorry, all the elite.

182
00:32:01.690 --> 00:32:07.579
Łukasz Rozmej: No? Then that needs probably Devnet. We need Devnet 3 for this, then, probably at some point.

183
00:32:10.080 --> 00:32:34.100
Ansgar Dietrichs: Okay. So then maybe we go back. Then the decision 1st would be, do we want Devnet 2 to be the final scope of Fusaka. Yes or not? No, because then I think that would to me imply that if we say yes to that question, then this eap would be out of consideration, and we could talk about Julio's fallback eap if we are instead, saying, this is an important enough feature to delay freezing Fusaka, and we will have a devnet. 3. And we are fine with the fork launching 2 weeks later.

184
00:32:34.471 --> 00:32:51.280
Ansgar Dietrichs: That then that is a reasonable price to pay. If if clients think they can have the Ap. Ready for 2 weeks from now. I, personally, as I said before, I personally would very much prefer to freeze Fussaka scope today and not have a devnet. 3. But it sounds like, maybe people disagree.

185
00:32:53.170 --> 00:32:56.719
Ansgar Dietrichs: Do we have opinion on whether or not to wait for Devnet 3.

186
00:32:58.560 --> 00:33:04.159
EF Berlin: Do we think that 7, 9 0 7 implementation, and clients who do not have it right now will take like

187
00:33:04.630 --> 00:33:07.109
EF Berlin: weeks? Or is it more like days.

188
00:33:07.830 --> 00:33:28.240
EF Berlin: And one thing we could do is just include it today. If there's fine tuning we need to do by Monday, we can try to figure that out. Then, yeah, we could start the Devnet on Tuesday, let's say, then, with Who's ready? And if it's only a few more days, I think that's fine. If other clients need a few more days to get there. If it's gonna be like weeks, that's, I think, a different conversation.

189
00:33:30.000 --> 00:33:43.900
Ansgar Dietrichs: Right. Could we go through the clients briefly and get an update on? Maybe I think at least Geth has already implemented this. So Geth would probably would I? My assumption would be immature. Obviously, then, they're the modifications made. They might not be reflected in the code yet, but I assume Geth would be ready very soon.

190
00:33:44.430 --> 00:33:45.509
Ansgar Dietrichs: Is that right?

191
00:33:47.550 --> 00:33:49.117
EF Berlin: Yep, that's right.

192
00:33:50.717 --> 00:33:55.720
Ansgar Dietrichs: How about the other clients? Any other clients, I mean, I can go through call calling you

193
00:33:56.575 --> 00:33:57.790
Ansgar Dietrichs: I mean, yeah.

194
00:33:58.170 --> 00:34:04.219
Gabriel Trintinalia | Besu: This also has an implementation. 4, 7, 9 0, 7, without a code index code size.

195
00:34:04.540 --> 00:34:06.110
Gabriel Trintinalia | Besu: And I could hash code size.

196
00:34:06.230 --> 00:34:08.949
Gabriel Trintinalia | Besu: So yeah, we can. We can get on.

197
00:34:09.580 --> 00:34:14.069
Gabriel Trintinalia | Besu: It'll be nice to have like the 48 global eyes decided. And that'll be nice.

198
00:34:16.440 --> 00:34:19.310
Ansgar Dietrichs: So what would be the timeline from the Besu side on?

199
00:34:20.489 --> 00:34:21.469
Ansgar Dietrichs: Could you guarantee.

200
00:34:21.810 --> 00:34:29.910
Gabriel Trintinalia | Besu: We can get the branch ready tomorrow with 7, 9, or 7, as the current spec is. If we can, we can change as well

201
00:34:30.389 --> 00:34:32.300
Gabriel Trintinalia | Besu: depending on, like, how this Pr.

202
00:34:36.650 --> 00:34:41.179
Ansgar Dietrichs: Right and just to clarify right as the spec is today, it does require you to

203
00:34:41.608 --> 00:34:52.870
Ansgar Dietrichs: know the contract size before you load it from disk. So that does require the extra data structure. Of course, you can always optimistically load from disk if you are comfortable, that that's not a performance set for you.

204
00:34:53.389 --> 00:34:58.919
Gabriel Trintinalia | Besu: Yeah, well, we will implement the code, the the index, but not for the net, too.

205
00:35:04.280 --> 00:35:08.069
Ansgar Dietrichs: Okay. Sounds good Julio. Do you know, from the Aragon side.

206
00:35:08.070 --> 00:35:19.480
Giulio: Yeah. So we kind of started looking into it today. I don't think it's gonna be ready by Monday, is my is my impression. I think we might have it ready without the index, though.

207
00:35:19.832 --> 00:35:24.059
Andrew Ashikhmin: I think. Well, Milan, maybe you you have a more accurate update.

208
00:35:24.899 --> 00:35:33.690
milen | Erigon: Yeah. Hi, so I think we can have it ready for Monday. But that will be without the

209
00:35:35.580 --> 00:35:43.389
milen | Erigon: The code size. Index. And this is something that I think we need to measure properly.

210
00:35:43.590 --> 00:35:57.049
milen | Erigon: And Aragon and that will take more time. So it it. We can have it working. But with this security consideration in mind. I think that requires more time to investigate.

211
00:35:57.270 --> 00:35:59.340
milen | Erigon: We don't have any numbers right now.

212
00:36:03.030 --> 00:36:05.410
milen | Erigon: but probably it will be fine even without it.

213
00:36:08.140 --> 00:36:13.669
Ansgar Dietrichs: Sounds good. Never mind. Did I already ask about the timeline that would take you for implementation?

214
00:36:17.771 --> 00:36:31.509
Łukasz Rozmej: No, I'm not sure who would be implementing that. I think, Ben, so maybe he want to weigh in my guesstimate. We can have it for next week, but I won't specify the exact day.

215
00:36:32.480 --> 00:36:41.250
Łukasz Rozmej: And again, it might be not the full with the all the database indexes, we want to add, but something workable for the

216
00:36:41.630 --> 00:36:44.549
Łukasz Rozmej: Devnet. Ben, do you want to weigh in on that.

217
00:36:46.610 --> 00:36:50.559
Ben Adams: Yeah, probably latter half of the next week.

218
00:36:52.090 --> 00:36:58.609
Ansgar Dietrichs: Sounds good. Rath any any from from your side? Does does this do these general timelines make sense? Mid middle

219
00:36:58.790 --> 00:37:00.179
Ansgar Dietrichs: end of next week?

220
00:37:02.110 --> 00:37:07.389
Roman: Yeah. So as I've said in the chat, we'll we'll have the implementation ready.

221
00:37:10.550 --> 00:37:15.190
Roman: We're gonna include it in dominant 2 gonna include it later.

222
00:37:15.360 --> 00:37:17.320
Roman: what I was more comfortable to be.

223
00:37:18.250 --> 00:37:36.699
Ansgar Dietrichs: Sounds good. Then one last check, Matt. Maybe you're the best to ask. My understanding would be that even without the index the index is more like an implementation detail quote unquote. So basically, you could launch Devnet. And then even on the same devnet clients could switch out the implementation, move to that index structure, and that would not require Devnet 3. Launch. Is that right?

224
00:37:37.230 --> 00:37:39.855
EF Berlin: Yeah, I mean, it's simply an optimization.

225
00:37:41.660 --> 00:37:46.320
Ansgar Dietrichs: Okay and follow up question there. Given that, we did now reduce the size from

226
00:37:46.460 --> 00:38:07.119
Ansgar Dietrichs: the maximum size down to 48 kB. Basically, if it turns out that we just don't have time until the fork to actually move all the clients over to that index, the we are just basically at least the the worst case here would be bounded, because even without the optimization, you only have to load at most twice as much from disk. And so the there's a limit to how much users could could grieve the client. There.

227
00:38:07.310 --> 00:38:08.200
Ansgar Dietrichs: Is that right?

228
00:38:09.160 --> 00:38:10.389
EF Berlin: Yeah, that's correct.

229
00:38:11.280 --> 00:38:15.789
Ansgar Dietrichs: Okay, then. Well, any of you addressed 1. 1 more comment. There.

230
00:38:16.800 --> 00:38:19.020
Ben Adams: Or do we have any tests for it?

231
00:38:23.670 --> 00:38:29.280
Mario Vega: No, we don't. That's the problem. And my concern is the

232
00:38:30.178 --> 00:38:32.969
Mario Vega: the open Pr also. Is that going in?

233
00:38:33.780 --> 00:38:35.529
Mario Vega: Am I understanding that correctly?

234
00:38:37.850 --> 00:38:40.090
EF Berlin: I mean, I would say we should

235
00:38:40.330 --> 00:38:45.817
EF Berlin: do devnet 2, as it's specified, and then have this for Devnet 3.

236
00:38:49.470 --> 00:38:58.750
Ansgar Dietrichs: So then I was. I was trying to get this to a shape where we can just wait with 2 for a few more days and launch it towards the end of next week.

237
00:38:59.226 --> 00:39:04.569
Ansgar Dietrichs: Can you then summarize? Okay, so so what is the Pr, and why that? Yeah.

238
00:39:04.980 --> 00:39:10.760
EF Berlin: I mean, I like, I can make the changes to our implementation, and we can be ready. But

239
00:39:11.760 --> 00:39:18.943
EF Berlin: you know we agreed on what Devnet 2 was supposed to be 2 weeks ago, so it feels a little weird to like constantly change the thing.

240
00:39:19.880 --> 00:39:24.089
EF Berlin: but if clients want to do it like. It's not that big of a change.

241
00:39:25.820 --> 00:39:28.640
EF Berlin: It's just at some point we have to do. The demo, too.

242
00:39:31.230 --> 00:39:51.169
Ansgar Dietrichs: So then, okay, then, my general question. So so we still don't have tests for this yet. So there's some extra concern. It sounds like basically in this in this latest version, with with the 48 kB maximum, at least, the uncertainties are limited. So we have 3 choices. Now, we can either go ahead without it for Devnet

243
00:39:51.570 --> 00:40:08.579
Ansgar Dietrichs: 2, and then decide that we definitely will have a devnet. 3. That we will add this erp in at a later point we can launch just devnet 2 without it and remove it from the fork and not have it, or we can wait for 3 extra days have it be in Devnet 2, and launch Devnet 2 at the end of next week.

244
00:40:08.850 --> 00:40:16.189
Ansgar Dietrichs: Again, my preference would be either of the 2 options that do not include a devnet. 3. Because I think a defnet 3 just adds a lot of extra delay to the fog.

245
00:40:16.390 --> 00:40:19.650
Ansgar Dietrichs: I'd just be curious what people's preferences are.

246
00:40:20.200 --> 00:40:26.089
EF Berlin: I mean, we're gonna have a definite 3. That's a certainty. There's no point in avoiding it.

247
00:40:28.530 --> 00:40:38.220
Ben Adams: I'd I'd want this pr in whatever it is. Devnet 2, because that's the

248
00:40:38.921 --> 00:40:43.840
Ben Adams: the IP changes the one that has the 48 TB limit, etc. So

249
00:40:44.860 --> 00:40:46.299
Ben Adams: we should probably put that in

250
00:40:48.720 --> 00:40:51.500
Ben Adams: rather than have a transition on size.

251
00:41:02.100 --> 00:41:03.160
Ansgar Dietrichs: So then

252
00:41:05.400 --> 00:41:10.010
Ansgar Dietrichs: So my proposal again. I don't want to be too many here. My proposal would be to add.

253
00:41:10.540 --> 00:41:18.470
Ansgar Dietrichs: 7, 9 0 7 in this modified form a simplified form, with with the 48 kB

254
00:41:18.630 --> 00:41:21.510
Ansgar Dietrichs: move it from Cfi, from Cfi to Sfi

255
00:41:21.990 --> 00:41:27.609
Ansgar Dietrichs: for Fusaka, and wait with Devnet 2, until at least

256
00:41:27.780 --> 00:41:36.099
Ansgar Dietrichs: 2 Els, or whatever threshold we think is reasonable, have it implemented at least in the unoptimized version sometime next week.

257
00:41:36.641 --> 00:41:44.229
Ansgar Dietrichs: This might mean a delay of 1, 2, 3 days for Devnet 2, and then launch it, and

258
00:41:44.690 --> 00:41:56.530
Ansgar Dietrichs: again, with the intention that there will not be another change of the El side. Even if we go to Devnet 3. Because of Pdas, that there will basically be no further changes to the El spec.

259
00:41:56.930 --> 00:42:01.930
Ansgar Dietrichs: Is this? Does this generally sound reasonable, or is there a counter proposal in terms of the

260
00:42:02.160 --> 00:42:03.530
Ansgar Dietrichs: way to approach this.

261
00:42:06.951 --> 00:42:28.770
Guillaume: So I can't raise my hands in the new zoom interface. But I I think, yeah. And on top of that, sorry. I'm also watching a baby by myself. So sorry for the screams in the background. But I think we should not do. 7, 79 0 7, simply because it's just bad code, Chunky. And we could have Code chunky in Amsterdam and solve all the problems.

262
00:42:29.192 --> 00:42:53.170
Guillaume: Yeah. So I'd rather have an eip for Glamsterdam that is doing code chunking. And then, since there's clearly a lot of questions about the parameters and everything, and no one has really implemented it. And we want a site index and things like this. I'd rather not have it in Fussaka 7,907, and then do the thing the correct way in Glamsterdam.

263
00:42:57.190 --> 00:43:13.639
Ansgar Dietrichs: Okay, then let's simplify the decision. Just 7, 9, 0 7 in Fusaka. Yes or no. Guillaume has concerns and would prefer not to be included, can we? Matt obviously is in favor. Do we have other voices? Do we want to include this in Fusaka? Yes or no? I really would want to make that decision. Now, basically.

264
00:43:25.510 --> 00:43:43.260
Ansgar Dietrichs: it seems to me like reading chat that there seems to be a pretty strong majority opinion towards including it. Obviously, we do have to consents with the testing. So I think, including it does mean that we all agree that there is a reasonable chance that this might add some delays. It will already delay Devnet 2 by well, we haven't talked about Devnet yet. But basically.

265
00:43:43.480 --> 00:43:46.149
Ansgar Dietrichs: yeah, but it sounds like we can make the decision

266
00:43:46.430 --> 00:43:54.339
Ansgar Dietrichs: any last chance if you want. If you want to speak up against including 7, 9, 0 7 into Fusaka, now is your chance. Otherwise I would say.

267
00:43:56.980 --> 00:44:00.660
Ansgar Dietrichs: okay. So then I would say, we will move, and

268
00:44:00.830 --> 00:44:06.899
Ansgar Dietrichs: we will include 7,907 in the 48 kB version in Fusaka.

269
00:44:07.010 --> 00:44:10.219
Ansgar Dietrichs: Then let's get back now to Devnet timing.

270
00:44:10.637 --> 00:44:30.310
Ansgar Dietrichs: So now now we're down to 2 choices, because now we can't. That simplifies it. So do we launch Devnet 2, as planned on Monday without this, and agree that we will need a devnet. 3. For this, or do we say we wait for a few days and launch devnet 2 next week, as as soon as we have enough clients ready.

271
00:44:32.310 --> 00:44:38.849
Ansgar Dietrichs: photos and chat is prefers to launch Defnet 2 on Monday as planned, and delay this until Devnet 3.

272
00:44:39.050 --> 00:44:42.360
Ansgar Dietrichs: Matt also was in favor of definite 3.

273
00:44:48.230 --> 00:44:51.199
Ansgar Dietrichs: Stokes is in favor of waiting with definit 2.

274
00:44:56.950 --> 00:45:08.769
Ansgar Dietrichs: Roman and Julio. When you say Devnet 2 on Monday, I assume you mean, wait, wait for the Cfp. Until Devnet 3. Is this right? Or are you saying? On Monday we see whether we have enough clients to have it be part of Devnet 2

275
00:45:19.050 --> 00:45:20.259
Ansgar Dietrichs: do it without.

276
00:45:20.790 --> 00:45:26.939
Ansgar Dietrichs: Okay, then it seems like other than Stokes. The majority seems to actually want to push this to Devnet 3.

277
00:45:32.710 --> 00:45:33.390
Ansgar Dietrichs: Okay.

278
00:45:33.900 --> 00:45:34.260
EF Berlin: Then.

279
00:45:34.260 --> 00:45:44.930
EF Berlin: just to clarify. I was saying that we should launch Devnet 2 as soon as possible, and if that's Monday great, I do also think we should include 7, 9, 0. 7. But if that means.

280
00:45:45.400 --> 00:45:52.559
Ansgar Dietrichs: I understand you. You were the only one, though everyone other than you said that we should launch. We should not delay Definite 2 for any cost, and we should.

281
00:45:52.560 --> 00:45:55.890
EF Berlin: Without net. 2. Yeah.

282
00:45:56.410 --> 00:45:57.380
Ansgar Dietrichs: Oh, the old one!

283
00:45:57.380 --> 00:45:59.129
EF Berlin: I think we were aligned.

284
00:46:01.070 --> 00:46:05.040
EF Berlin: There's never been a devnet, 2 spec. Without 7, 9 0, 7.

285
00:46:05.520 --> 00:46:21.360
EF Berlin: So I was proposing that we implement 7, 9, 0. 7, as it was originally specified for Devnet 2, and the Devnet 3. We do the Pr. To make it 48. Kilobytes. It seems like most people, would rather just do the Pr with the 48 kB change. Now

286
00:46:21.910 --> 00:46:24.880
EF Berlin: in that, too, it's not that big of a change.

287
00:46:26.740 --> 00:46:39.149
Ansgar Dietrichs: I see. Sorry they're really not paying Tim enough of this job. This is complicated. Okay? Yes. So then, sorry. The distinction is actually not, as I described it before, the question is definitely, will definitely have 7, 9, 0 7.

288
00:46:39.260 --> 00:46:42.839
Ansgar Dietrichs: The question is, is it the original version? Or with this Pr.

289
00:46:43.270 --> 00:46:44.560
Ansgar Dietrichs: And

290
00:46:44.890 --> 00:47:06.110
Ansgar Dietrichs: the Pr. Would delay Devnet 2 launch by a few days. Sounds like in chat. People prefer to not delay Devnet 2. So then my understanding would be the majority decision. It would be to launch 7,907 with the old sorry to launch Devnet 2 with the old version of 7, 9, 0 7, and then have the new version be in Devnet 3.

291
00:47:06.240 --> 00:47:15.489
Ansgar Dietrichs: Is this majority opinion? Does anyone to speak up against that? I know, Stokes. You would rather just wait for the Pr to be merged and to be implemented by everyone or not.

292
00:47:21.580 --> 00:47:23.209
Ansgar Dietrichs: Yeah, Tim really is the goat.

293
00:47:27.460 --> 00:47:36.980
Ansgar Dietrichs: the Pr, so fresh it needs more time. Okay, then we just make the decision. We will launch Devnet 2 on Monday with the old version of 7, 9, 0 7,

294
00:47:39.750 --> 00:47:47.329
Ansgar Dietrichs: and we'll add the updated version of 7, 9 0, 7 for a later devnet. 3.

295
00:47:49.670 --> 00:47:55.780
Ansgar Dietrichs: Does this work for everyone? Is there any client that will not be ready by Monday with even the old version of 7, 9 0. 7.

296
00:48:00.390 --> 00:48:04.129
Ben Adams: No, the mind won't be ready with the old version on Monday.

297
00:48:08.740 --> 00:48:15.260
Ansgar Dietrichs: Okay? Then the idea would be to launch the Devnet without, never mind initially, and have your guys join at a later point.

298
00:48:22.950 --> 00:48:45.089
Ansgar Dietrichs: Okay? Sounds good. So, Barnabas, that would then be up to you. Basically, once we have enough clients ready with the old version. So basically, Devnet 2 specs is the old version of 7, 9, 0 7, and we already agreed that the final version for Fusaka will be then including the Pr. So that means we will need a defnet. 3 at a later point that we can discuss at a future call. Okay, that concludes this section of the call

299
00:48:45.380 --> 00:49:07.549
Ansgar Dietrichs: moving on to the next eap. But none of the other ones are complicated hopefully. Eap 7,934 lp. Execution block size limit. Again, it's Cfi plan is to move it to Sfi, just to confirm. Is there any blockers on this? I understand that there's not perfect test cases for this yet. But

300
00:49:07.740 --> 00:49:13.320
Ansgar Dietrichs: is there any blockers for having this in Sfi and in Devnet? 2.

301
00:49:24.600 --> 00:49:30.739
Ansgar Dietrichs: Okay. So then we will move. 7, 9, 3, 4 to Sfi, and it will be included in Devnet 2,

302
00:49:31.390 --> 00:49:51.240
Ansgar Dietrichs: and the last one. The last eap to make an inclusion on inclusion. Decision on is Eip. 7,939 count leading zeros opcode. Now this one is a bit out of process. This was not Cfid in the past. This was not proposed even in the past is my understanding. But it was included in the Berlin

303
00:49:51.430 --> 00:49:54.920
Ansgar Dietrichs: Belintop, Devnet 2. So they are still now.

304
00:49:55.060 --> 00:50:06.250
Ansgar Dietrichs: Some people would prefer would actually like this to still be in Fusaka. Given that it was in one of the Devnets. Do we have some a champion on the call that would want to make the case for that.

305
00:50:12.500 --> 00:50:13.470
Ben Adams: Factorized.

306
00:50:22.290 --> 00:50:25.559
Vectorized (Ben): Oh, Hi, okay, I think just

307
00:50:25.970 --> 00:50:28.659
Vectorized (Ben): all the client teams don't have

308
00:50:29.460 --> 00:50:34.370
Vectorized (Ben): any protests against like including it. Then

309
00:50:35.650 --> 00:50:42.949
Vectorized (Ben): I'm for it because it's like stateless. You can reason about it very clearly on on the worst case. Safety stuff.

310
00:50:55.670 --> 00:50:57.870
Ben Adams: Do you wanna say? Why we want it in.

311
00:50:58.420 --> 00:51:04.127
Vectorized (Ben): Okay. So let's say, if we don't have it in

312
00:51:05.710 --> 00:51:06.630
Vectorized (Ben): So

313
00:51:07.460 --> 00:51:20.620
Vectorized (Ben): okay, from like practical point of view the compiler will probably need one to 2 months to adopt it. L. 2. So probably need like 6 months to adopt it. And by the time, if everything adopts it.

314
00:51:21.300 --> 00:51:30.730
Vectorized (Ben): let's say we pushed against them. Then we mo will realistically only see it being used like in probably 2 2 0 2, 7,

315
00:51:31.570 --> 00:51:38.890
Vectorized (Ben): and for something with such a high impact to at foot.

316
00:51:41.110 --> 00:51:44.469
Vectorized (Ben): Okay, you can argue that it's our process. But yeah.

317
00:51:52.360 --> 00:52:22.209
Ansgar Dietrichs: Right? Thank you. Obviously, on this eap, the main question is just process. My understanding is it's a very self-contained eap. Testing is already basically done for it. The problem is basically that it is only being proposed today, we kind of long closed Fusaka for newly proposed eaps. So the question is, do we want to overrule process here, to fast, track it, and include it, and have it be part of Devnet 2. I would really only do this in this case, if all the clients agreed, given that it is such an exceptional

318
00:52:22.580 --> 00:52:27.620
Ansgar Dietrichs: kind of process here. But if so, then of course, why not do it, Julio, you have an opinion.

319
00:52:28.110 --> 00:52:34.270
Giulio: Oh, no, I just actually just wanted to say what you just said. But I mean, Aragon is pretty much in favor of inclusion.

320
00:52:34.620 --> 00:52:38.400
Giulio: because it's easy and small. And yeah, it's already there.

321
00:52:42.000 --> 00:52:56.999
Ansgar Dietrichs: Sounds good. Just, of course, to repeat one of the problems with these things is that it's, for example, it's in the opcode, so that it means it is taking up one specific opcode byte. There could be some incompatibility, say, with the L. 2 s. Or whatnot given, that we didn't give them any advance warning that we will now

322
00:52:57.150 --> 00:53:05.109
Ansgar Dietrichs: propose and then potentially immediately included. These things are never ideal, so I think in general, we should try to stick to the process in these things.

323
00:53:05.546 --> 00:53:15.210
Ansgar Dietrichs: But again, in this case, my understanding is that all the clients would want this. Is there any client team that has concerns or would prefer to not include, the cip into the into Fusaka.

324
00:53:26.390 --> 00:53:37.025
Ansgar Dietrichs: Okay, then. Yeah, I will. Just, you know, in the absence of Tim Tim. I will just make the call to overall process here. We will

325
00:53:38.080 --> 00:53:50.439
Ansgar Dietrichs: add, and then immediately move to Sfi. This eip, and that means it will then also be part of Devnet 2. If my understanding it would be correct. Is this, is this right? Is there any reason to not to delay that.

326
00:53:50.958 --> 00:53:54.060
Ansgar Dietrichs: Well, basically, is, is everyone okay with adding it to Devnet 2.

327
00:54:00.600 --> 00:54:05.760
Ansgar Dietrichs: Yes, definitely 2. Okay, then let's go ahead with it and have the Cfp be part of Defnet 2

328
00:54:05.980 --> 00:54:30.741
Ansgar Dietrichs: awesome. So that's the all the inclusion, non-inclusion decisions we had to make today sounds like we went with inclusion on all of these 4 points. That's great. Now, we have 3 more erps that are that that we have to talk about in the context of the of the fork. So the 1st one is 7, 9, 7, 5, which is the E 70 protocol.

329
00:54:31.560 --> 00:54:37.580
Ansgar Dietrichs: My understanding is that Felix is on the call and could give a quick update on this.

330
00:54:39.390 --> 00:55:07.829
EF Berlin: Yes, I can give a quick update on this. So this eip was created specifically to address the issue that beyond a certain estimate, the receipts. List of the block can increase so much that it will break the sync. And we have been discussing this eip for a bit. And I think, while it is not a change that requires a hard fork, we will still have to roll out this change

331
00:55:07.830 --> 00:55:19.239
EF Berlin: kind of on the same timeline as Fusaka. Basically, it has to be in the Fusaka ready client releases in order to make sure that all clients are ready for gas limit increases

332
00:55:19.300 --> 00:55:31.440
EF Berlin: after the fork, because otherwise there will be this implicit boundary in the protocol, where, for example, we cannot increase the gas limit beyond 80 million. Because of this condition.

333
00:55:32.030 --> 00:55:39.710
EF Berlin: So I am happy to answer any questions. But I want to say, upfront that this eip is still under development. And so, yeah.

334
00:55:40.260 --> 00:55:42.860
EF Berlin: it is not fully ready by now.

335
00:55:45.580 --> 00:55:48.379
Ansgar Dietrichs: Thank you, Felix. Julio had to end up.

336
00:55:48.380 --> 00:56:06.370
Giulio: Yeah, I just want to specify that this is not really like, this is an IP that doesn't need to be in an offer, because it's a network. IP, so it's completely parallel to to Fuzaka from that perspective. But it is needed. If we want to go above 100 million, or at 100 million.

337
00:56:06.920 --> 00:56:14.429
Ansgar Dietrichs: Yeah, just to clarify. So basically, we already agreed in the past that Eth 69 will be basically part of the

338
00:56:14.660 --> 00:56:39.480
Ansgar Dietrichs: Fusaka Fork spec meaning. Yes, it's not a an actual protocol change, but it is basically something we would want to roll out in. The client releases because the Fusaka fork is the last kind of natural point this year, where basically everyone will have to upgrade their clients anyway. So it would be quite desirable. So in the past, we decided that we are now open to having such a piece also in hard forks.

339
00:56:39.570 --> 00:56:58.550
Ansgar Dietrichs: Agree. If if we can't make it into Fussaka, the nice thing is here. We can always delay it. Then, just if we needed to actually go across a certain gas limit threshold, we just have to manually go through the effort of making sure that all the clients have been updated, so it would still be very nice if we could indeed get it into the

340
00:56:58.730 --> 00:57:02.420
Ansgar Dietrichs: final releases for Fusaka and Ben. You had a comment.

341
00:57:03.124 --> 00:57:12.780
Ben Adams: I don't. I don't think it's particularly a problem if it doesn't go into soccer. I mean, obviously we have to do it, but because of where it will occur which is syncing.

342
00:57:13.545 --> 00:57:21.590
Ben Adams: The initial. Essentially, you're starting the client. You'll fail to sync. It's a good time to update anybody. Running will be fine.

343
00:57:22.220 --> 00:57:25.930
Ben Adams: I don't think it's necessarily tied to the fork.

344
00:57:26.240 --> 00:57:32.319
EF Berlin: And the problem is that we need this change in the server side. So this is kind of the the main issue with it. You.

345
00:57:32.320 --> 00:57:33.600
EF Berlin: Yeah.

346
00:57:33.600 --> 00:57:48.479
EF Berlin: not able to sync unless the server supported. So there has to be sufficient number of E 70 servers in the network in order to be able to sync after the fork if we chose to increase the estimate. So.

347
00:57:48.480 --> 00:57:49.500
Ben Adams: That's a fair point.

348
00:57:49.680 --> 00:57:50.500
EF Berlin: Yeah, that's good.

349
00:57:50.500 --> 00:58:10.689
EF Berlin: general, like, with the network vips, there's like, we always just also do the testing a bit out of band. So it's not really, I mean, we can at some point, including indefinite. But so far there's no implementation of this vip. So there's also no way for us to include it, for example, in the definite 2 or 3 or something, but we will definitely include it at some point.

350
00:58:11.560 --> 00:58:13.360
EF Berlin: So, yeah.

351
00:58:13.360 --> 00:58:42.029
Giulio: Yeah, there is like, if we want to just put, if we really think we should should be going to the aspect, then there is also another eip. That is a bit ugly, that like is, it's simple to implement, which is just increasing the receipts message packets. Max, maximum size that solves also this problem. But it's not like the best solution. But that probably is much like that that's already spec, and that can be done probably tomorrow, and by Devnet, too.

352
00:58:42.110 --> 00:58:49.490
Giulio: But I think gonna be fine anyway, like, I think we can, just this can be asynchronous. But yeah.

353
00:58:51.740 --> 00:59:14.470
Ansgar Dietrichs: Okay, yeah. Then, I think, indeed, we can kind of given that. We have still a lot of agenda to go through. I think we kind of then all agree. This is something we would want to do, or maybe potentially still investigate alternatives, and that we would basically want to in the next few weeks. Kind of like get to a decision point on whether this will be in the client releases for Fasaka or not, but that we don't have to decide this and don't have to decide this for the Devnet scopes, because this is technically not

354
00:59:14.600 --> 00:59:19.910
Ansgar Dietrichs: a feature. Eip! Felix, does that sound right from your end?

355
00:59:20.230 --> 00:59:40.080
EF Berlin: Yeah, I mean, like, I said, this vip is still under development, and we will have more input about it later. But I do think it's important to discuss it as a part of Fusaka, because we wanna be ready for the gas limit increases after that fork. So we will have to treat it as part of the Fusaka

356
00:59:40.260 --> 00:59:48.380
EF Berlin: scope somehow. But it's not like it doesn't have to go through the same process exactly, you know.

357
00:59:48.600 --> 01:00:07.280
Ansgar Dietrichs: Yeah, sounds good. So then, for now it's basically just notice to the different clients. Please keep track of this as it evolves, so that once it is stable it can be implemented as soon as possible, so that we keep the door open, at least to rolling it out with, together with Fusaka, but we can make a call on this on a future acd

358
01:00:07.580 --> 01:00:10.082
Ansgar Dietrichs: awesome. Thank you. Thank you, Felix.

359
01:00:10.780 --> 01:00:23.729
Ansgar Dietrichs: so that was that. Then we have Eip, 7,918, that is Andas's eip for the Blob Fee market. There's 1 last parameter we need to finalize there, Andas, are you on the call. Can you briefly

360
01:00:24.198 --> 01:00:31.959
Ansgar Dietrichs: give a summary of this? And if so, could we try to time box this a little bit just because we we don't have that much

361
01:00:32.100 --> 01:00:32.940
Ansgar Dietrichs: time left.

362
01:00:33.230 --> 01:00:35.139
Anders Elowsson: Alright. Hi, yeah. Do you hear me?

363
01:00:35.890 --> 01:00:37.190
Ansgar Dietrichs: Yes, we can hear you.

364
01:00:37.190 --> 01:00:49.223
Anders Elowsson: Yeah. Yeah. So we had a preliminary setting in the net. One. It was 2 to the power of 14, that is, 16,000, and we were also meaning to get back to to what exactly we should set it to. So

365
01:00:50.063 --> 01:00:53.490
Anders Elowsson: I made a post. I can link it in the chat where where

366
01:00:54.350 --> 01:01:16.500
Anders Elowsson: I go through the various considerations that we can have. So if we strictly want to ensure a functioning fee market, then 2 to the power of 12, that is, around 4,000 gas would be perfectly sufficient. But if we fully wish to short, and for the compute costs that blobs impose, then we would rather wish to go, probably above 214. So

367
01:01:17.160 --> 01:01:25.520
Anders Elowsson: that's sort of the the context in which we should make a decision on what exactly we set this constant to.

368
01:01:25.820 --> 01:01:28.279
Anders Elowsson: If I reflect on what people have said

369
01:01:29.109 --> 01:01:32.159
Anders Elowsson: when we're discussing with people, I would say that

370
01:01:32.450 --> 01:01:42.750
Anders Elowsson: some people are in favor of racing and some lowering, and I would say the average sentiment has been around 2 to the power of 13, perhaps, or something like that.

371
01:01:43.640 --> 01:01:44.740
Anders Elowsson: 8,000.

372
01:01:46.300 --> 01:01:53.510
Ansgar Dietrichs: Sounds good. And just to give a little bit of context here for people listening. Basically, the idea is just that we want to make sure in the future that basically the minimum

373
01:01:53.710 --> 01:01:58.759
Ansgar Dietrichs: blob base fee is always set so that basically a 1

374
01:01:58.840 --> 01:02:13.550
Ansgar Dietrichs: blob of a blob transaction would cost at least the equivalent amount of normal gas of that value. So currently, it's set to 16,000. So meaning that any one blob would cost at least the same amount as 16,000 normal gas.

375
01:02:13.620 --> 01:02:31.990
Ansgar Dietrichs: So that would, for example, mean that a 6 blob transaction would now roughly consume at the minimum, of course, roughly consume 120,000 gas, which is, of course, a meaningful raise over the normal flow of 21,000. But it's also not in the millions.

376
01:02:32.486 --> 01:02:34.770
Ansgar Dietrichs: Is, that is, that the correct understanding.

377
01:02:38.345 --> 01:02:39.120
Anders Elowsson: Yeah.

378
01:02:39.450 --> 01:02:40.849
Ansgar Dietrichs: Okay, so that so.

379
01:02:40.850 --> 01:02:48.460
Anders Elowsson: Yeah, posted a table here. You can. You can check out the table in the shelf which can be helpful in understanding. You know how we affect, you know the real price of

380
01:02:48.580 --> 01:02:49.246
Anders Elowsson: of

381
01:02:53.070 --> 01:03:17.560
Ansgar Dietrichs: I think, for now we can't go too deep into this. I think, as you said already, basically, the some people would want it higher. Some people would want it lower. To me, it seems I mean I personally would want it lower, but it also seems kind of at a reasonable level. Right now, I think you said maybe the the average between the different opinions could be one power of 2 lower. So basically 8,000 instead of 16,000. I think I heard you say.

382
01:03:17.560 --> 01:03:33.940
Anders Elowsson: Yeah, yeah, essentially, having talked with around 6 people and if we go by that, yeah, we would end up at 2 to the power of 13, but I mean for me 2 to the power power of 12 to the power of 13, 2 to the power of 14

383
01:03:34.655 --> 01:03:40.240
Anders Elowsson: would be acceptable. And I I would I would say that that

384
01:03:41.060 --> 01:03:44.790
Anders Elowsson: for me I don't know. 2 2 power 13 maybe is.

385
01:03:45.440 --> 01:03:56.240
Anders Elowsson: yes, something. If if people feel that this is okay. There's some people that feel strongly about lowering it below and some higher. So maybe they should opine about it.

386
01:03:56.610 --> 01:03:59.919
Ansgar Dietrichs: Yeah, Ben, I think you were on the side of wanting it higher.

387
01:04:00.310 --> 01:04:09.690
Ben Adams: Yeah, I mean, I I think recurrent price is underpriced in terms of work done.

388
01:04:10.445 --> 01:04:13.490
Ben Adams: But you know that that's fine. But

389
01:04:13.850 --> 01:04:21.300
Ben Adams: so I think we should stick with the the current value rather than decreasing it further.

390
01:04:24.880 --> 01:04:25.440
Ansgar Dietrichs: Okay.

391
01:04:26.417 --> 01:04:33.519
Ben Adams: Especially especially since a lot of our recent motivations is trying to get things priced correctly

392
01:04:34.100 --> 01:04:37.189
Ben Adams: rather than let's massively underprice everything.

393
01:04:37.800 --> 01:04:58.410
Ansgar Dietrichs: So I just wanted to point out one. Maybe nuanced point here is that while it basically, the crp does give some sort of equivalent amount of gas. It doesn't actually count against the normal gas limit. So unfortunately, it does not in any way help limit the total compute load of a block, you can still have a block that uses all of the normal gas for a normal compute, and then the additional kind of blob gas for

394
01:04:58.740 --> 01:05:09.760
Ansgar Dietrichs: Kcd compute. So I think in in the sense it does not. Basically a higher value here does not help limit, compute, load, or help with scaling, or anything like that.

395
01:05:10.351 --> 01:05:38.558
Ansgar Dietrichs: Yeah, I personally feel again, feel slightly uncomfortable with at the current level, because it kind of does basically raise the minimum amount that a blob transaction, a full 6 blob transaction can cost by a factor of 5 or 6, which is a bit much to me for the original purpose of just trying to make the fee market more responsive. But also I don't want to drag this out too much. So, Ben, if you you said you. You prefer to stay at this value? I don't know. Do we have anyone else on the call with an opinion on this?

396
01:05:42.370 --> 01:05:49.080
Anders Elowsson: Casper dropped 2 to the power of 12 in the shot, and Stokes dropped 2 to the power of 11.

397
01:05:49.250 --> 01:05:50.590
Anders Elowsson: As preferences.

398
01:05:51.371 --> 01:05:53.129
Ansgar Dietrichs: I see well, then.

399
01:05:53.490 --> 01:05:56.739
Ben Adams: It's a it's a it's an extremely low value, anyway.

400
01:05:57.690 --> 01:05:58.610
Anders Elowsson: Yeah, it's very low.

401
01:05:58.610 --> 01:05:59.380
Ben Adams: Current, look.

402
01:06:01.410 --> 01:06:24.040
Ansgar Dietrichs: So then given that all the other opinions would be below the current eap value. Would you be fine with going down one order of magnitude, one power of 2, and basically go with 2 to the 13 instead of what is currently in the Ap. 2 to the 14. As a compromise value. I mean, I understand, that's not fully principled, but just just to basically make a pragmatic decision here and and lock this info for saka.

403
01:06:25.850 --> 01:06:26.860
Ben Adams: Yeah, sure.

404
01:06:28.920 --> 01:06:42.480
Ansgar Dietrichs: Okay? Then I think again, in the in the spirit of just having this locked into Fussaka, because we've been discussing this for quite a while, and we can always revisit this in Amsterdam. Then I would say, we just finalize at 2 to the 13 and move and basically just

405
01:06:42.810 --> 01:06:47.859
Ansgar Dietrichs: have this value be be basically the the final one for Fussaka. Is that okay? With everyone.

406
01:06:51.800 --> 01:06:55.790
Anders Elowsson: Yeah, as mentioned for me. Yeah. So I think that.

407
01:06:57.200 --> 01:07:01.459
Anders Elowsson: yeah, it's I'm fine with either either of these options.

408
01:07:01.960 --> 01:07:15.939
Ansgar Dietrichs: Okay, yeah, perfect. Then if, unless if you could change it to 2 to the 13 in the Ap. Then I think we can move forward with that and again. Sorry. I'm not super familiar with this process. Does this, then, mean that we will target this new value of 2 to the 13 for Devnet 2. Or

409
01:07:16.070 --> 01:07:17.250
Ansgar Dietrichs: does that make sense?

410
01:07:21.660 --> 01:07:23.250
Ansgar Dietrichs: That's how I would do it, at least.

411
01:07:23.400 --> 01:07:31.440
Ansgar Dietrichs: So yeah, then, if no one protests, then we will. Basically, we should have Devnet 2 already. Use this updated value of 2 to the 13.

412
01:07:32.530 --> 01:07:38.919
Ansgar Dietrichs: Okay, perfect. So then the last eap to talk about here for Fusaka

413
01:07:39.270 --> 01:07:54.920
Ansgar Dietrichs: is Erp. 7, 8, 9, 2. That is the Bpo fox. And they're specifically the question is about the per transaction blob limit, which is currently set to 6, I think, is my understanding. I think, Alex, you wanted to talk about this.

414
01:08:01.091 --> 01:08:06.069
EF Berlin: Yeah, there was just a question that came up so I believe I forget the

415
01:08:07.360 --> 01:08:14.410
EF Berlin: yeah, I forget where the Pr is on this. But essentially there was an introduction of this Max Pops per transaction constant.

416
01:08:14.610 --> 01:08:21.139
EF Berlin: and it was to the Bpo eip, so that we could presumably change this. Per Bpo.

417
01:08:21.590 --> 01:08:24.450
EF Berlin: we should just agree on how we want to do this.

418
01:08:24.870 --> 01:08:34.730
EF Berlin: well, okay, there's a few things here. One is just what this number should be. I think we discussed some last week, and I think the most common preference I heard was just 6 per transaction.

419
01:08:35.040 --> 01:08:48.429
EF Berlin: There isn't a question if we want to have this be part of the Bpo schedule, as in configurable within, like a named Hard Fork. My take is that it should not be. I think we might want to change from. Let's call it a named fork. So from like, say.

420
01:08:49.125 --> 01:08:59.009
EF Berlin: you know Fusaka to Amsterdam. But I don't really see the need to have this like fine grain control within Hppo to change this number.

421
01:09:04.660 --> 01:09:05.380
Ansgar Dietrichs: Lucas.

422
01:09:05.960 --> 01:09:18.710
Łukasz Rozmej: 2 things. Why, it's generally good to limit it. In the 1st place. So gossiping 72 blob transactions in the current vampole will be really hard.

423
01:09:19.830 --> 01:09:40.289
Łukasz Rozmej: and that's 1 thing. And block building with such a big blobs is also hard to do it optimally, and it's easier to do it with a smaller number, I think 6 was chosen as a kind of extreme of a current state. 12 is also completely fine, for example, or even 18.

424
01:09:43.020 --> 01:09:43.710
Ansgar Dietrichs: Shaba.

425
01:09:47.819 --> 01:09:49.749
Csaba Kiraly: Yeah. So

426
01:09:50.029 --> 01:09:55.019
Csaba Kiraly: so my point is, it's again voicemail to these 2 things. What value and and how you want to set it.

427
01:09:55.219 --> 01:09:59.429
Csaba Kiraly: And I think I don't see any reason to go beyond what we have now.

428
01:10:00.429 --> 01:10:17.379
Csaba Kiraly: There are drawbacks of of having this larger than than 6. So so one thing is, I think we don't need more than 6, and the other one is, if we don't need really to change this, then then I would not make it part of the fast track, changing mechanisms which we call Bpo, so

429
01:10:17.812 --> 01:10:39.397
Csaba Kiraly: yeah. Why, why, we don't need more than 6. I think it it introduces a bunch of of issues. So then, we have a larger span from one to 12. Say, then you have to add more size, based logic to to handling this. We have pricing issues, whatever comes in. If we are increasing it. Then we have more problems on the on the

430
01:10:40.209 --> 01:10:49.619
Csaba Kiraly: transmission of these, we would start to fragment it. But that kind of doesn't make sense, because we can already fragment it by not sending these big ones, and it just doesn't

431
01:10:49.759 --> 01:10:57.567
Csaba Kiraly: have a have a use to to make it large. We already amortizing the cost by 6 we wouldn't change that too much. And

432
01:10:58.049 --> 01:11:03.539
Csaba Kiraly: and I don't think the L twos need or other users, or whoever they are, they would need larger ones.

433
01:11:03.912 --> 01:11:06.439
Csaba Kiraly: So yeah, just simply let's just keep it as is.

434
01:11:07.229 --> 01:11:11.379
Csaba Kiraly: And I don't think we need a fast way of changing this, because we want.

435
01:11:13.450 --> 01:11:14.050
Ansgar Dietrichs: Pen.

436
01:11:15.369 --> 01:11:25.910
Ben Adams: Yeah, I don't. I don't think we need to change it to a high level one of the one of the issues is again, it will create a non functioning market because.

437
01:11:26.825 --> 01:11:38.179
Ben Adams: essentially, you have tetris blob packing. So you might have over demand in terms of the number of blobs available, but they had 9 slots, and you have

438
01:11:39.040 --> 01:11:45.600
Ben Adams: 2 7 blob transactions. Then you can only fit one of them. So

439
01:11:45.830 --> 01:11:50.879
Ben Adams: you know, it's gonna or 2 6 blob transactions. You can only fit one of them in a 9

440
01:11:51.750 --> 01:11:54.049
Ben Adams: thing. So you're you're gonna get underfilled.

441
01:11:54.866 --> 01:12:01.090
Ben Adams: So putting a lower limit on the Max size of blobs means you can include more blobs.

442
01:12:01.290 --> 01:12:02.420
Ben Adams: Paradoxically.

443
01:12:07.130 --> 01:12:12.160
Ansgar Dietrichs: Makes sense. Alex, do you maybe want to synthesize what that means? Decision, wise.

444
01:12:14.770 --> 01:12:29.890
EF Berlin: Yeah, well, yeah. So I mean, it sounds like, everyone's comfortable with 6 as like a flat limit. So I would even suggest taking it out of the vpo config, and just having this be a parameter that we just have for all time. And obviously we could raise it in the future if we need to.

445
01:12:30.040 --> 01:12:42.999
EF Berlin: So that might look like putting a Pr to the pure cip. I mean, I'm yeah. I'm flexible on where exactly it should live. But it sounds like we're fine with 6 and not changing right?

446
01:12:43.650 --> 01:12:48.559
EF Berlin: I feel like computer dos. Eip is the right place to put this parameter.

447
01:12:51.170 --> 01:12:55.979
Barnabas: Well, this was adjusted to the block schedule Vip, because,

448
01:12:56.580 --> 01:13:05.489
Barnabas: the values are actually only represented in the blob schedule. So we're gonna need to make a Pr. To remove it from the blob schedule

449
01:13:05.630 --> 01:13:09.699
Barnabas: and then make a Pr. To hard code it in the curiosity, IP, I think.

450
01:13:10.620 --> 01:13:14.040
Barnabas: and then we should aim to do these changes for demonstrate

451
01:13:17.120 --> 01:13:19.709
Barnabas: or definitely 2. I really don't care

452
01:13:20.710 --> 01:13:24.050
Barnabas: because the values will not change. So we could actually just target them.

453
01:13:24.407 --> 01:13:25.122
EF Berlin: It is

454
01:13:25.899 --> 01:13:33.179
EF Berlin: this is actually a question. Should it be 2 or 3? Is this going to be a lift for people to in time for Devnet 2.

455
01:13:34.870 --> 01:13:36.610
Barnabas: It's a constant.

456
01:13:37.920 --> 01:13:43.230
EF Berlin: Yeah, but they need to take out of the config. And then there's like, Vpo logic. They might want to change

457
01:13:44.440 --> 01:13:49.740
EF Berlin: like, it's more a question of like if we want to launch Monday with Devnet 2 like, can we just make this change in time?

458
01:13:49.940 --> 01:13:53.500
EF Berlin: It shouldn't make any difference to doing Demo 3.

459
01:13:54.180 --> 01:13:59.849
Ansgar Dietrichs: And my understanding is that this is actually a Cl side question, right? Because this is a Cl. Oh, sorry.

460
01:14:00.720 --> 01:14:01.719
Barnabas: To see you.

461
01:14:04.320 --> 01:14:04.820
Barnabas: I can.

462
01:14:04.820 --> 01:14:05.150
Ansgar Dietrichs: Then.

463
01:14:06.112 --> 01:14:06.900
Barnabas: On our test.

464
01:14:06.900 --> 01:14:07.720
Barnabas: Then.

465
01:14:08.240 --> 01:14:09.300
Ansgar Dietrichs: Yeah, how do we make.

466
01:14:09.300 --> 01:14:09.890
Barnabas: That's the question.

467
01:14:09.890 --> 01:14:10.560
Ansgar Dietrichs: Decision.

468
01:14:11.070 --> 01:14:14.770
Ansgar Dietrichs: Do we have Eldevs with an opinion on Devnet, 2 versus Devnet.

469
01:14:16.450 --> 01:14:43.049
EF Berlin: I personally feel like it should go in Devnet 3. Like the more things small little things we add to Devnet 2, the like. More likely it is Devnet 2 is gonna take longer. We're talking about like 2 working days, and we've already discussed a few things that we need to sort out for Devnet 2. It like to me just makes like we're gonna have devnet 3. Let's just say we'll do this change in Devnet 3. I don't really see an issue with that.

470
01:14:52.750 --> 01:15:01.760
Ansgar Dietrichs: Sounds good. And just to repeat this change that we're talking about is only moving it out of the Bpo parameter space into just like something that's fixed per hard fork, right?

471
01:15:02.190 --> 01:15:06.710
Barnabas: And then moving it into the IP, and making it a constant.

472
01:15:07.300 --> 01:15:07.710
EF Berlin: Yes.

473
01:15:07.710 --> 01:15:15.259
Ansgar Dietrichs: Okay, perfect. So then I would say, we do it for Devnet 3. Given that there seems to be limited opinions and opinions seem to point towards Devnet. 3.

474
01:15:17.010 --> 01:15:18.070
Ansgar Dietrichs: M.

475
01:15:18.210 --> 01:15:18.960
Ansgar Dietrichs: Okay.

476
01:15:19.070 --> 01:15:20.570
Ansgar Dietrichs: Perfect. Then.

477
01:15:20.570 --> 01:15:23.850
Barnabas: And we should also discuss who is gonna make the Prs for this.

478
01:15:25.120 --> 01:15:26.000
Ansgar Dietrichs: Guess any.

479
01:15:26.670 --> 01:15:27.280
Ansgar Dietrichs: Thank you.

480
01:15:27.280 --> 01:15:29.410
stokes: I said, Yeah, I said, I can do it.

481
01:15:35.980 --> 01:15:40.420
Ansgar Dietrichs: Sounds good. Then let me briefly recap, and then hand it off to Barnabas to confirm.

482
01:15:43.780 --> 01:15:47.330
Ansgar Dietrichs: I have let me post this to chat, paste this to chat.

483
01:15:49.080 --> 01:15:50.460
Ansgar Dietrichs: This would be the

484
01:15:51.350 --> 01:15:56.260
Ansgar Dietrichs: these would be the diffs for Devnet 2 and Devnet 3. So basically for Devnet 2,

485
01:15:56.560 --> 01:16:09.559
Ansgar Dietrichs: and that we want to launch on Monday we would have we would include 7, 9, 5, 1 with the the r 1 curve with the old pricing. We will have 7, 9 0. 7. The old version included

486
01:16:09.710 --> 01:16:25.592
Ansgar Dietrichs: 7, 9, 3, 4, and 7, 9, 3, 9. Those were uncontroversial, just included, and the 7, 9, 18 parameter change to to the 13. Those would be the only changes. Well, the only basically, though this would be

487
01:16:27.100 --> 01:16:36.550
Ansgar Dietrichs: for definite 2. And then we would wait for definite 3 with the potential pricing changes for the air, one curve with the new version for 7, 9 0 7, and the

488
01:16:37.040 --> 01:16:41.810
Ansgar Dietrichs: per transaction blocks moved into the Ps. Eip out of the Bpo.

489
01:16:42.180 --> 01:16:47.619
Ansgar Dietrichs: Does this sound right? And then, if so, Barnabas, can you confirm what that means for

490
01:16:47.940 --> 01:16:49.480
Ansgar Dietrichs: definite, true timing and everything.

491
01:16:49.830 --> 01:16:55.719
Barnabas: I think, 7, 9, 1, 8 parameter change to to the power of 13 should go to 3,

492
01:16:55.960 --> 01:17:05.679
Barnabas: because it's 1 of these repricing style vips, and I haven't even seen the Pr. For this, so

493
01:17:06.210 --> 01:17:08.289
Barnabas: I would just shift it to definitely.

494
01:17:08.780 --> 01:17:19.619
Ansgar Dietrichs: Okay, that sounds good. Then we make that change. It's going to be out of definite 2 into Devnet 3. Other than that. Does that sound good? And then can you confirm the timings for Devnet 2.

495
01:17:20.600 --> 01:17:30.699
Barnabas: Yeah, other than that sounds good. And then if we have at least 3 years and 3 cl to launch on Monday, then we're gonna do that. Otherwise, we're gonna shift it by one day.

496
01:17:31.510 --> 01:17:33.039
Barnabas: and we're gonna reevaluate.

497
01:17:35.020 --> 01:17:43.140
Ansgar Dietrichs: Awesome. I will also post all of these changes that I just listed out, including moving this, as Bannabas recommended, into the

498
01:17:43.500 --> 01:17:45.560
Ansgar Dietrichs: Discord channel after the call

499
01:17:46.210 --> 01:17:56.030
Ansgar Dietrichs: perfect. Then that seems like that would conclude the section on Fusaka, and we can move to Glamsterdam. Is there anything last on Fusaka that anyone wants to briefly talk about.

500
01:18:02.350 --> 01:18:06.112
Ansgar Dietrichs: Okay, then let's move to Amsterdam.

501
01:18:07.280 --> 01:18:14.610
Ansgar Dietrichs: we have 2 things to discuss, one Standalone Erp proposed, and one headliner proposal.

502
01:18:14.760 --> 01:18:23.500
Ansgar Dietrichs: and for the standalone. Eap. 7, 7, 4, 5. Zalt wanted to give a quick overview if you are on the.

503
01:18:23.840 --> 01:18:24.900
Zsolt Felföldi: Yes.

504
01:18:25.180 --> 01:18:38.600
Zsolt Felföldi: Hi, hello, everyone. So yeah, I will just do a quick introduction of this. We are not wanting to go into too many technical details. So I will try to share my screen.

505
01:18:41.070 --> 01:18:45.450
Zsolt Felföldi: Yeah, let's just around this. I can.

506
01:18:45.450 --> 01:18:46.790
Ansgar Dietrichs: Okay, I can see your screen.

507
01:18:47.260 --> 01:18:48.190
Zsolt Felföldi: You don't.

508
01:18:49.220 --> 01:18:50.130
Ansgar Dietrichs: I can.

509
01:18:50.130 --> 01:18:51.000
Ansgar Dietrichs: Sorry I can't.

510
01:18:51.130 --> 01:18:51.800
Zsolt Felföldi: You can.

511
01:18:51.800 --> 01:18:53.700
Ansgar Dietrichs: I can see your screen. Yes.

512
01:18:54.620 --> 01:19:01.941
Zsolt Felföldi: Then present slash show. All right. It's just so that I remember my talking points. So what I want to present is

513
01:19:02.440 --> 01:19:15.307
Zsolt Felföldi: this eip I've been working on since, like, I don't know last year, September. So, but actually, this is a problem I wanted to solve since a very long time. It's about

514
01:19:15.720 --> 01:19:33.969
Zsolt Felföldi: like trustlessly proving log queries, and why I'm so interested in this, and why I think we should like pay attention to this like. Obviously, logs are important part of this, this whole ecosystem. And and this is just practically an unsolved problem to

515
01:19:34.050 --> 01:19:37.946
Zsolt Felföldi: to really prove

516
01:19:39.250 --> 01:20:03.140
Zsolt Felföldi: existence of logs, I mean, I mean, I mean the completeness of the of a response. And and even, I mean, even a full node needs to like, maintain external, like additional indexes to to do like like an efficient search. Because if we just want to scan all this like 500 GB of of receipts. Then it takes like, I don't know 20 min depending on the system to

517
01:20:03.190 --> 01:20:20.499
Zsolt Felföldi: to search in the entire 10 year log history. And yeah, there's also like other stuff on similar runs of problem. This transaction look up by hash. Also, we cannot really prove that a certain transaction is not canonical, because there's just no

518
01:20:20.500 --> 01:20:43.859
Zsolt Felföldi: index of them in the consensus. And yeah, in general, I'm really interested in making basically everything trustlessly provable. Because let's just say, now, endgame is like like a popular term. And and if we really want to make ethereum as we wanted, then I think, okay, for a while, we can live with this, this

519
01:20:44.665 --> 01:21:05.690
Zsolt Felföldi: suboptimal solutions. But in the end I think everything should be trustlessly provable. And 7, 7, 4, 5 does helps with that. It's it's something that obviously, it's a little bit more complex than the per block bloom theaters, but it can replace the the per block bloom. Theaters, which are totally useless now.

520
01:21:05.870 --> 01:21:11.900
Zsolt Felföldi: And this allows actually, really efficient lookup.

521
01:21:12.220 --> 01:21:27.929
Zsolt Felföldi: And yeah, so so let me just quickly and high level what I how I wanted to achieve this and and what are like the the issues so like, like currently, what we have is a linear index which is obviously really cheap to append, very expensive to look up

522
01:21:28.670 --> 01:21:35.365
Zsolt Felföldi: also like like a history expiry is easy to do. But yeah, it's like, absolutely

523
01:21:36.640 --> 01:21:48.780
Zsolt Felföldi: too slow and too expensive to do, and also, like another approach, is like putting all the all these, these lookup events in a big merco tree, just like the State, which will

524
01:21:48.780 --> 01:22:06.880
Zsolt Felföldi: pretty much cost the same as the state and logs. Were. I really like logs, by the way, so I think it's a really good idea that to have this this thing that contrast cannot access directly, but they are like significantly cheaper to add than state entries.

525
01:22:06.950 --> 01:22:15.399
Zsolt Felföldi: And yeah, so we also, for, like the lookup data structure, I wanted to just find something kind of in the middle.

526
01:22:15.790 --> 01:22:20.370
Zsolt Felföldi: So what I came up with is is

527
01:22:20.480 --> 01:22:34.479
Zsolt Felföldi: basically it's not a bloom theater anymore. It's still a probabilistic search structure. You can imagine it as as a as a series of sparse, two-dimensional bitmaps, which are then

528
01:22:34.910 --> 01:22:41.529
Zsolt Felföldi: 3 hashed also into a fixed size lookup trees. And this whole thing is

529
01:22:42.100 --> 01:22:50.340
Zsolt Felföldi: tree hashing kind of a smart, smart way. So that I mean updating this, this structure is is cheap, because

530
01:22:50.460 --> 01:23:01.839
Zsolt Felföldi: the latest map that's being filled with with this, this probabilistic lookup entries is kind of small. So for maintaining the the consensus

531
01:23:02.518 --> 01:23:17.279
Zsolt Felföldi: data so minimal data structure needed for consensus generation is something like 20 something megabytes. It's it's like very convenient, if it's into memory also, like. So it's obviously, if it's memory that's also cheap to add, and everything.

532
01:23:17.420 --> 01:23:18.500
Zsolt Felföldi: And

533
01:23:19.050 --> 01:23:39.960
Zsolt Felföldi: but still, these these maps, because they have this is trees, because they have fixed size. They can organize in a way that look up for a single event, for longer stretch of blocks is is efficient, both the database exercise wise, but and also Merkel proof

534
01:23:40.540 --> 01:24:04.635
Zsolt Felföldi: wise. So so, yeah, this is, this is basically a general general purpose hash lookup table. But it also gives a very an exact position of where this event happens. So it's also suitable for pattern matching with log address and topic and topic. But it's also suitable for looking up transactions and everything it. It can also give like exclusion proof if the if the event is not present. And

535
01:24:05.360 --> 01:24:22.280
Zsolt Felföldi: and yeah, another important thing is that, unlike the per block bloom theaters. This designer puts a fixed number of events in each of these maps, and therefore the density of the maps is constant. Therefore positive rates are

536
01:24:22.400 --> 01:24:31.380
Zsolt Felföldi: consistent, and also it, they depend kind of on the type of search pattern, but they don't depend on like the gas limits. So like it's it's it's

537
01:24:31.510 --> 01:24:35.160
Zsolt Felföldi: it's it works well with element scaling. And

538
01:24:37.111 --> 01:24:51.189
Zsolt Felföldi: yeah, also, the there was, I mean, there's 1 key problem that the Bloomfielders didn't solve. And also I found it like like a major issue, that these lookup keys, and were very, very uneven distribution. So

539
01:24:51.540 --> 01:25:01.739
Zsolt Felföldi: there are keys that happen like once in the lifetime of the chain. And there are certain keys that make up like more than 10% of

540
01:25:02.710 --> 01:25:11.610
Zsolt Felföldi: certain block, like he had certain esc 20 token contracts. And yeah, like, wrapped eater, very popular and stuff like that. So

541
01:25:13.400 --> 01:25:18.950
Zsolt Felföldi: yeah, obviously, I also wanted to come up with something that will fit the scaling end game.

542
01:25:19.380 --> 01:25:40.290
Zsolt Felföldi: And yeah, here, this is something that probably should be like, examine. So like like discussed further or or research further. But I believe it's most of the most of the work that has to be done as hashing. So yeah, I mean, we just have to. Currently, I'm I'm working with sha, too. But yeah.

543
01:25:40.530 --> 01:25:50.360
Zsolt Felföldi: any other hash function will work. And just, yeah, I want to quickly like, grab this whole thing. So the so the point is that

544
01:25:50.530 --> 01:25:52.509
Zsolt Felföldi: that for for a

545
01:25:52.860 --> 01:26:15.849
Zsolt Felföldi: like 10 year, history lookup typically depending on the complexity of the of the of the search, it requires, like one to 5 MB of data which is significantly better than 500 GB. And even if we want to, at 1 point zk proof like individual lookups, it was obviously still easier to work with lot, less data.

546
01:26:15.960 --> 01:26:27.507
Zsolt Felföldi: if security can make the be. The individual proofs even cheaper than because, like adding the new logs is, is a lot cheaper at the block generator, but on X than

547
01:26:28.380 --> 01:26:35.719
Zsolt Felföldi: then adding state entries, then it might be even viable option to just use logs and proof or logs. Yeah, it's yeah.

548
01:26:36.060 --> 01:26:44.830
Zsolt Felföldi: not want to go into this too much. And this is my last slide. Yeah. So thing is that this thing already exists, I mean.

549
01:26:45.000 --> 01:26:53.320
Zsolt Felföldi: in go ethereum. Currently the data structure exists. It's not in consensus, it doesn't calculate root hashes, and that don't generate

550
01:26:53.520 --> 01:26:59.780
Zsolt Felföldi: remote, trustless proofs yet, but it does serve work when serving it get logs.

551
01:27:00.150 --> 01:27:27.539
Zsolt Felföldi: And yeah, I already have some numbers. These are, this code is really not optimized yet. The database access patterns could be like way, but better so currently for like an entire 10 year history lookup, it's somewhere between a few 100 ms and like 5 seconds, maybe, if the disk is slow, that it can be more. But also, I think this could be optimized to like typically below one second look up for.

552
01:27:27.980 --> 01:27:31.200
Zsolt Felföldi: So it's it's and also with the remote proofs.

553
01:27:31.520 --> 01:27:38.680
Zsolt Felföldi: So I already know the amount of data that needs to be accessed and proven. So also for a for a trustless proof

554
01:27:38.940 --> 01:27:42.470
Zsolt Felföldi: or a light wallet. This would be something like

555
01:27:42.870 --> 01:27:54.909
Zsolt Felföldi: 5, 10 MB of data. Worst absolute worst case, for like 10 years of history, but for like a last year, look up of a single wallet, it will be typically more like a few 100 kB.

556
01:27:55.070 --> 01:27:58.059
Zsolt Felföldi: And yeah, so so the

557
01:27:58.230 --> 01:28:25.390
Zsolt Felföldi: you can already look at like some parts of this. This implemented in goiter, master branch, or slash filter maps package also, we just set up a proof of concept single node devnet with Ethan and and nimbus guys. And also I have a have a proof of concept, prover and verifier for for remote query proofs.

558
01:28:25.670 --> 01:28:31.270
Zsolt Felföldi: This is still like working progress. And yeah, this whole.

559
01:28:31.270 --> 01:28:37.659
Ansgar Dietrichs: Yeah, maybe in the interest of time, just jumping in because we only have 5 min left. And Ethan also wanted to give a presentation. If you could

560
01:28:37.760 --> 01:28:39.950
Ansgar Dietrichs: try to wrap up.

561
01:28:40.260 --> 01:28:53.730
Zsolt Felföldi: Yeah, this is this is, I practically did. So, yeah, right now, I've I'm just so my current focus is just just containing the complexity and making it something that's

562
01:28:53.850 --> 01:29:01.739
Zsolt Felföldi: that will be easy to implement. And yeah, I think this is pretty much it. I just wanted to introduce this

563
01:29:02.160 --> 01:29:04.980
Zsolt Felföldi: this eip. And yeah, that's it. Thank you.

564
01:29:04.980 --> 01:29:11.172
Ansgar Dietrichs: Yeah, no, thank you very much. Actually, I think it makes a lot of sense. Do we have comments on on the cip already?

565
01:29:11.580 --> 01:29:12.430
Ansgar Dietrichs: Luke.

566
01:29:12.910 --> 01:29:24.689
Łukasz Rozmej: One comment from me is that it looked. I took a look this week, and it looked extremely complex for me. I didn't. To be honest, I didn't understand it correctly, even though I tried.

567
01:29:24.710 --> 01:29:48.650
Łukasz Rozmej: And I know. So yeah, my, my like main potential reason is complexity. And okay, you you have here to improve specs, to to reduce complexity. Maybe that will help, and the second one is that it will compete with all the other things. So I'm not sure if we can prioritize it from Amsterdam. But that's a different problem.

568
01:29:50.230 --> 01:29:50.730
Zsolt Felföldi: Yeah.

569
01:29:50.730 --> 01:30:03.549
Zsolt Felföldi: complexity is definitely main challenge. But the consensus generation code is currently under a thousand lines. The eip is obviously not a easy read. But I'm willing, like, I'm working on that. So yeah.

570
01:30:03.800 --> 01:30:05.950
Zsolt Felföldi: this is currently at this stage. And

571
01:30:06.320 --> 01:30:08.949
Zsolt Felföldi: yeah, it should be made more approachable. Obviously.

572
01:30:12.460 --> 01:30:27.399
Ansgar Dietrichs: Sounds good and just to clarify. I think my understanding is that this is not a proposal for a headliner for Glam Saddam. So more a general eip that then can be slotted in either Glamsterdam or future fork. If we have agreement that we want to do this, and if there's room. So this is not a headliner proposal specifically.

573
01:30:28.000 --> 01:30:42.530
Ansgar Dietrichs: and we only have 3 min left of official time. I'm sure we could run 2, 3 min over. But, Eaton, I'm not sure if you would still want to briefly talk about your headline proposal now, or if you then want to maybe push this to next acde up to you.

574
01:30:42.530 --> 01:30:46.425
Etan (Nimbus): I don't know. I can. I can try but

575
01:30:47.390 --> 01:30:49.945
Etan (Nimbus): I need to be able to share my screen.

576
01:30:50.230 --> 01:30:52.240
Ansgar Dietrichs: Yes, so if you could.

577
01:30:52.440 --> 01:30:53.180
Ansgar Dietrichs: N.

578
01:30:53.565 --> 01:30:58.194
Etan (Nimbus): Can you end your screen share, and then I can do mine.

579
01:30:58.820 --> 01:31:03.440
Etan (Nimbus): so my proposal is about the 7, 9, 1, 9, the period.

580
01:31:04.220 --> 01:31:18.379
Etan (Nimbus): Let me see Mac OS is keeping me. I have to rejoin the call.

581
01:31:19.590 --> 01:31:21.659
Etan (Nimbus): Let me let me quickly do it.

582
01:31:23.780 --> 01:31:27.289
Ansgar Dietrichs: If you have a link to share in the Zoom chat, I'm sure someone else could also share screen.

583
01:31:35.230 --> 01:31:38.719
Etan (Nimbus): Okay, I'm back. And now this one.

584
01:31:40.460 --> 01:31:41.579
Ansgar Dietrichs: Can see your screen.

585
01:31:42.190 --> 01:31:52.029
Etan (Nimbus): You can see my screen now, right? Okay. So it goes into the same direction. That we essentially want to solve this problem that wallets have

586
01:31:52.250 --> 01:31:53.730
Etan (Nimbus): that today.

587
01:31:53.880 --> 01:32:13.100
Etan (Nimbus): It's very difficult to use an Rpc in a trust minimized way. That's a security problem, because the Rpc can lie to you by accident because they got hacked or due to misconfiguration software box today. There is this Eastgate proof

588
01:32:13.100 --> 01:32:25.179
Etan (Nimbus): Eip, that solves it like for the balances. And you can also run your own evm against it. But there are some things that just don't work. For example, Eth transfers.

589
01:32:25.410 --> 01:32:45.480
Etan (Nimbus): They are not part of the logs. You actually have to do a trace, call on every single transaction, and subscribe to an external indexing service. If you are in exchange, otherwise there is no way how you can find out that a user deposited to you that's affecting smart contract wallets.

590
01:32:45.710 --> 01:32:55.179
Etan (Nimbus): Similar problem for beacon withdrawals. You don't really know in what block, you got a withdrawal, so you cannot really verify that easily.

591
01:32:55.290 --> 01:32:57.380
Etan (Nimbus): and the priority fees.

592
01:32:57.954 --> 01:33:09.239
Etan (Nimbus): Then the other problem is the completeness for the eth logs. Like. You can prove that a log happened. But you don't know if the server provided everything to you.

593
01:33:09.240 --> 01:33:29.109
Etan (Nimbus): And sometimes there are these bugs where logs are missing here on alchemy is one of the biggest providers. It took over a day, and during that time the wallets just could not access any logs, and you also cannot just fall back to an alternative. Rpc, because then you have to trust that Rpc. Right?

594
01:33:29.230 --> 01:33:57.260
Etan (Nimbus): Then another complaint that I get from wallets a lot is that the receipts are extremely inefficient to prove like there is no from address. There is no contract address, no authority. There is like this Rpc. Field of the log index within the block for which you essentially have to download all the receipts there is the gas used like on chain. We have cumulative gas used. But if you want actual gas used, you need to download the prior receipt as well.

595
01:33:57.530 --> 01:34:00.409
Etan (Nimbus): and we also have this logs bloom field.

596
01:34:00.770 --> 01:34:16.699
Etan (Nimbus): and if you want to verify the logs bloom, you have to download all the logs as well. So it's kind of pointless to have it there because of this linear hash that we use for the receipts for transactions. It's similar that we have, like

597
01:34:16.700 --> 01:34:34.670
Etan (Nimbus): 3 different hashes here, and then a 4th one in the Cl based on the serialization. And the actually important hash transaction hash is not actually on chain, like the one that users use on our Pcs. All the time we don't commit to it because it lacks this mpt prefix

598
01:34:35.850 --> 01:34:54.399
Etan (Nimbus): and also the verifiers have to keep updating their code because of all these transaction types that have a lot of legacy stuff like we added these access lists, and the only reason why we have them is for users to unstock their funds on a

599
01:34:54.450 --> 01:35:09.900
Etan (Nimbus): contract that did not respond well for gas repricing, so they need a way to lower the gas cost so they can still get their funds out. And we also have these fields that are added in the middle. So the verifiers have to keep getting updated for every new transaction type.

600
01:35:10.620 --> 01:35:40.500
Etan (Nimbus): And yeah, pure tries to solve these concerns. The minimal scope is like Schultz log index. That one gives us completeness proofs. It gives us the ability to efficiently search proofs within like one request. Then we also need to log all the internal East transfers. That's like extra information that we extract from the evm, but we don't have to change how the evm works or how it prices things.

601
01:35:40.500 --> 01:35:47.299
Etan (Nimbus): And then, like, essentially, when we hash transactions, try root and receipts, try root. We use Ssc.

602
01:35:47.370 --> 01:36:10.360
Etan (Nimbus): and when we process an execution, payload or build one, then we use Ssc encoding. That's not that big of a deal, because nothing of the rest has to change like the guest, can still use its same transaction object internally, it has Rlp encoding, it has Json encoding. We just add a 3rd one ssc. Encoding. And when we interact over the engine, we use that

603
01:36:11.550 --> 01:36:26.349
Etan (Nimbus): and Ssc gives us also benefits. When, for example, we want block label access lists because we can just summarize it to the hashtree route, so we can drop the pre finalized access lists that are already executed.

604
01:36:26.630 --> 01:36:36.819
Etan (Nimbus): and likewise for epbs and fossil, and they move stuff around on the Cl side. So adding the stability there for Ssc also makes sense.

605
01:36:37.490 --> 01:37:03.749
Etan (Nimbus): And yeah, like for the 3 core pillars of ethereum. Ux. l. 1. Scaling l. 2. Scaling. We improved the security. That means that now we can ask any Rpc. Not just trusted ones. That also means we can use anonymous access over like decentralized networks, such as Tor. Otherwise it's like accessing a website without https over Tor, where the exit node can scan you.

606
01:37:03.840 --> 01:37:23.449
Etan (Nimbus): and then we also get rid of those external indexers that are needed to track east transfers. So they're quite expensive. So getting rid of them reduces cost for projects this new log index from scholt it scales to arbitrary gas limit, including gigas. It will not become inefficient, like the current logs bloom.

607
01:37:23.450 --> 01:37:39.569
Etan (Nimbus): we get better. Rpc. Latency that reduces cost. Further, it means that Ux is much faster, especially in a scaling world. Also, like these receipts. Networking change would be trivial with Ssc. Because it can prove inclusion more easily.

608
01:37:39.570 --> 01:38:06.679
Etan (Nimbus): and for the L. 2 s. Essentially, many of them are forks of l. 1 code, so they benefit by inheriting the changes, and it also means that when an L. 2 event has to be proven on l. 1, that it needs lower gas cost, because you don't have to send the full receipt anymore which can actually exceed the call data size. That was something that brought up from optimism back then, was

609
01:38:07.020 --> 01:38:08.859
Etan (Nimbus): also asking for.

610
01:38:08.980 --> 01:38:19.070
Etan (Nimbus): yeah, like, this is the proposal, like the pure is to focus really on Ux, so that it makes sense to use a theorem in a trust minimized way.

611
01:38:20.151 --> 01:38:28.929
Etan (Nimbus): It's not a either, or it goes really well with the other headliners that have already been proposed. Yeah, that's that's my presentation.

612
01:38:31.160 --> 01:38:38.530
Ansgar Dietrichs: Perfect. Given that we're already above 5 min, we probably don't have much time for discussion. If there's like one question or something, we could briefly take it

613
01:38:40.530 --> 01:38:44.769
Ansgar Dietrichs: otherwise, of course, the idea is, anyway, that these headliners will be discussed at a later date.

614
01:38:47.080 --> 01:38:59.330
Ansgar Dietrichs: Okay? Well, then, thank you. Eaten. And in general. Thank you. Everyone for this call. Quite happy. We have all the decisions now for 2, and more or less for Devin. 3.

615
01:38:59.740 --> 01:39:03.920
Ansgar Dietrichs: thank you all, and can't wait for Tim to take back over awesome.

616
01:39:04.363 --> 01:39:06.580
Etan (Nimbus): By the way, thank you.

617
01:39:06.810 --> 01:39:07.430
Ansgar Dietrichs: Thank you.

618
01:39:08.390 --> 01:39:09.809
jochem-brouwer: Great job. Thank you.

