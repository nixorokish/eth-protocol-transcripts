00:07:02	nixo:	gm
00:07:12	Justin Traglia:	Gm
00:07:26	felix (eest):	hearing loss from THIS MEETING IS BEING RECORDED
00:07:38	nixo:	Reacted to "hearing loss from TH..." with 😂
00:07:49	Justin Traglia:	Reacted to "hearing loss from TH..." with 😂
00:07:50	Katya Riazantseva:	Replying to "Gm"

gm
00:07:56	spencer-tb:	Reacted to "hearing loss from TH..." with 😂
00:07:58	Pooja Ranjan:	Reacted to "hearing loss from TH..." with 😂
00:07:58	Mario Vega:	Reacted to "hearing loss from TH..." with 😂
00:08:05	Kamil Chodoła:	Hi!
00:08:13	Katya Riazantseva:	Reacted to "hearing loss from TH..." with 🔥
00:08:49	Louis:	Reacted to "hearing loss from TH..." with 😂
00:08:58	Louis:	Replying to "Hi!"

Hi!
00:10:31	Parithosh Jayanthi:	notes.ethereum.org/@ethpandaops/fusaka-devnet-3
00:10:46	Parithosh Jayanthi:	Reacted to "hearing loss from TH..." with 😂
00:11:18	Mario Vega:	https://github.com/ethereum/execution-spec-tests/releases/tag/fusaka-devnet-3%40v1.0.0
00:11:18	Ben Adams:	Is the modexp x3 in devnet-3?
00:11:33	Marius van der Wijden:	Replying to "Is the modexp x3 in ..." 

 Y
00:11:40	Ben Adams:	Reacted to "Y" with 👍
00:11:43	Parithosh Jayanthi:	Replying to "Is the modexp x3 in ..."

Yes dev3 is ideally spec freeze
00:12:56	Parithosh Jayanthi:	https://github.com/ethereum/execution-apis/pull/674
00:13:04	Parithosh Jayanthi:	https://github.com/ethereum/builder-specs/pull/123
00:13:04	stokes:	builder specs PR is ready to merge unless anyone has a question today
00:13:41	Gabriel Trintinalia | Besu:	Besu ready, pending getBlobsV3, with have a PR for it ready
00:13:46	Marius van der Wijden:	Geth: ready (except the config endpoint)
00:13:47	Roman:	reth has a branch minus eth_config & get blobs v3
00:13:59	milen | Erigon:	Erigon ready without getblobsv3
00:14:04	pawan:	Lighthouse is ready too, fixing some performance issues
00:14:18	Ben Adams:	Nethermind ready
00:14:50	Saulius Grigaitis | Grandine:	Grandine seems ready
00:14:50	Justin Traglia:	On the CL spec side, not much has changed for Fusaka; alpha.3 is still the latest release. There’s been a considerable amount of work for EIP-7732 and EIP-7805 the past week.
00:14:52	nflaig:	Lodestar is ready, just missing v2 builder api
00:15:56	Raúl Kripalani:	since most ELs have getBlobsV3 ready and there's nothing to do for CLs, should we go ahead and merge the PR?
00:16:00	Gabriel Trintinalia | Besu:	What about getBlobsV3? is it happening?
00:16:52	Raúl Kripalani:	EL devs can you react here if you're good to merge the getBlobsV3 engine api spec change?
00:17:15	Gabriel Trintinalia | Besu:	Reacted to "EL devs can you reac..." with 👍
00:17:56	Saulius Grigaitis | Grandine:	Does this test tool test only happy case?
00:18:09	Parithosh Jayanthi:	Replying to "Does this test tool ..."

Rpc testing tool? Yes, its a benchmark tool
00:18:28	Parithosh Jayanthi:	Replying to "Does this test tool ..."

Sync test tool is also happy case for now, since we are missing this data for 2x mainnet or significantly larger state
00:19:29	Marcin Sobczak:	EIP-7883 ModExp Comprehensive Analysis Report:https://github.com/nerolation/eth-7883-analysis/blob/master/eip7883_comprehensive_analysis.mdEIP-7883 Entity Impact Analysis (Updated):https://github.com/nerolation/eth-7883-analysis/blob/master/eip7883_entity_analysis.md
00:21:44	Kamil Chodoła:	Nethermind - will report issue and want to add a metric for that
00:22:14	Parithosh Jayanthi:	Can you guys please post metrics updates async on chat when its included?
00:22:18	Parithosh Jayanthi:	Ideally in the performance branch
00:22:19	Dustin:	Replying to "EL devs can you re..."

it doesn't really matter if it's merged, if it's not tested. if it's not tested in a devnet-like environment it doesn't exist in a guaranteed way in Fusaka, from at least a Nimbus CL perspective
00:22:48	Marius van der Wijden:	Reacted to EL devs can you reac... with "👍"
00:23:23	Ben Adams:	Replying to "Ideally in the perfo..."

All our branches are a performance branch ;)
00:23:28	Parithosh Jayanthi:	Reacted to "All our branches are..." with 🔥
00:23:49	Mario Vega:	Reacted to "All our branches are..." with 🔥
00:23:54	CPerezz:	https://hackmd.io/boZCC4eNR66zN3m9VDYFWQ
00:25:06	Ben Adams:	Reacted to "EL devs can you reac..." with 👍
00:25:32	Dustin:	Replying to "EL devs can you re..."

I don't care how simple this looks, etc, this is how Holesky died
00:26:39	Kamil Chodoła:	All the changes to "performance" branches are automatically populated to op-codes benchmarking, perfnet and bloatnet so make sure to update it regularly (with experimental perf changes + rebasing to master whenever needed)
00:26:58	Parithosh Jayanthi:	Reacted to "All the changes to "..." with ❤️
00:27:21	Ameziane Hamlat:	Reacted to "All the changes to "..." with ❤️
00:27:36	marek:	Reacted to "All our branches are..." with 🔥
00:27:39	Ameziane Hamlat:	Reacted to "EIP-7883 ModExp Comp..." with 👍
00:27:44	marek:	Reacted to "All the changes to "..." with ❤️
00:28:20	Francesco:	At the point when CLs (say in 6 months) want to introduce it and use it, it would be tested, no?
00:28:56	Dustin:	Holesky's changes were simple too
00:28:58	Dustin:	so simple
00:29:19	Marius van der Wijden:	We can't do an off-cycle release, if we don't ship it in fusaja releases, we will only merge it in glamsterdam
00:30:01	pawan:	Replying to "We can't do an off-c..."

Why? That’s how we did it for GetBlobsv1
00:30:08	Francesco:	Reacted to "Why? That’s how we d..." with 👍
00:30:11	kasey:	Replying to "At the point when CL..."

I think the concern is that if ELs release at Fusaka with this API, we would need to test with versions of the EL released at fusaka. CL releases that flip the switch to use this wouldn’t know if they are running against a tested EL pair.
00:30:18	draganrakita:	Reacted to "Why? That’s how we d..." with 👍
00:31:29	pawan:	Replying to "We can't do an off-c..."

Also, to note, this is for an unproven optimization. getBlobsV1 was prototyped and first made sure it worked before all clients eventually implemented it
00:31:31	spencer-tb:	Reacted to "All our branches are..." with 🔥
00:31:38	Marius van der Wijden:	Replying to "We can't do an off-c..." 

 Hmm I guess. I think requiring el and cl updates at the same time between hfs is very messy
00:31:43	Dmitrii Shmatko:	Reacted to "Also, to note, this ..." with 👍
00:33:34	Francesco:	We should not defer discussion, we said last time we would make a decision
00:33:35	Csaba:	BPOAALB (BPO And A Little Bit)?
00:33:40	Francesco:	And it’s been going on for weeks, we should just make a decision
00:33:44	spencer-tb:	Reacted to "BPOAALB (BPO And A L..." with 😆
00:33:46	Dmitrii Shmatko:	Reacted to "BPOAALB (BPO And A L..." with 😆
00:33:49	Francesco:	Replying to "And it’s been going ..."

(months?)
00:33:51	felix (eest):	Reacted to "BPOAALB (BPO And A..." with 😆
00:35:31	Dustin:	If ELs ship getBlobsV3 now, and then at some point between now and when it's needed, those tests do happen, that can work, in pure testing consideration terms.

i.e. they're not trusted yet, but it might be, retroactively, later
00:35:45	Mario Vega:	Reacted to "If ELs ship getBlobs..." with 👍🏼
00:36:07	Dustin:	I agree regarding process considerations though, this is ... messy
00:36:19	Parithosh Jayanthi:	Yeah lets make a decision today please
00:36:41	Matthew Keil:	Agreed.... If there is not consensus it needs to be postponed
00:36:45	Raúl Kripalani:	Reacted to "Yeah lets make a dec..." with 👍
00:37:19	stokes:	afaik process wise we should be ok, we should just make a decision today
00:37:26	Dustin:	And, importantly, testing process with the first Fusaka-related versions of each EL, not the current versions
00:38:23	Francesco:	Right, I think the “don’t merge” decision should actually be to do getBlobsv2 as the CLs have it now (as in the PR) but not getBlobsv3
00:38:32	stokes:	Reacted to "Right, I think the “…" with 👍
00:38:35	Raúl Kripalani:	Reacted to "Right, I think the “..." with 👍
00:38:39	Dustin:	Reacted to "Right, I think the ..." with 👍
00:38:55	Parithosh Jayanthi:	Reacted to "Right, I think the “..." with 👍
00:39:04	Phil Ngo:	Reacted to "Right, I think the “..." with 👍
00:39:09	pawan:	Reacted to "Right, I think the “..." with 👍
00:39:23	Dmitrii Shmatko:	Reacted to "Right, I think the “..." with 👍
00:39:33	Raúl Kripalani:	so revert this? https://github.com/ethereum/execution-apis/pull/671
00:39:37	stokes:	Replying to "so revert this? http…"
yep
00:39:39	Gabriel Trintinalia | Besu:	getBlobsv2, allowing partial response or not?
00:40:04	Gabriel Trintinalia | Besu:	all or nothing, okay
00:40:09	Manu:	Replying to "getBlobsv2, allowing..."

Prysm: currently all or nothing
00:40:10	Dmitrii Shmatko:	Reacted to "yep" with 👍
00:40:21	stokes:	we want v2 to have the behavior in any world moving forward
00:40:23	Matthew Keil:	Agreed Mario
00:41:36	Kamil Chodoła:	Maybe a bit to early as 45MGas just hit but shall we more openly discuss 60MGas increase and what we need to do to achieve that even before Fusaka?
00:41:43	Parithosh Jayanthi:	Reacted to "Maybe a bit to early..." with 👍🏽
00:41:54	Parithosh Jayanthi:	Replying to "Maybe a bit to early..."

Sure, depends on what section of the call its appropriate for
00:42:28	Marius van der Wijden:	I think safe head should become the default for most applications that currently use finalized
00:43:08	Parithosh Jayanthi:	Sorry for the out of band msg, but what’s the opinion on the builder PR? https://github.com/ethereum/builder-specs/pull/123 

Can we merge it? Or any open discussion topics?
00:44:58	Mario Vega:	Reacted to "Sure, depends on wha..." with 👍🏼
00:45:32	pawan:	Replying to "Sorry for the out of..."

Do all relays/mevboost support v2 already? How do we check support for v2 before calling it?
00:46:18	Parithosh Jayanthi:	Replying to "Sorry for the out of..."

@Bharath ?
00:46:40	Bharath:	Replying to "Sorry for the out of..."

We have work undergoing in the flashbots relay to implement the v2: https://github.com/flashbots/mev-boost/pull/809

https://github.com/flashbots/mev-boost-relay/pull/746

Which should hopefully be done soon
00:46:48	Justin Traglia:	Reacted to "We have work undergo..." with 👍
00:47:01	Francesco:	Reacted to "I think safe head sh..." with 👍
00:47:13	pawan:	So when we implement it, do we call v2 by default and fallback to v1 if some particular error?
00:47:37	Bharath:	Replying to "Sorry for the out of..."

Other relay operators like Ultrasound and Titan are aligned with the v2 APIs. We will reach out to them to ensure that they have implemented it.
00:47:57	Bharath:	Replying to "Sorry for the out of..."

For devnet-3, we will get the v2 api implemented in the flashbots relay so we can test it over there
00:48:11	Francesco:	16-32x faster 😄
00:48:11	pawan:	Replying to "Sorry for the out of..."

I’m not clear when we start using it. Is it when fusaka activates?
00:48:25	Bharath:	Replying to "Sorry for the out of..."

yes
00:48:29	Justin Traglia:	Reacted to "yes" with 👍
00:48:32	pawan:	Reacted to "yes" with 👍
00:48:33	Bharath:	Replying to "Sorry for the out of..."

The v1 will be deprecated with Fusaka
00:48:38	nflaig:	Reacted to "yes" with 👍
00:48:38	Bharath:	Replying to "Sorry for the out of..."

And v2 should be used.
00:49:09	pawan:	Replying to "Sorry for the out of..."

Sounds good, will get this done today
00:49:19	Justin Traglia:	Reacted to "Sounds good, will ge..." with 🔥
00:49:27	Bharath:	Replying to "Sorry for the out of..."

We will implement with the flashbots mev-relay and meg-boost. We can’t test it out with other clients cuz their code is closed sourced anyways.
00:49:30	Francesco:	Reacted to "Sounds good, will ge..." with 🔥
00:49:36	Bharath:	Replying to "Sorry for the out of..."

We should aim to get it for devnet-3
00:49:49	Bharath:	Replying to "Sorry for the out of..."

I mean relays*
00:49:52	Bharath:	Replying to "Sorry for the out of..."

Not clients
00:49:59	Bharath:	Reacted to "Sounds good, will ge..." with 🔥
00:50:03	terence:	I think the current safe block hash definition is vague enough such that CL client (node operator) can be passed (ie. justified, unrealized justified.. fast confirm...)  

"safeBlockHash: DATA, 32 Bytes - the "safe" block hash of the canonical chain under certain synchrony and honesty assumptions. This value MUST be either equal to or an ancestor of headBlockHash"
00:50:25	Parithosh Jayanthi:	Reacted to "Sounds good, will ge..." with 🔥
00:50:36	Bharath:	Replying to "Sorry for the out of..."

Hope that’s clear.
00:50:38	Mikhail Kalinin:	Reacted to "I think the current ..." with 👍
00:50:39	Francesco:	Reacted to "I think the current ..." with 👍
00:50:56	Marius van der Wijden:	Reacted to I think the current ... with "👍"
00:51:15	pawan:	Reacted to "Hope that’s clear." with 👍
00:51:17	Marius van der Wijden:	We should discuss with rpc providers though tbh
00:52:07	Dustin:	also, SSZ is fine, but doesn't 123 as-is mean that there's no real "scaling" concern with JSON anymore?
00:53:27	Mikhail Kalinin:	Reacted to "We should discuss wi..." with 👍
00:53:41	stokes:	Replying to "also, SSZ is fine, b…"
it removes the main bottleneck for sure
00:54:34	nflaig:	Replying to "also, SSZ is fine, b..."

the response was never a concern at least for me but network failures trying to submit blinded block to relay because you can't fallback at this point to local block
00:55:18	Ben Adams:	CLZ is a single stack opcode like NEG; so much lighter than MULOnly issue is timing
00:55:22	Marius van der Wijden:	Why don't we have real benchmarks for this yet?
00:55:47	Dustin:	Replying to "also, SSZ is fine,..."

yes, none of the currently proposed changes fix that though @nflaig
00:55:55	Marius van der Wijden:	I would prefer not to change it, very late in the process
00:56:05	Mario Vega:	Reacted to "I would prefer not t..." with 👍🏼
00:56:43	spencer-tb:	Could it be < 3 (not a heart) in Glamsterdam? If so then I think we should wait until then!
00:56:52	Dustin:	Replying to "I would prefer not..."

at least, if it's changed, then make sure every EL by first testnet has implemented it uniformly
00:57:01	felix (eest):	Reacted to "Could it be < 3 (n..." with ❤️
00:57:10	Parithosh Jayanthi:	Reacted to "at least, if it's ch..." with 👍🏽
00:57:24	Parithosh Jayanthi:	Reacted to "Could it be < 3 (not..." with ❤️
00:57:57	Ben Adams:	Replying to "Could it be < 3 (not..."

potentially repricing a lot of opcodes in Glamasterdam; so could fit there
00:58:26	Raúl Kripalani:	to close the loop on getBlobsV3:
closed the PR
opened one to make V2 all-or-nothing again, in case ppl here want to review quickly
00:58:34	Parithosh Jayanthi:	Reacted to "to close the loop on..." with 👍🏽
00:58:41	Marius van der Wijden:	Our opAdd: 8ns opCLZ: 48ns
00:58:42	kev:	How do we know 5 is safe?
00:58:45	jochem-brouwer:	Heeft gereageerd op "potentially repric..." met 👍
00:58:55	jochem-brouwer:	Heeft gereageerd op "Our opAdd: 8ns opC..." met 👍
00:58:55	Francesco:	Reacted to "to close the loop on..." with 👍🏽
00:59:19	Dustin:	they all sound arbitrary
00:59:26	Ben Adams:	Replying to "How do we know 5 is ..."

you could examine every byte individually and it would still probably be faster than MUL
00:59:39	Ben Adams:	Reacted to "Our opAdd: 8ns opCLZ..." with 👀
00:59:48	Mario Vega:	Reacted to "Our opAdd: 8ns opCLZ..." with 👀
01:00:30	Ameziane Hamlat:	Reacted to "Our opAdd: 8ns opCLZ..." with 👀
01:00:53	nflaig:	Replying to "also, SSZ is fine, b..."

no, but my point is that ssz on the api was never meant to make the response faster as we already knew for long time that relays delay the response anyways artifically
01:01:47	kev:	Reacted to "you could examine ev..." with 👍
01:02:21	Mario Vega:	Reacted to "they all sound arbit..." with 👍🏼
01:03:38	Parithosh Jayanthi:	~85M I think?
01:05:00	jochem-brouwer:	Marius point about the refund is a good point, because you can have effective gas limit 20% higher if you max out the refunds
01:05:07	Ben Adams:	Replying to "~85M I think?"

yeah want eth/70 for fusaka so receipts won't be problem after
01:05:14	Csaba:	Doesn't the limit depend also on CL CPU usage changes?
01:05:16	Marius van der Wijden:	I would also like more data on state growth for 60M, hope that bloatnet can help us there
01:05:34	Parithosh Jayanthi:	Replying to "Doesn't the limit de..."

For post peerdas? Or what do you mean?
01:05:55	Parithosh Jayanthi:	Replying to "~85M I think?"

Isn’t it already included?
01:06:10	Ben Adams:	Replying to "~85M I think?"

on plan 🙂
01:06:16	Csaba:	Replying to "Doesn't the limit de..." 

 Exact. PeerDAS changes CPU
01:06:17	CPerezz:	Replying to "I would also like mo..."

One step at a time! 🙂 

Getting to 2x mainnet for now and gathering EL client’s info to come up with as many cases as possible. Any deadline in mind?
01:06:24	Parithosh Jayanthi:	Reacted to "Exact. PeerDAS chang..." with 👍🏽
