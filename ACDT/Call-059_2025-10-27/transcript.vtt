WEBVTT

1
00:02:23.250 --> 00:02:24.440
Akash | ECH: Hey, Mario.

2
00:02:26.340 --> 00:02:27.140
Mario Vega: Hello?

3
00:02:27.640 --> 00:02:31.960
Akash | ECH: I'm helping with the stream today, so please let me know whenever you are ready.

4
00:02:33.190 --> 00:02:34.879
Mario Vega: Absolutely. Thank you so much.

5
00:05:43.000 --> 00:05:50.270
Mario Vega: Hi, everyone. We'll give a few minutes more until more people join to start the stream.

6
00:07:16.660 --> 00:07:19.329
Mario Vega: I think we can get started, yep.

7
00:07:22.450 --> 00:07:23.420
Akash | ECH: Real life.

8
00:07:24.610 --> 00:07:26.040
Mario Vega: Excellent, thank you so much.

9
00:07:26.600 --> 00:07:29.830
Mario Vega: Good mor- good day, everyone, good morning.

10
00:07:30.210 --> 00:07:40.989
Mario Vega: This is ACDT number 59, today is October 27th, just let's get started. The first thing in the agenda is Fusaka.

11
00:07:41.130 --> 00:07:42.880
Mario Vega: So…

12
00:07:43.090 --> 00:07:57.159
Mario Vega: Sepolia, BPO fork. BPO1 fork happened last Monday. I wanted to touch upon that topic first. Do we have any… anything transcendental happening, during the update? Any updates? Any…

13
00:07:57.430 --> 00:08:03.450
Mario Vega: Yes, basically, anyone has any updates on that?

14
00:08:04.860 --> 00:08:15.119
Barnabas: Yeah, so as Mario said, BPO1 has happened a while ago now. We are now focusing on BPO2, which is, going to happen in 9 hours, and then,

15
00:08:15.370 --> 00:08:19.980
Barnabas: Later on the same day, we're going to have, the Hoodie fork as well.

16
00:08:20.180 --> 00:08:24.019
Barnabas: And then a week from now, we're gonna be looking at the BP01 on Hulu.

17
00:08:24.310 --> 00:08:28.709
Barnabas: So far, everything was, pretty calm.

18
00:08:33.340 --> 00:08:41.959
Mario Vega: Alright, thanks. From the client side, was there any occurrence or important thing to share?

19
00:08:42.750 --> 00:08:45.300
Mario Vega: That happened during the… in the passwords?

20
00:08:59.940 --> 00:09:03.650
Mario Vega: I'm guessing not. If that's the case,

21
00:09:03.840 --> 00:09:06.070
Mario Vega: We can… we can move on.

22
00:09:06.380 --> 00:09:08.720
Mario Vega: Alright.

23
00:09:09.130 --> 00:09:11.150
Mario Vega: The next thing is,

24
00:09:11.470 --> 00:09:18.689
Mario Vega: definite status updates, I have this on the agenda, but I don't think there's many things to share here either.

25
00:09:18.690 --> 00:09:30.279
Barnabas: Yeah, that's right. So, Devna 3, is still online. We have close to 100% participation. Couple of notes have run out of this guy. I'm just taking a look at cleaning them up. They should be good.

26
00:09:33.100 --> 00:09:40.379
Mario Vega: Alright. Do we have, like, a timeline, sorry, of how long are we keeping Devna 3?

27
00:09:41.670 --> 00:09:43.829
Barnabas: Oh, we were gonna do it till midnight.

28
00:09:44.150 --> 00:09:47.029
Barnabas: So… Another month, at least.

29
00:09:49.150 --> 00:09:51.449
Mario Vega: Alright, thanks. And…

30
00:09:51.610 --> 00:09:58.089
Mario Vega: Last topic on Fusaka is Hoodie, I think you already mentioned. Is there anything else of value that we can share today?

31
00:09:58.380 --> 00:10:00.250
Mario Vega: About tomorrow's activation?

32
00:10:00.650 --> 00:10:05.710
Barnabas: Just make sure that you update your notes, and try to be online as much as possible.

33
00:10:06.020 --> 00:10:08.509
Barnabas: We are expecting a smooth transition.

34
00:10:12.730 --> 00:10:15.969
Mario Vega: Excellent. Yeah, thanks so much.

35
00:10:16.400 --> 00:10:25.499
Mario Vega: Alright, with that out of the way, I think we can, quickly touch upon the Holesky, topic.

36
00:10:25.620 --> 00:10:30.830
Mario Vega: Because it's being deprecated, do we have, like, any update on that?

37
00:10:33.220 --> 00:10:39.739
Barnabas: I would just ask everyone to migrate away from Hosky as soon as possible, and yeah.

38
00:10:39.960 --> 00:10:46.460
Barnabas: come to Sepoli and come to Hudi, if you want to keep testing stuff, but we are expecting,

39
00:10:46.660 --> 00:10:53.650
Barnabas: OSC to start… to stop finalizing, maybe… Couple of hours from now.

40
00:10:57.740 --> 00:10:58.520
Mario Vega: Alright.

41
00:10:58.770 --> 00:11:09.660
Mario Vega: Thank you. So yeah, RIP Holesky, it's going down. So, yeah, please migrate away from this if you are still running on this chain.

42
00:11:09.810 --> 00:11:16.160
Mario Vega: Yeah, yeah, please just jump into Sepolia or Hudi, which is the… Place to test.

43
00:11:16.480 --> 00:11:19.290
Mario Vega: Yes… Min Hyuk.

44
00:11:19.630 --> 00:11:27.429
Minhyuk Kim: Hello guys, I'm Minya from Sunnyside. I was recently working with Optimism for the Fusaka Hard Fork on Sepolia.

45
00:11:27.480 --> 00:11:43.519
Minhyuk Kim: And previously, we could test upcoming forks on L2s with Holeski testnet, since it was scheduled before Sepolia forks, but with holeski being removed, we can no longer do that, because no other testnet is forking before Sepolia.

46
00:11:43.640 --> 00:11:55.349
Minhyuk Kim: And as far as I know, many L2s use Zepolia as their, like, production testnets, so it would be nice to have Hoodie to fork before Zepolia to be, yeah, DevNets.

47
00:11:56.600 --> 00:12:09.030
Minhyuk Kim: But, but like many L2, Optimism has, internal dev nets that are pointed towards, holistic as a longer-running network, so…

48
00:12:09.610 --> 00:12:17.369
Minhyuk Kim: it would be nice if we could have hoodie to Fork before Sepolia, if there isn't any, like, complications regarding this.

49
00:12:18.350 --> 00:12:26.109
Barnabas: So, we've been back and forth regarding this. The problem is that on Hudi, we had a lot more

50
00:12:26.600 --> 00:12:39.149
Barnabas: people, basically. So, a lot more users, from, staking operators to, external users, basically home stakers, home users, so we want to make sure that,

51
00:12:39.250 --> 00:12:49.329
Barnabas: we affect them the least. L2s can probably deploy on DevNet. L2s have the technical know-how, how to basically run a custom network.

52
00:12:49.570 --> 00:12:59.039
Barnabas: event. So, I think we should, we should try to minimize the downtime for homestakers versus the L2 operators.

53
00:13:03.400 --> 00:13:06.660
Minhyuk Kim: Got it, got it. I'll talk to them about this.

54
00:13:06.870 --> 00:13:07.710
Minhyuk Kim: Thank you.

55
00:13:10.460 --> 00:13:24.130
Marius van der Wijden: So, we encourage everyone to use Katosis for testing so that they can spin up their own testnets, but I guess… I know that Optimism already does this, but I think other tools should also.

56
00:13:24.230 --> 00:13:25.700
Marius van der Wijden: While they're testing this.

57
00:13:35.180 --> 00:13:36.040
Mario Vega: Thank you.

58
00:13:36.730 --> 00:13:40.120
Mario Vega: Alright. Any other comments on this?

59
00:13:51.120 --> 00:13:57.550
Mario Vega: Okay, yeah, thanks. Yeah, just to echo Barnabas, yeah, I think we should… if…

60
00:13:57.980 --> 00:14:03.240
Mario Vega: you are still testing on Holeshki, you should just move to Hootie and just redeploy.

61
00:14:03.340 --> 00:14:07.520
Mario Vega: And, yeah, this question has been back and forth many times already,

62
00:14:08.150 --> 00:14:23.840
Mario Vega: With regards of, like, Sepolia is the place to… is the place to test now, but yeah, if something breaks in Hoodie, it's gonna break also in Sepolia, and vice versa, so I think we should have, like, make this… this redundance of… of deployments, if possible.

63
00:14:26.160 --> 00:14:27.130
Mario Vega: Alright.

64
00:14:27.740 --> 00:14:30.679
Mario Vega: Or anything else on Fusaka?

65
00:14:32.000 --> 00:14:36.050
Mario Vega: From any of the client teams, or any other person involved.

66
00:14:45.870 --> 00:14:46.930
Mario Vega: Alright.

67
00:14:47.340 --> 00:15:04.970
Mario Vega: Yeah, if nothing else on Fusaka at the moment, we can jump into gas limit testing updates. We have only two topics here. The first one is the 60 million gas. Is there anything that was left here to discuss? I believe most of the clients have already

68
00:15:05.050 --> 00:15:10.830
Mario Vega: Launch the clients with the 60 million, gas default. If I'm mistaken, please speak up.

69
00:15:23.040 --> 00:15:29.709
Mario Vega: And one comment from Barnabas, who should be set to 60 million. Please confirm if that's the case.

70
00:15:39.220 --> 00:15:44.120
Mario Vega: And Camille mentions that this was the case for Netherlands from a long time ago.

71
00:15:49.270 --> 00:16:04.539
Mario Vega: Yeah, I think basically, yeah, the 60 million is the default, but to all the clients at the moment, so if that's not the case, please, let us know, and I think this should be an update from every client already. If that's not the case, please reach out.

72
00:16:10.110 --> 00:16:16.520
Mario Vega: Alright, if… No other comments on 60 million. I think we can…

73
00:16:16.850 --> 00:16:19.129
Mario Vega: Move on to the state test updates.

74
00:16:22.520 --> 00:16:25.739
Mario Vega: I see… who's in this call?

75
00:16:26.450 --> 00:16:27.520
Mario Vega: Camille?

76
00:16:28.830 --> 00:16:29.910
Kamil Chodoła: Yep, hi.

77
00:16:30.070 --> 00:16:43.979
Kamil Chodoła: So, from my end, for now, I was mostly focusing on making sure that after merging the support for stateful tests, there is nothing being broken, and in the meantime, I figured out one issue with compute tests.

78
00:16:44.350 --> 00:17:01.190
Kamil Chodoła: Right now, all of the compute tests are running fine, but we have some weirdness around some of the scenarios being faster after merging that than before, so I'm trying to figure out if this is actually the valid performance, or I messed something up. Hopefully not.

79
00:17:01.330 --> 00:17:21.050
Kamil Chodoła: And working with Luis now to get the latest version of those tests, to have everything on par with EST right now. And for stateful, yeah, very nice achievement last week was that I figured out how to overcome operational system caching for some paths from disk.

80
00:17:21.230 --> 00:17:37.329
Kamil Chodoła: Which gives very, very nice stability of tests. So we are testing, actually, the worst case possible, which is applicable, for example, for block building. And yeah, this gives us stability in results, so we have much better ways of comparing the results.

81
00:17:38.150 --> 00:17:46.570
Kamil Chodoła: And, yeah, still working out all of the scenarios, working with Carlos and Theohem on new cases, and also marching from our team right now.

82
00:17:46.820 --> 00:17:50.159
Kamil Chodoła: Analyzing possibilities to get new scenarios.

83
00:17:50.680 --> 00:17:52.529
Kamil Chodoła: into… in place.

84
00:17:58.280 --> 00:18:08.639
Mario Vega: Amazing. Thank you so much. There's an update on the weld, which I think directly affect you guys, but we are leaving that to the end.

85
00:18:08.870 --> 00:18:09.700
Mario Vega: Yes.

86
00:18:11.890 --> 00:18:19.080
Mario Vega: Anything else on gas limit testing, or state, tests, or compute tests?

87
00:18:20.000 --> 00:18:30.509
Kamil Chodoła: For compute tests only, that right now we are running those improved versions of compute tests, and some new bottlenecks have popped out. I already reached out to them directly.

88
00:18:30.900 --> 00:18:37.809
Kamil Chodoła: In Nethermind, we had one nasty one, but we are fixing it, like, right now, and have already fixed.

89
00:18:38.430 --> 00:18:39.670
Kamil Chodoła: So, yeah.

90
00:18:39.840 --> 00:18:49.899
Kamil Chodoła: But it's good that it's appearing, and we have an opportunity to fix that. Also, interesting thing, maybe for other teams to consider, is that we are creating a custom Docker file.

91
00:18:49.970 --> 00:19:04.910
Kamil Chodoła: Which is enabling very detailed tracing from the very beginning of the lifecycle of the software. So, we can simply start the client in that mode, and flash the traces after the shutdown.

92
00:19:04.990 --> 00:19:22.440
Kamil Chodoła: So it gives us, like, the full cycle, and we can just download the traces and analyze them straight away. So maybe this is something to consider to other EL client teams, to create such a specialized Docker image where we can build it, and they will have traces in the form they like the most.

93
00:19:22.530 --> 00:19:26.699
Kamil Chodoła: it already benefits Netarmine client, at least, quite a lot.

94
00:19:28.380 --> 00:19:32.839
Mario Vega: Do you have, like, a… Document or link that you can share so other.

95
00:19:32.840 --> 00:19:36.479
Kamil Chodoła: It's still on draft, but once we'll merge it, I will send it.

96
00:19:36.640 --> 00:19:44.869
Kamil Chodoła: Because this will be unique for every client team, as I believe. For example, we are using .trace, which is for .NET applications.

97
00:19:44.870 --> 00:19:50.939
Łukasz Rozmej: By traces here, I think Camille means profiling data.

98
00:19:50.940 --> 00:19:51.370
Kamil Chodoła: Yes.

99
00:19:51.370 --> 00:20:07.760
Łukasz Rozmej: So this is, so we are using tools dedicated for .NET for profiling, so we can not only, you know, track the performance, but actually dig deep into, like, you know, which method takes how much time, etc.

100
00:20:09.620 --> 00:20:14.559
Marius van der Wijden: Yeah, we also have this… oh, we had this for a long time, then we…

101
00:20:15.980 --> 00:20:17.970
Marius van der Wijden: Yes, you have to keep prof…

102
00:20:18.210 --> 00:20:22.459
Marius van der Wijden: PProf starts the PProf server, and you can basically start.

103
00:20:28.240 --> 00:20:30.390
Mario Vega: Maurice, we could barely hear you.

104
00:20:33.550 --> 00:20:37.660
Marius van der Wijden: Sorry, yeah, we also have this, dash dash p-prof ngot.

105
00:20:41.060 --> 00:20:51.229
Kamil Chodoła: No, that's nice to know. Yeah, so basically encouraging everyone to make something like this, either behind with flag or some custom Docker files, as we are doing in the Nevermind.

106
00:20:51.500 --> 00:20:52.489
Kamil Chodoła: So it's…

107
00:20:52.800 --> 00:21:06.609
Kamil Chodoła: making the effort much smaller, and also still analyze the possibility of using tools like Pyroscope, etc, to have those charts on Grafana. We have the first version of that, but it still doesn't work, like, ideally, so…

108
00:21:13.310 --> 00:21:14.120
Mario Vega: Thank you.

109
00:21:15.650 --> 00:21:18.930
Mario Vega: Alright. Any other comments on this topic?

110
00:21:28.070 --> 00:21:33.739
Mario Vega: And there was… there was one question about the EIP that bumps the blood gas limit.

111
00:21:33.880 --> 00:21:37.279
Mario Vega: And it was already answered in the chat, please take a look.

112
00:21:39.110 --> 00:21:50.249
draganrakita: On that topic, I think it would be valuable to have, like, a list of AIPs that we are sure that it… AIP that was mentioned is general gas repricing.

113
00:21:50.580 --> 00:22:01.619
draganrakita: But, maybe I'm not remembering this correctly, I thought that there were some pickup bars that we need to change the gas so we can bump the…

114
00:22:01.750 --> 00:22:03.969
draganrakita: The gas limit to 100 million.

115
00:22:07.460 --> 00:22:10.009
draganrakita: I was most, like, interested in those AIPs.

116
00:22:11.510 --> 00:22:14.839
Toni Wahrstätter: Yeah, I guess you're talking about the Modex group pricing, right?

117
00:22:18.370 --> 00:22:18.700
Marius van der Wijden: No.

118
00:22:18.700 --> 00:22:19.809
draganrakita: I think.

119
00:22:20.280 --> 00:22:25.289
Marius van der Wijden: I think you mean the stuff that we are not changing with Fusaka already, right? Like…

120
00:22:25.420 --> 00:22:26.770
Marius van der Wijden: For Glamps are done.

121
00:22:28.990 --> 00:22:37.989
Marius van der Wijden: And for Glamsterdam, the only one that really comes to mind for $100 million is possibly the EC ad, or.

122
00:22:37.990 --> 00:22:38.670
draganrakita: Nice to see you.

123
00:22:38.670 --> 00:22:40.220
Marius van der Wijden: Easily. Yeah.

124
00:22:40.220 --> 00:22:41.650
draganrakita: Yeah, you see it.

125
00:22:43.270 --> 00:22:44.280
Kamil Chodoła: But that's what I noticed.

126
00:22:44.700 --> 00:22:45.520
Kamil Chodoła: No.

127
00:22:45.700 --> 00:22:52.340
Kamil Chodoła: As far as I can tell, we were doing quite a lot of benchmarking and quite a lot of improvements through the landed over the time.

128
00:22:52.580 --> 00:22:56.729
Kamil Chodoła: And… it seems like it is above the… and a risky threshold.

129
00:22:57.280 --> 00:22:59.350
Kamil Chodoła: But we'll re-evaluate once more.

130
00:22:59.490 --> 00:23:00.540
draganrakita: Okay, okay.

131
00:23:01.010 --> 00:23:03.300
draganrakita: That's perfect. Thanks.

132
00:23:09.820 --> 00:23:10.650
Mario Vega: Excellent.

133
00:23:11.050 --> 00:23:12.750
Mario Vega: Alright.

134
00:23:13.140 --> 00:23:17.580
Mario Vega: With that, I think we can move to the next topic, which is Amsterdam.

135
00:23:18.160 --> 00:23:24.610
Mario Vega: So… Yeah, alright, we can start with the block access list updates. I think…

136
00:23:24.770 --> 00:23:32.210
Mario Vega: Rahul had one presentation that he wanted to showcase. Rahul, are you around?

137
00:23:33.800 --> 00:23:34.809
raxhvl: I am here.

138
00:23:36.020 --> 00:23:41.410
raxhvl: Yeah, in terms of updates, I think, we have a new…

139
00:23:41.540 --> 00:23:47.270
raxhvl: new release coming up, with about 20 test cases that covers Coinbase withdrawals.

140
00:23:47.460 --> 00:23:51.699
raxhvl: And some edge cases for… Storage and account access.

141
00:23:52.290 --> 00:23:55.169
raxhvl: But I also wanted to talk about,

142
00:23:56.110 --> 00:24:00.929
raxhvl: An interesting bug that came up, when we were testing block access lists.

143
00:24:01.640 --> 00:24:03.030
raxhvl: Let me share a mask.

144
00:24:12.980 --> 00:24:15.219
raxhvl: Okay, can you see the screen now?

145
00:24:17.210 --> 00:24:17.900
Mario Vega: Yes.

146
00:24:19.270 --> 00:24:30.470
raxhvl: Okay, so, yeah, like, I just wanted to highlight a certain bug that escaped, all three clients. We were testing, like, the very early phase of testing.

147
00:24:30.670 --> 00:24:36.279
raxhvl: And I just wanted to highlight a particular bug, that, that escaped.

148
00:24:40.780 --> 00:24:46.359
raxhvl: So, there were, like, two test cases that escaped,

149
00:24:46.920 --> 00:24:51.589
raxhvl: these three clients get another minor death. This is, like, from a month ago.

150
00:24:51.980 --> 00:24:59.800
raxhvl: The first, reaction to it was, you know, whether it's something wrong with the testing framework itself.

151
00:25:00.160 --> 00:25:04.039
raxhvl: So, we later discovered that the test was right.

152
00:25:04.340 --> 00:25:08.989
raxhvl: And these kind of bugs that escape, you know, all clients are especially evil.

153
00:25:09.110 --> 00:25:15.869
raxhvl: Because if we did not have tests for this, this could have, you know, continued to be hidden for a longer time.

154
00:25:16.600 --> 00:25:21.540
raxhvl: So, I just wanted to understand, you know, how did… how did this test case came to be?

155
00:25:21.940 --> 00:25:25.770
raxhvl: So this, came originally from Dragon.

156
00:25:26.030 --> 00:25:34.829
raxhvl: But Dragon here is not, talking about the test case itself. So he's talking about, something that he's discovered with REVM.

157
00:25:34.950 --> 00:25:36.439
raxhvl: And, you know.

158
00:25:36.440 --> 00:25:45.200
Mario Vega: Sorry to interrupt you, but are you changing slides right now? Because we can only see the LibreOffice Impress window at the moment, not the full screen?

159
00:25:46.120 --> 00:25:49.070
raxhvl: Okay, let me… let me… Appreciate it.

160
00:26:14.280 --> 00:26:15.589
raxhvl: Can you see that now?

161
00:26:15.590 --> 00:26:17.220
Mario Vega: Yeah, perfect. Thank you.

162
00:26:20.180 --> 00:26:20.820
raxhvl: Okay.

163
00:26:21.310 --> 00:26:26.859
raxhvl: So… Yeah, so just wanted to talk about a certain test case that got discovered.

164
00:26:27.130 --> 00:26:37.860
raxhvl: So, like I said, our initial reaction was to figure out, you know, if there's something wrong with the test framework itself. So it turns out, like, it was a valid test case that all three clients were failing.

165
00:26:38.340 --> 00:26:49.519
raxhvl: And these kind of clients are… in this kind of test, bugs are especially evil, because if there was not a test case to catch this, this could have escaped to maybe, like.

166
00:26:49.670 --> 00:26:51.910
raxhvl: DevNets or testnets.

167
00:26:53.310 --> 00:27:06.119
raxhvl: So I wanted to understand, like, how this test case came to be. So drag and dropped a message on Discord that is kind of tangential to the bug, but not essentially the test kit we're talking about.

168
00:27:06.650 --> 00:27:11.269
raxhvl: So he's talking about some kind of bug that he faced, in REVM.

169
00:27:11.800 --> 00:27:15.709
raxhvl: And we created a PR for it.

170
00:27:16.170 --> 00:27:20.950
raxhvl: And we iterated on it, and this is Mario's comment.

171
00:27:22.540 --> 00:27:32.789
raxhvl: you know, bringing in a fresh angle to their test case. And this is, like, the test case that caught the bug is… is from this comment from Mario.

172
00:27:33.800 --> 00:27:42.069
raxhvl: So, we are experimenting with, like, a simple markdown file that captures all these ideas at one place.

173
00:27:42.520 --> 00:27:46.059
raxhvl: And this is a simple…

174
00:27:46.370 --> 00:27:55.090
raxhvl: Like, a tracker that can also be used, plus also, like, a discussion ground for iterating on ideas and to come up with more such test cases.

175
00:27:55.340 --> 00:28:00.639
raxhvl: This is kind of difficult within, within Discord.

176
00:28:01.100 --> 00:28:08.130
raxhvl: Because, you know, you get a lot of messages from everyone, and although we do our best, sometimes, like.

177
00:28:08.480 --> 00:28:10.700
raxhvl: Ideas can get lost in the shuffle.

178
00:28:11.170 --> 00:28:17.659
raxhvl: So, yeah, I'd like to propose, like, maintaining a formal, simple document, like a markdown document.

179
00:28:17.950 --> 00:28:23.620
raxhvl: That also welcomes, you know, not just the test developers.

180
00:28:23.830 --> 00:28:28.480
raxhvl: But other stakeholders, like client teams, security researchers, and EIP authors.

181
00:28:28.610 --> 00:28:42.480
raxhvl: who may not, you know, first, specifically know how to write Python test case, but they can, you know, they maybe know the map of experiment better than a single person writing the test to, like, proport the test case and

182
00:28:43.000 --> 00:28:48.859
raxhvl: And we'll, do the heavy lifting of actually implementing that in Python.

183
00:28:50.530 --> 00:28:58.410
raxhvl: What I've also discovered is, LLMs really love this Markdown documents. For BAL, I think we have about

184
00:28:58.530 --> 00:29:01.529
raxhvl: 2300 lines of Python code.

185
00:29:01.690 --> 00:29:09.510
raxhvl: But the Markdown file is only 60 lines. And I've tried, like, deleting all the test cases from the Python.

186
00:29:09.760 --> 00:29:13.420
raxhvl: Python test cases and, tried

187
00:29:13.780 --> 00:29:22.020
raxhvl: asking Claude to generate the test from the Markdown file. And it's been fairly accurate, so that, kind of implies that, you know.

188
00:29:22.160 --> 00:29:27.400
raxhvl: LLM gain a deep level of understanding from, from, this markdown.

189
00:29:27.690 --> 00:29:32.429
raxhvl: And we can use to switch, you know, data to, like.

190
00:29:32.660 --> 00:29:41.289
raxhvl: Imagine if we had, like, this document for every IP, we could just, see how, cross-IP interactions happen.

191
00:29:41.530 --> 00:29:45.500
raxhvl: There's also a lot of interaction, interesting stuff that,

192
00:29:45.780 --> 00:29:48.680
raxhvl: the security team does with, AI.

193
00:29:48.930 --> 00:29:54.450
raxhvl: So that this can also go in as an input to… has ingest our EIP specs.

194
00:29:56.280 --> 00:30:05.109
raxhvl: this is, like, also being adopted by Fossil now, and my hope with this talk is to encourage more people to

195
00:30:05.340 --> 00:30:06.620
raxhvl: Start using it.

196
00:30:08.190 --> 00:30:09.760
raxhvl: And, that's about it.

197
00:30:10.340 --> 00:30:11.280
raxhvl: Thank you.

198
00:30:25.690 --> 00:30:27.790
Mario Vega: Thank you, Rahul.

199
00:30:28.170 --> 00:30:39.270
Mario Vega: I think this is a great idea. I dropped a comment on the chat that I think we should probably make this Markdown document

200
00:30:39.620 --> 00:30:47.460
Mario Vega: visible And… I suggest that we linked to it from the EIP, but that might be contentious.

201
00:30:47.580 --> 00:30:49.309
Mario Vega: So, it's worth discussing.

202
00:30:49.420 --> 00:30:50.960
Mario Vega: But yeah.

203
00:30:52.120 --> 00:31:00.940
Marius van der Wijden: So, I do like the idea of EIP editors doing more work in the realm of testing.

204
00:31:01.150 --> 00:31:10.029
Marius van der Wijden: I'm… I'm wondering, like, every… every EIP has a optional, like, test section.

205
00:31:10.200 --> 00:31:16.849
Marius van der Wijden: I don't know if, like, an external document is better than just using that.

206
00:31:17.060 --> 00:31:26.480
Marius van der Wijden: So maybe if we force the EIP… like, it seems like we have much more process around, the EIP champions now.

207
00:31:26.480 --> 00:31:41.070
Marius van der Wijden: with Glamsterdam, so we can… I feel like we can kind of force them to write these test cases, at least in plain English, into the EAP in the test section, and not require an additional,

208
00:31:41.550 --> 00:31:47.260
Marius van der Wijden: document that someone has to find and maintain and whatever, but, like, keep it.

209
00:31:47.540 --> 00:31:49.370
Marius van der Wijden: alive in the EIP.

210
00:31:53.930 --> 00:32:08.009
Mario Vega: Yeah, I absolutely agree. And I think we can make ways of working it into ills, for example, referencing it directly, or linking it, or giving a live, dynamic document.

211
00:32:08.380 --> 00:32:12.100
Mario Vega: Just, just for marking completion and, and, and whatnot.

212
00:32:12.280 --> 00:32:14.130
Mario Vega: But yeah. Tony?

213
00:32:16.740 --> 00:32:22.909
Toni Wahrstätter: Yeah, I've been using the test cases section in the APs, but it feels like

214
00:32:23.060 --> 00:32:31.880
Toni Wahrstätter: for example, for block 5 access lists, it would have been, like, 20 to 30 even more test cases in there, so it would have blowed the EAP.

215
00:32:32.100 --> 00:32:40.730
Toni Wahrstätter: itself, and maybe a fair compromise could be to use the assets folder of the AP and put

216
00:32:41.270 --> 00:32:47.249
Toni Wahrstätter: And basically enforce that there is a test cases, markdown document in there.

217
00:32:47.740 --> 00:32:53.399
Toni Wahrstätter: Because then, also, everyone… we can link from the EAP to the assets folder, and then we…

218
00:32:53.560 --> 00:32:56.309
Toni Wahrstätter: Solve the problem. And keep things clean.

219
00:33:01.000 --> 00:33:07.089
Mario Vega: Thank you. One advantage of, for example, keeping the markdown in eels.

220
00:33:07.610 --> 00:33:10.480
Mario Vega: Could be that we can mark

221
00:33:11.060 --> 00:33:18.260
Mario Vega: the… the test case has completed, or has implemented, in the same PR Where we implemented.

222
00:33:18.840 --> 00:33:22.599
Mario Vega: So, that's one thing to consider, right? I'm not, like, heavily…

223
00:33:22.720 --> 00:33:30.680
Mario Vega: Leaned against any of the options, but that's just one thing that could make it, like, a little bit more trustworthy.

224
00:33:30.840 --> 00:33:32.170
Mario Vega: Yep.

225
00:33:36.710 --> 00:33:39.499
Mario Vega: Any other comments on this?

226
00:33:43.630 --> 00:33:46.149
danceratopz: Hey, Marianne. Just a quick comment.

227
00:33:46.320 --> 00:33:50.360
danceratopz: I can't find my hand to put up, so I'm just speaking up, sorry.

228
00:33:50.980 --> 00:33:57.730
danceratopz: if we pushed, like, EIP versioning a bit harder, one possible future for that is the,

229
00:33:58.440 --> 00:34:03.610
danceratopz: the Ethereum EIPs repo gets sort of more closely tied

230
00:34:04.120 --> 00:34:07.560
danceratopz: To, in the case of the execution layer, execution specs.

231
00:34:08.449 --> 00:34:14.370
danceratopz: In which case, for example, if you made a change to the specs in an EIP's markdown.

232
00:34:14.850 --> 00:34:20.660
danceratopz: Then you'd have to back it up with an implementation In execution specs.

233
00:34:21.460 --> 00:34:25.120
danceratopz: So this would be, for example, only for CFI EIPs?

234
00:34:26.080 --> 00:34:29.360
danceratopz: And in which case, if you start making this tighter link.

235
00:34:29.630 --> 00:34:32.229
danceratopz: Then you could definitely maintain a list of tests.

236
00:34:32.429 --> 00:34:33.920
danceratopz: And execution specs.

237
00:34:34.889 --> 00:34:39.469
danceratopz: But this is all a bit, vague and a bit of work in progress, but just an idea.

238
00:34:47.120 --> 00:34:48.340
Mario Vega: Thank you, thank you.

239
00:34:52.300 --> 00:35:00.099
Mario Vega: I think, yeah, there are still ways to go on execution specs implementation… I'm sorry, integration with EIP.

240
00:35:00.150 --> 00:35:13.440
Mario Vega: So, I think we can keep on working on this. It's, it's an interesting topic on how we can discuss and just basically peer review and peer suggest test cases, which I think is very important.

241
00:35:13.590 --> 00:35:19.189
Mario Vega: And just opening the discussion, I think it's, like, it's a great way to start.

242
00:35:19.520 --> 00:35:21.270
Mario Vega: Yep.

243
00:35:24.140 --> 00:35:32.219
Mario Vega: Yeah, by the way, I jumped way too quickly into the presentation, maybe. Is there any other block-level access list updates that anyone else wants to share?

244
00:35:34.120 --> 00:35:40.660
Stefan Starflinger: Regarding the DevNets, it should be up by the end of today, the first one. I'm just doing some housekeeping.

245
00:35:40.830 --> 00:35:43.399
Stefan Starflinger: And then it should be up pretty quickly.

246
00:35:43.630 --> 00:35:56.040
Stefan Starflinger: And I've tried most of the clients today with Kurtosis, and they all seem to be running pretty stable. So if you're adding more test cases, or iterating on something, it would be good to know regarding the DevNet.

247
00:36:00.030 --> 00:36:03.749
Mario Vega: Excellent. Just for everyone's,

248
00:36:04.580 --> 00:36:10.629
Mario Vega: understanding is, which clients are being included in this, in this DevNet?

249
00:36:11.460 --> 00:36:18.430
Stefan Starflinger: So, it seems that it's difficult to get two consensus layer clients working together, so I'm just gonna choose either Lodestar or Prism.

250
00:36:18.540 --> 00:36:27.529
Stefan Starflinger: And for execution, I've tried Wrath, Nethermine, Geth, and Bezu. Those would be included.

251
00:36:30.870 --> 00:36:42.259
Mario Vega: Excellent. I think we're missing a couple in there. If a… if, for example, Aragon has implementations finished, I think they can… they should be able to just join, if that's…

252
00:36:42.790 --> 00:36:47.220
Mario Vega: My understanding, so yeah, please reach out to Stefan once.

253
00:36:47.420 --> 00:36:52.170
Mario Vega: You have an implementation that you want to use to join the DevNet.

254
00:36:54.960 --> 00:36:56.449
Mario Vega: Alright, thanks, Stefan.

255
00:36:57.330 --> 00:36:58.559
Mario Vega: Cool.

256
00:36:58.700 --> 00:37:04.040
Mario Vega: Any other… Updates on blocks list that anyone wants to share?

257
00:37:15.700 --> 00:37:20.299
Mario Vega: Alright then, just one comment from Barnabas, that Helseshi has finally stopped finalizing.

258
00:37:20.570 --> 00:37:21.790
Mario Vega: Officially.

259
00:37:24.400 --> 00:37:25.480
Mario Vega: Alright.

260
00:37:25.790 --> 00:37:29.799
Mario Vega: If nothing else on block-level access list, we can jump into EPVS.

261
00:37:29.930 --> 00:37:36.749
Mario Vega: All right, so you… Justine, if you… I see that you're here, sure. Yep, all right.

262
00:37:37.300 --> 00:37:45.789
Justin Traglia: I can give her a very quick update. There's not much. There is a new consensus specs release with some additional EPBS tests for COAS.

263
00:37:46.260 --> 00:37:52.089
Justin Traglia: We don't have a ePPBS DevNet 0 up and running yet, so not much testing there.

264
00:37:52.870 --> 00:38:04.590
Justin Traglia: The proposed structure change to attestations was rejected at the breakout call on Friday, and Mark identified a missing gossip condition check that we're gonna get fixed.

265
00:38:04.710 --> 00:38:08.499
Justin Traglia: But, until there's a DevNet, not a whole lot from us.

266
00:38:16.170 --> 00:38:17.050
Mario Vega: Alright.

267
00:38:17.600 --> 00:38:18.689
Mario Vega: Thank you.

268
00:38:19.820 --> 00:38:25.140
Mario Vega: Any comments from clients, regarding PBS that needs to be brought up?

269
00:38:37.550 --> 00:38:41.919
Mario Vega: Alright, Justine, when is the next, EPVS breakout call?

270
00:38:42.520 --> 00:38:49.039
Justin Traglia: I think it's… It's, like, 12 days from now? Or, it's, like, not this Friday, but next Friday.

271
00:38:50.350 --> 00:38:52.140
Justin Traglia: I'll share a link to the agenda.

272
00:38:52.970 --> 00:38:59.290
Mario Vega: Yes, please, thank you. Yeah, so please, clients, if you can just make it to this meeting, would be very helpful.

273
00:38:59.610 --> 00:39:01.310
Mario Vega: Yep.

274
00:39:03.220 --> 00:39:04.360
Mario Vega: Thank you.

275
00:39:04.600 --> 00:39:17.159
Mario Vega: Alright, if nothing else on EPBS, I think we can jump into the last topics, which are not fork-related. So one topic we already, touched upon is the Holeshky deprecation.

276
00:39:17.520 --> 00:39:23.240
Mario Vega: The next topic is regarding RPC updates.

277
00:39:25.150 --> 00:39:41.200
Mario Vega: So yeah, basically, a week or two ago, we discussed about, enhancing the RPC testing framework, but I don't think there has been any much development as of now, but… and rather, this is a work in progress, in my opinion.

278
00:39:41.310 --> 00:39:47.870
Mario Vega: But if there's anyone to comment on this, please raise your hand.

279
00:39:52.810 --> 00:39:55.159
Mario Vega: If not, we can move to the next one.

280
00:39:55.160 --> 00:40:01.680
Łukasz Rozmej: We have two topics, but they are not exactly related to this, but to the current test and current,

281
00:40:02.040 --> 00:40:09.940
Łukasz Rozmej: how things are working. So, one thing is that We recently… change the, reverted…

282
00:40:10.180 --> 00:40:22.329
Łukasz Rozmej: error code to be free, but I don't think the current ETH simulate tests reflect that, so I think they might need to be regenerated or something.

283
00:40:23.680 --> 00:40:32.219
Łukasz Rozmej: So that's… that's one thing. And second thing that I don't really…

284
00:40:33.060 --> 00:40:39.289
Łukasz Rozmej: Mmm… like, let's say, is,

285
00:40:39.550 --> 00:40:44.679
Łukasz Rozmej: how… when you have sent transaction, or ETH Simulator, or whatever.

286
00:40:44.830 --> 00:40:53.340
Łukasz Rozmej: There is some logic of how to resolve the transaction type if it's not sent explicitly.

287
00:40:54.040 --> 00:41:10.559
Łukasz Rozmej: And I'm thinking this logic might not be optimal, and it's reflected in tests, so if we… we actually have a bit different logic, and we fail some tests because of that, so that might be a bigger discussion.

288
00:41:16.210 --> 00:41:24.130
Łukasz Rozmej: I think, basically, we had… Some blob fields that are present in some tests.

289
00:41:24.550 --> 00:41:40.569
Łukasz Rozmej: And the transaction was still, resulting in EIP1559 transaction, while we were… we were, treating it as… as blob transaction. And, yeah, that's…

290
00:41:41.850 --> 00:41:50.870
Łukasz Rozmej: there's a question mark what to do and why, but I think potentially the default… Gaf,

291
00:41:52.230 --> 00:41:55.439
Łukasz Rozmej: Behavior… should be discussed.

292
00:41:55.580 --> 00:41:56.559
Łukasz Rozmej: At least.

293
00:41:59.520 --> 00:42:04.089
keri: Can you, open an issue on the execution APIs repo?

294
00:42:04.840 --> 00:42:07.780
keri: So we can take a look at it, and maybe start the conversation there.

295
00:42:08.330 --> 00:42:14.670
Łukasz Rozmej: Okay, so I will try to open two, two of those. Thank you.

296
00:42:14.670 --> 00:42:15.389
keri: Thank you.

297
00:42:19.550 --> 00:42:20.400
Mario Vega: Excellent.

298
00:42:22.220 --> 00:42:30.490
Mario Vega: Yeah, thanks, thanks for bringing this up. I think the place to put issues at the moment is… should be execution APIs. Yeah, please just…

299
00:42:30.710 --> 00:42:35.099
Mario Vega: Raise the issue, and we can… just to have a place to discuss this.

300
00:42:36.570 --> 00:42:37.570
Mario Vega: Alright.

301
00:42:37.710 --> 00:42:45.940
Mario Vega: Yeah, just… Alright, sorry, before I jump in, anything else on RPC that we want to discuss today?

302
00:42:51.470 --> 00:43:01.239
Mario Vega: Alright, if not, there was one issue, or rather, like, discussion topic that was raised by Marius today, regarding EIP7610.

303
00:43:03.400 --> 00:43:12.140
Mario Vega: I'll share a link to the EIP if it needs refreshing. Basically, this was a discussion about, like.

304
00:43:12.400 --> 00:43:16.479
Mario Vega: underspecified, if I'm correctly, or…

305
00:43:17.110 --> 00:43:29.790
Mario Vega: basically just what happens in case that there's storage dangling in the contracts. So we want to discuss what to do in that case. Marius, do you want to open up the floor for discussion?

306
00:43:30.240 --> 00:43:30.820
Marius van der Wijden: True.

307
00:43:30.950 --> 00:43:47.560
Marius van der Wijden: I hope you can hear me a bit better, I was, I was driving, so it wasn't great. Yeah, so the idea was, this EIP kind of specifies pretty exactly what we are doing in the case of a contract that has no code.

308
00:43:47.760 --> 00:43:59.110
Marius van der Wijden: But, storage, and there are… there are, because of, like, prior revisions of the EVM, there are 28 of them on mainnet right now.

309
00:43:59.590 --> 00:44:04.160
Marius van der Wijden: That we kind of cannot really get rid of in a normal way.

310
00:44:04.320 --> 00:44:14.740
Marius van der Wijden: And the idea is, or the problem is, someone could, in theory, deploy something there… And,

311
00:44:15.190 --> 00:44:22.799
Marius van der Wijden: then the behavior is kind of underspecified. Like, what happens if you deploy a contract to

312
00:44:23.570 --> 00:44:28.690
Marius van der Wijden: A… an account that has no code, but already storage.

313
00:44:39.630 --> 00:44:42.480
Mario Vega: Marius, I think you cut off. We cannot launch you.

314
00:44:48.470 --> 00:45:02.529
Marius van der Wijden: Not really good, because then you have a contract with a different code, and, like, kind of dangling storage. Or what you could also do is just delete all of the storage, if someone creates to this contract.

315
00:45:03.080 --> 00:45:13.509
Marius van der Wijden: And, yeah, all of them have drawbacks, and we have added this EIP in,

316
00:45:14.040 --> 00:45:17.870
Marius van der Wijden: I think in the PECRA fork, And,

317
00:45:17.980 --> 00:45:25.489
Marius van der Wijden: And now Raz wants to reopen the discussion around it. Because the drawback of how we do this is that,

318
00:45:25.970 --> 00:45:32.010
Marius van der Wijden: Every time we, every time we create, we would need to…

319
00:45:32.070 --> 00:45:50.420
Marius van der Wijden: look at the chain again, and catch something from the chain again, and do a second lookup. For us, this lookup is kind of free, because of the way we restore stuff. We will just hit the cache, but for other implementations, it might not be

320
00:45:50.560 --> 00:45:53.469
Marius van der Wijden: As, as cheap as it is for us.

321
00:45:53.870 --> 00:46:02.280
Marius van der Wijden: I don't really think that the testing call is the right… Avenue to change this, because…

322
00:46:02.750 --> 00:46:03.939
Marius van der Wijden: We kind of…

323
00:46:04.580 --> 00:46:22.569
Marius van der Wijden: We have introduced this as an EIP, and it went through the whole process, so if we want to change it, we should also introduce it… introduce the change as an EIP, and have it go through the whole process, and maybe we propose to Glamsterdam. But yeah, we can quickly discuss it here, if…

324
00:46:22.950 --> 00:46:24.320
Marius van der Wijden: People want to discuss.

325
00:46:26.270 --> 00:46:27.280
Mario Vega: Yeah, Dragon?

326
00:46:27.940 --> 00:46:37.260
draganrakita: This one of AIPs that was proactively activated. Not exactly the hard work, but because there was no…

327
00:46:37.730 --> 00:46:51.799
draganrakita: This kind of edge case didn't happen in the history, and it's very unlikely that it's going to, but you need, like, hash collision for it to happen in the future.

328
00:46:52.170 --> 00:46:59.199
draganrakita: So, we are talking… really talking about something that… It's mathematically impossible to happen.

329
00:47:00.080 --> 00:47:11.409
draganrakita: The edge case that requires additional, like, for us and for Aragon, requires additional read from the database is not that great.

330
00:47:12.420 --> 00:47:13.370
draganrakita: So…

331
00:47:13.530 --> 00:47:31.589
draganrakita: Yeah, that's why I was wondering if… I think GET asked this AIP to be included, because they did some refactoring inside their code. I think Nethermine is, was fine with either, because they already have similar, format of the mercantries and accounts with storages.

332
00:47:32.180 --> 00:47:34.969
draganrakita: So it affected us and Aragon mostly.

333
00:47:36.230 --> 00:47:40.520
draganrakita: I'm not sure if there is,

334
00:47:40.880 --> 00:47:51.330
draganrakita: But if the GET are fine to revert this, or having, like, we can make KIP and just make a change.

335
00:47:53.280 --> 00:48:02.060
Gary Rong: So, I just want to mention that, maybe for Aragon, you need an additional database lookup.

336
00:48:02.470 --> 00:48:08.029
Gary Rong: But it's only required if you… for the contract deployment. And,

337
00:48:08.190 --> 00:48:16.830
Gary Rong: it's not necessary for all the transactions. So, I think for the overall performance, the impact is basically negligible.

338
00:48:17.390 --> 00:48:19.919
Gary Rong: And

339
00:48:21.180 --> 00:48:29.520
Gary Rong: And also, I think, semantically, it is, like, the cleanest way to… to define the… the…

340
00:48:29.980 --> 00:48:42.339
Gary Rong: expected behavior around this age case. And, otherwise, for example, if we want to inherit the storage from the…

341
00:48:42.570 --> 00:48:53.250
Gary Rong: the storage for the new contract, or we do some deletion for the old storage, it would basically bring a lot of complexity into the protocol.

342
00:48:53.660 --> 00:48:59.459
Gary Rong: Yeah. So, from my point of view, I think…

343
00:48:59.800 --> 00:49:05.189
Gary Rong: this I.O. overhead should be fine. And also,

344
00:49:05.360 --> 00:49:11.799
Gary Rong: In theory, someone could craft a blog with a lot of contract creation.

345
00:49:12.090 --> 00:49:16.380
Gary Rong: try to slow down the arrogant RESC note.

346
00:49:16.580 --> 00:49:18.290
Gary Rong: But,

347
00:49:18.440 --> 00:49:25.289
Gary Rong: it's meaningless for the guests, so it's also meaningless for the network. I don't think people will try to do it.

348
00:49:25.430 --> 00:49:27.529
Gary Rong: To perform this kind of attack.

349
00:49:27.680 --> 00:49:28.330
Gary Rong: Yeah.

350
00:49:31.080 --> 00:49:31.550
Mario Vega: Mr. Rutterman.

351
00:49:31.550 --> 00:49:40.130
draganrakita: On other hand, but how difficult would be to get to remove this check?

352
00:49:40.790 --> 00:49:47.470
draganrakita: And… we can remove this check, we can, like, we have two options, to leave the storage as is.

353
00:49:47.870 --> 00:49:51.070
draganrakita: Or delete storage and act as self-destruct.

354
00:49:51.700 --> 00:49:59.240
draganrakita: Any… I think any… we are talking still about edge case, but any… that kind of option would work.

355
00:50:01.320 --> 00:50:14.330
Gary Rong: So, if we leave the… leave this styling storage, as I said, is semantically Bad, because…

356
00:50:14.440 --> 00:50:26.480
Gary Rong: we… it means that we will deploy some new code, but they can operate on the old storage, which I don't… I really don't like it. And,

357
00:50:26.700 --> 00:50:32.409
Gary Rong: For deleting all the… Storage, when we try to deploy it.

358
00:50:39.530 --> 00:50:49.380
Gary Rong: I think, it needs… we need, the ability to traverse all the dialing, storage, and,

359
00:50:49.450 --> 00:51:00.579
Gary Rong: I can't remember all the details, but we do have some issues for it. It is the reason we proposed this EIP to disable this behavior.

360
00:51:02.230 --> 00:51:07.309
draganrakita: In general, because, this really edge case, and…

361
00:51:08.300 --> 00:51:14.200
draganrakita: it's probably not going to be triggered. I think it, from at least In my mind.

362
00:51:14.200 --> 00:51:14.550
Gary Rong: Duh.

363
00:51:14.550 --> 00:51:19.889
draganrakita: and… It doesn't matter if it is nice or not, it is more like what's easier.

364
00:51:20.610 --> 00:51:25.779
draganrakita: If it is easier just to leave storage as is, and use that, maybe we can go with that.

365
00:51:26.510 --> 00:51:28.789
draganrakita: From… Yeah, East…

366
00:51:29.040 --> 00:51:46.120
Gary Rong: It's in theory impossible to be triggered, but it's not, like, so for security. It's not the 32 bytes, it's only 20 bytes, so it's still, like, possible to trigger this age case by the hash collection.

367
00:51:46.840 --> 00:52:01.520
draganrakita: So, to repeat myself, it's not about what's nicer for the protocol, but what's easier for GET to implement. Is it easier to just leave storage as is, or to do self-destruct?

368
00:52:01.640 --> 00:52:08.419
draganrakita: I'm hearing for you the self-distract would be harder, because you need to iterate over all storage, but what about living storage as is?

369
00:52:10.010 --> 00:52:16.469
Gary Rong: Yeah, it should be fine, like, in the implementation level,

370
00:52:17.570 --> 00:52:22.609
Gary Rong: Like, inherits all the living storage to the new account.

371
00:52:23.020 --> 00:52:26.380
Gary Rong: It's not… it's not hard in the implementation.

372
00:52:27.000 --> 00:52:32.530
draganrakita: Okay, it seems it makes sense to go to that path.

373
00:52:32.780 --> 00:52:39.999
draganrakita: We're just discussing now, I think everybody should look into the code and check if this is okay or not.

374
00:52:40.440 --> 00:52:43.029
draganrakita: I don't want to, like, crash something like that.

375
00:52:43.640 --> 00:52:51.570
draganrakita: But for at least from this discussion, I'm hearing that it should be… it could be okay to leave storage as is.

376
00:52:54.090 --> 00:52:59.549
Gary Rong: Yeah, it could be an option, but I still, hold my,

377
00:52:59.760 --> 00:53:05.590
Gary Rong: stance, and I think it's not good for the protocol, but yeah, anyway.

378
00:53:07.240 --> 00:53:12.040
Łukasz Rozmej: I agree with Gary a bit, that's, like, undefined a bit,

379
00:53:12.630 --> 00:53:14.760
Łukasz Rozmej: result, which I also don't like.

380
00:53:22.320 --> 00:53:23.460
draganrakita: Simon Cook.

381
00:53:23.770 --> 00:53:25.869
draganrakita: That's why we are talking to define it.

382
00:53:36.110 --> 00:53:38.439
Mario Vega: Alright, I think,

383
00:53:38.830 --> 00:53:44.950
Mario Vega: Is there any other avenue where maybe we can continue the discussion? I think we're running out of time here,

384
00:53:45.760 --> 00:53:58.280
Mario Vega: maybe we can continue to sync and revisit on ACDE, but I think it's important, regardless of the outcome, I think what we can do is just start coming up with a test case. I think we already have, but…

385
00:53:58.550 --> 00:54:09.430
Mario Vega: Just to define it, and just make sure if… even if it's an unlikely scenario, we should, like, still come up to the same, consensus, regardless of what the…

386
00:54:09.550 --> 00:54:11.730
Mario Vega: the solution is.

387
00:54:12.090 --> 00:54:25.690
Mario Vega: But anyway, I think we should, probably still discuss this, offline, and then come up to the discussion again on ACDE, if that's okay? If this becomes an EIP. Am I understanding correctly?

388
00:54:31.110 --> 00:54:32.520
Gary Rong: Yeah, sounds good to me.

389
00:54:34.380 --> 00:54:35.510
Mario Vega: Alright, thanks.

390
00:54:36.100 --> 00:54:37.060
Mario Vega: Okay.

391
00:54:41.530 --> 00:54:49.460
Mario Vega: I see that we already have a discussion thread on the Steel Discord server, so I think we can continue on there.

392
00:54:49.610 --> 00:54:57.030
Mario Vega: Please evaluate, and we can, try to see if we can come up, to a…

393
00:54:57.630 --> 00:54:59.499
Mario Vega: To a conclusion, async.

394
00:55:00.400 --> 00:55:01.190
Mario Vega: I'm there.

395
00:55:02.790 --> 00:55:03.870
Mario Vega: Alright.

396
00:55:04.450 --> 00:55:05.290
Mario Vega: Beautiful.

397
00:55:05.690 --> 00:55:08.829
Mario Vega: Thanks for the input, Gary and Dragon.

398
00:55:08.980 --> 00:55:12.630
Mario Vega: Yeah, the next and last topic is the wealth.

399
00:55:12.750 --> 00:55:19.680
Mario Vega: yeah, I believe… Dan, do you want to give a summary of the status?

400
00:55:19.890 --> 00:55:20.780
Mario Vega: on this?

401
00:55:22.140 --> 00:55:23.730
danceratopz: Yeah. Hey, everyone.

402
00:55:24.290 --> 00:55:26.660
danceratopz: I can give a brief summary.

403
00:55:27.470 --> 00:55:31.490
danceratopz: So, just for context, the world is, about moving

404
00:55:31.640 --> 00:55:36.269
danceratopz: the code from execution spec tests to the execution specs repo.

405
00:55:36.400 --> 00:55:43.600
danceratopz: So that we can basically have the specs and the tests living alongside each other, and give a much better developer experience.

406
00:55:44.930 --> 00:55:47.750
danceratopz: So we've been working hard on this for the last couple of weeks.

407
00:55:49.600 --> 00:55:50.750
danceratopz: Oh, really?

408
00:55:51.560 --> 00:55:53.799
danceratopz: I don't think I can fix that so quickly.

409
00:56:00.450 --> 00:56:01.720
danceratopz: We'll turn it on a little bit.

410
00:56:03.750 --> 00:56:05.290
danceratopz: Well, I'll carry on.

411
00:56:05.560 --> 00:56:07.080
danceratopz: Thanks, Nixon.

412
00:56:08.920 --> 00:56:11.530
danceratopz: Turn, turn your speaker down, Trent.

413
00:56:11.640 --> 00:56:20.879
danceratopz: So, yeah, anyway, basically, I posted a little update, above, and I think that's probably all you need to know. So, it's still a work in progress,

414
00:56:21.360 --> 00:56:33.840
danceratopz: But people who contribute to our libraries and the tests in execution spec tests will have noticed that the old repository is not used anymore, so yeah, don't direct any PRs to execution spec tests.

415
00:56:34.000 --> 00:56:42.100
danceratopz: Don't open any issues there, open all PRs and issues, and… Execution specs, the…

416
00:56:42.850 --> 00:56:50.689
danceratopz: Basically, the status is that for Osaka contributors, and for benchmarking contributors, you can basically start PRing straight away.

417
00:56:50.800 --> 00:56:58.260
danceratopz: So we have, people should direct their PRs to the default fork, which is forks or SACA.

418
00:57:00.280 --> 00:57:07.800
danceratopz: Amsterdam contributors may need to hold off for a little bit longer until we've rebased that fork on top of Fox Osaka.

419
00:57:08.030 --> 00:57:10.410
danceratopz: I think everyone knows…

420
00:57:11.410 --> 00:57:17.469
danceratopz: I think it's a relatively tight group of people who can just reach out to us if there's any problems there.

421
00:57:18.620 --> 00:57:21.770
danceratopz: Just one caveat regarding benchmarking.

422
00:57:22.440 --> 00:57:25.479
danceratopz: Luis has quite a large PR open.

423
00:57:27.690 --> 00:57:31.480
danceratopz: Which will restructure the tests benchmarking folders.

424
00:57:32.060 --> 00:57:35.820
danceratopz: So just be aware that that large change is underway, and will be merged soon.

425
00:57:38.000 --> 00:57:45.589
danceratopz: Clients don't need to worry very much. HiFue is unaffected, and fixed releases are still a work in progress, but they should be completed this week.

426
00:57:46.140 --> 00:57:51.160
danceratopz: And if you need to look at docs for testing, you can go to the old website. That's still a work in progress.

427
00:57:52.550 --> 00:57:56.470
danceratopz: I think that's about it. If anyone wants to chime in from the Steel team…

428
00:57:57.490 --> 00:57:59.500
danceratopz: With a bit more information, then please do.

429
00:58:04.690 --> 00:58:17.109
Mario Vega: Great, thanks, thanks so much. So, TLDR is basically, please come to Execution Specs now for any testing or spec updates that you want to contribute, and we should be good to accept PRs now.

430
00:58:17.400 --> 00:58:18.270
Mario Vega: So, yep.

431
00:58:21.530 --> 00:58:29.520
Mario Vega: And also feedback. Feedback's really appreciated on this new structure. I think it's gonna… it's… from our perspective, it's better, because we have the…

432
00:58:29.600 --> 00:58:45.690
Mario Vega: The specs and the tests are now in the same place, so if you want to start prototyping, and at the same time you want to do the test, there's no longer a requirement for you to go to two different repositories. So it's, in my opinion, a huge step up in the UX of our specification and testing frameworks.

433
00:58:46.090 --> 00:58:55.640
Mario Vega: But yeah, anyway, any feedback, it's welcome, please feel free to come to Execution Specs and open issues and open PRs, yeah, as of now.

434
00:58:59.820 --> 00:59:04.240
Mario Vega: Great. I think that was the last, topic remaining for today.

435
00:59:04.500 --> 00:59:07.399
Mario Vega: Anything else that is worth discussing today?

436
00:59:08.660 --> 00:59:11.559
Mario Vega: Anyone wants to race? We have 5 minutes, basically.

437
00:59:18.840 --> 00:59:27.579
Mario Vega: If not, I think we can wrap up. Thanks, everyone, for joining, and I'll see you on ACDC on Thursday. Thank you.

438
00:59:29.720 --> 00:59:30.350
felipe: Thanks.

439
00:59:31.400 --> 00:59:31.870
Gary Rong: Here you go.

440
00:59:33.750 --> 00:59:35.139
Louis: I don't see it.

441
00:59:35.620 --> 00:59:37.399
Antoine James: Bye, Ron. Bye-bye.

442
00:59:37.970 --> 00:59:38.750
Antoine James: Bye-bye.

