WEBVTT

1
00:01:44.870 --> 00:01:46.180
Pooja Ranjan: Hello! Akash!

2
00:01:47.120 --> 00:01:47.850
Akash | ECH: Hey?

3
00:01:48.748 --> 00:01:51.589
Akash | ECH: I hope Josh will help.

4
00:01:52.340 --> 00:01:54.510
Akash | ECH: Related to extreme.

5
00:01:54.510 --> 00:01:57.100
Pooja Ranjan: Channel to stream with Youtube.

6
00:01:59.390 --> 00:02:00.300
Akash | ECH: Sorry.

7
00:02:00.630 --> 00:02:04.390
Pooja Ranjan: Is he planning to stream on Youtube or X.

8
00:02:06.037 --> 00:02:11.719
Akash | ECH: No. The Josh Josh is planning to stream on Youtube, and next simultaneously.

9
00:02:12.140 --> 00:02:14.710
Pooja Ranjan: Simultaneously. Good that you told me.

10
00:02:14.860 --> 00:02:20.500
Pooja Ranjan: Okay, let me quickly check with it, because I had this set up. But let me quickly.

11
00:02:22.470 --> 00:02:23.810
Akash | ECH: Issue.

12
00:02:23.810 --> 00:02:30.299
Pooja Ranjan: No worries, no worries. We can just ping him if he is ready to stream on both simultaneously. It's perfect.

13
00:02:47.300 --> 00:02:49.710
Pooja Ranjan: So is he planning to use the R stream.

14
00:02:53.990 --> 00:02:54.850
Akash | ECH: Sorry.

15
00:02:55.820 --> 00:03:03.540
Pooja Ranjan: Is he planning to use the R stream to platform on restream to platform on both the both the streaming platforms.

16
00:03:03.910 --> 00:03:04.930
Akash | ECH: Oh, yeah.

17
00:03:05.410 --> 00:03:06.140
Pooja Ranjan: Okay.

18
00:03:29.120 --> 00:03:29.840
Mario Vega: Hello!

19
00:03:33.470 --> 00:03:35.250
Pooja Ranjan: Hello! Hey? Mario!

20
00:03:36.110 --> 00:03:37.320
Pooja Ranjan: Hello! Everyone!

21
00:03:39.560 --> 00:03:40.730
Mario Vega: Hey! How are you doing.

22
00:03:41.380 --> 00:03:44.259
Pooja Ranjan: Good good. I'm back after long.

23
00:03:44.450 --> 00:03:50.630
Pooja Ranjan: just quickly checking with Josh. If he's planning to stream both on X and YT. Together.

24
00:03:51.030 --> 00:03:57.000
Pooja Ranjan: if not. Then I will be taking care of streaming on Youtube, and Akash can take care of

25
00:03:57.310 --> 00:04:00.480
Pooja Ranjan: X. But just give us few seconds.

26
00:04:03.270 --> 00:04:04.439
Mario Vega: Sounds, good thanks.

27
00:04:33.610 --> 00:04:39.299
Pooja Ranjan: I don't see Josh online or connected here, Akash, do you have any confirmation from him?

28
00:04:47.300 --> 00:04:48.000
Akash | ECH: Nope.

29
00:04:49.400 --> 00:04:57.069
Pooja Ranjan: Okay? In that case. Let's proceed here because it's already 10 am. Let's start pre streaming

30
00:04:58.080 --> 00:04:59.279
Pooja Ranjan: on both ends.

31
00:04:59.400 --> 00:05:02.090
Pooja Ranjan: I mean, I can take care of Youtube. You can take care of X.

32
00:05:11.650 --> 00:05:13.830
Justin Florentine (Besu): Good morning, testers.

33
00:05:16.310 --> 00:05:17.260
Mario Vega: Good morning.

34
00:05:21.320 --> 00:05:27.019
Mario Vega: We'll just wait a couple of minutes before starting, so everybody has time to join.

35
00:05:28.060 --> 00:05:28.800
Mario Vega: Yep.

36
00:05:29.470 --> 00:05:31.990
Pooja Ranjan: Sure, and we are already pre streaming. So

37
00:05:32.120 --> 00:05:33.910
Pooja Ranjan: let us know when to move over.

38
00:06:35.650 --> 00:06:37.559
Mario Vega: I think we should be good to go.

39
00:06:38.020 --> 00:06:39.410
Mario Vega: Do you want to move over.

40
00:06:42.820 --> 00:06:43.980
Pooja Ranjan: Sure we are live.

41
00:06:45.740 --> 00:06:47.190
Mario Vega: Awesome. Thank you so much.

42
00:06:47.400 --> 00:06:54.570
Mario Vega: Hello, everyone. Welcome to Okra. Depth testing number 43. Today is July 7, th and we have

43
00:06:54.880 --> 00:07:03.520
Mario Vega: 4 points in the agenda plus other comments that I want to touch upon. That people added recently today

44
00:07:03.770 --> 00:07:07.610
Mario Vega: to the issue, I'll share the link where you want to take a look.

45
00:07:08.670 --> 00:07:25.003
Mario Vega: Here's the link. And yeah, we can get started with Fussaka. This is the 1st topic. So I guess the 1st thing about Fussaka would be definite 2. And I see Barnabas is

46
00:07:26.430 --> 00:07:29.689
Mario Vega: has joined. Do you have any any updates there.

47
00:07:29.820 --> 00:07:30.350
Barnabas: Yeah, sure.

48
00:07:30.620 --> 00:07:40.349
Barnabas: So has been on finalized during the whole weekend. Just late last night he managed to get back into finalization.

49
00:07:40.520 --> 00:07:43.407
Barnabas: I had to exit a few validators.

50
00:07:44.140 --> 00:07:50.543
Barnabas: This is due to the fact that Nimbusia was missing too many slots. And

51
00:07:51.470 --> 00:08:03.539
Barnabas: it was just a bit easier to try to finalize without them being online. There are still a few validators left for them and also had some validators exited.

52
00:08:04.060 --> 00:08:11.709
Barnabas: We are currently at 75% last time I checked. So we should be good to go. Prism had some sinking bugs

53
00:08:12.383 --> 00:08:21.919
Barnabas: that they are looking into right now, and also Tech, who had some nodes that were stuck but that was probably due to just insufficient memory.

54
00:08:23.230 --> 00:08:26.710
Barnabas: So yeah, lighthouse

55
00:08:28.380 --> 00:08:35.979
Barnabas: also had a bit of issues with the Cgc values earlier on. But I think that has been all resolved.

56
00:08:45.660 --> 00:08:52.659
Mario Vega: Thank you. Do we need any updates from the clients now? Of the open issues?

57
00:08:53.860 --> 00:09:00.069
Mario Vega: And which ones did you say that need updating.

58
00:09:00.070 --> 00:09:06.679
Barnabas: So the major issues on Nimbo side was the status 3, 2

59
00:09:07.090 --> 00:09:16.270
Barnabas: on Taku side. It was the thinking bug due to insufficient RAM that has been resolved. We just bumped the RAM of the Jvm. A bit

60
00:09:17.114 --> 00:09:22.765
Barnabas: the. But the team is still looking into possible syncing issues. Prism

61
00:09:23.520 --> 00:09:30.779
Barnabas: had the thinking issue during the non finality that has been resolved with a restart on during finality. So

62
00:09:30.880 --> 00:09:38.629
Barnabas: we might need to do another one or 2 non finalization scenarios where these bugs can be caught again.

63
00:09:39.640 --> 00:09:42.410
Barnabas: But right now they cannot reproduce it locally.

64
00:09:44.310 --> 00:09:45.650
Mario Vega: Okay, it makes sense.

65
00:09:47.170 --> 00:09:51.779
Mario Vega: With this in mind. Okay, thank yes. Matthew.

66
00:09:52.607 --> 00:10:02.169
MatthewKeil: Yeah. Lodestar. We also found an issue lower level in a Liberty update that got highlighted during onfidelity. But we're getting that resolved.

67
00:10:10.900 --> 00:10:15.929
Mario Vega: Cool anyone from prism or Teku that wants to give an update, or

68
00:10:16.140 --> 00:10:18.469
Mario Vega: and maybe we expand on on the issues.

69
00:10:19.020 --> 00:10:20.609
Manu: Yeah, I can.

70
00:10:21.321 --> 00:10:33.109
Manu: So for prism, yeah. So Barnabas, try to to reboot the node prism, node ring and finality, it seemed. And the node was stuck.

71
00:10:33.691 --> 00:10:40.020
Manu: Now the network is finalizing again. I cannot reproduce the issue. I mean just rebooting the node. Just

72
00:10:40.140 --> 00:10:42.659
Manu: we solve the issue when and the nerd is

73
00:10:43.120 --> 00:10:59.760
Manu: up to the asynct, up to the chain, up to the tip of the chain. Now, which is a good and a bad thing. And so, yeah, I cannot reproduce the issue on the net. Now, I try to reproduce the issue on courthouses. So just basically, I created a small network.

74
00:11:00.020 --> 00:11:09.120
Manu: And I created an finalization, and I cannot reproduce the issue as well. It thinks everything sinks normally.

75
00:11:10.658 --> 00:11:15.140
Manu: That's all I have to say about this issue.

76
00:11:19.620 --> 00:11:26.570
Mario Vega: Thank you. Anyone from Teku or Lighthouse wants to give an update.

77
00:11:27.810 --> 00:11:29.780
pawan: Yeah, I can go for lighthouse.

78
00:11:30.759 --> 00:11:45.849
pawan: Yeah, we had a bunch of sync issues initially, like Barnabas mentioned. And some issues with updating the Cdc values, the Cdc values thing has been fixed the sync issues we have started fixing them.

79
00:11:46.180 --> 00:11:53.809
pawan: But yeah, I think like, in part of fixing them. It was like we figured that

80
00:11:53.910 --> 00:12:00.569
pawan: the some of the issues were related to some clients giving us

81
00:12:01.239 --> 00:12:12.699
pawan: like when we requested them for call columns with data columns by range request. They were sending us empty responses when they did not have the data.

82
00:12:12.900 --> 00:12:14.280
pawan: which is like,

83
00:12:15.330 --> 00:12:27.089
pawan: sort of malicious behavior, because once we received valid blocks for that range. But we did not receive valid columns for that range, and we tried to

84
00:12:27.310 --> 00:12:42.624
pawan: couple those 2 together. There was an issue, basically, because the columns were invalid at that point. So it was good sort of it was almost sort of like a malicious test case where

85
00:12:43.630 --> 00:12:49.540
pawan: peers were returning us invalid values. And we had to recover from that. So

86
00:12:49.670 --> 00:13:14.159
pawan: we had. We basically changed our sync to accommodate for that where we downscore peers that don't return us correct data column by range values. So once we started doing that, and we eventually started down scoring and dropping those peers. Our sync has improved, but we still have, like some stuff to do on sync. So

87
00:13:14.310 --> 00:13:19.270
pawan: like when I when I was testing this, the clients that I noticed

88
00:13:19.690 --> 00:13:23.460
pawan: where not returning values, sometimes the numbers.

89
00:13:24.060 --> 00:13:26.770
pawan: sometimes teku and grandine as well.

90
00:13:27.160 --> 00:13:28.170
pawan: So

91
00:13:28.610 --> 00:13:36.980
pawan: yeah, I think this was like a good test for us as well, because we are sort of handling the malicious case now and able to recover from it.

92
00:13:37.260 --> 00:13:44.280
pawan: So yeah, just letting other clients know as well that they are returning

93
00:13:44.760 --> 00:13:47.899
pawan: empty values when they shouldn't be.

94
00:13:52.200 --> 00:13:56.310
pawan: Yeah. And we are continuing on improving sync at this point.

95
00:14:00.130 --> 00:14:12.289
Mario Vega: Thank you. A couple of things on the spec side. Do we need any updates? Do you have any any? This consideration of returning malicious columns in the spec. Does everybody know.

96
00:14:14.810 --> 00:14:16.359
pawan: So sorry. What do you mean?

97
00:14:16.540 --> 00:14:18.859
Mario Vega: Yeah, aspect test is what I mean. Yep.

98
00:14:18.860 --> 00:14:22.100
pawan: Oh, okay, I think it's hard to have

99
00:14:22.620 --> 00:14:44.090
pawan: spec tests for it, because, like, there is no set way to recover from this like at least on lighthouse. We basically eventually downscore the peers and eventually end up banning them. So I think this sort of case would be hard to test on a spec test, but I'm not sure.

100
00:14:44.309 --> 00:14:49.139
Justin Traglia: I agree I don't. I don't think we have a spec test for this, and I don't really know how we would.

101
00:14:54.990 --> 00:15:05.150
Mario Vega: Cool. Thanks. Oh, okay, then, on the on the side of the clients that we're returning this invalid responses, I think you, said Nimbus and Grandine and Teku.

102
00:15:05.420 --> 00:15:09.170
Mario Vega: Is there any stance on whether they should?

103
00:15:09.270 --> 00:15:14.359
Mario Vega: I don't think they should be returning this. But is there any comments on those clients. Maybe there's a

104
00:15:14.888 --> 00:15:17.439
Mario Vega: a reason why they were running like this.

105
00:15:17.890 --> 00:15:30.559
pawan: And and like just to note also that some of this, like, I'm not completely sure that the other clients were also wrong in some of this points, because we could have been requesting

106
00:15:32.470 --> 00:15:35.503
pawan: data columns per range for

107
00:15:36.220 --> 00:15:46.960
pawan: for a range that is, before their earliest available slot. But like some of the some of the peer ids that I manually checked.

108
00:15:47.230 --> 00:16:01.029
pawan: those did have like a earliest available slot like we were making a request for some for a range that was after the earliest available slot, so like it could be an issue on lighthouse side as well. But like this is just

109
00:16:01.310 --> 00:16:07.270
pawan: very rough manual testing. So just noting that as well.

110
00:16:09.250 --> 00:16:12.970
Mario Vega: Got it. Thank you. Okay.

111
00:16:13.750 --> 00:16:20.969
Mario Vega: jumping onto there. There's a comment on the chat by Barnabas about the backfill implementation.

112
00:16:21.540 --> 00:16:23.619
Mario Vega: Do we want to go into that topic.

113
00:16:27.590 --> 00:16:30.649
Mario Vega: Any any anybody, any comments from the clients?

114
00:16:31.800 --> 00:16:33.220
Mario Vega: About backfill?

115
00:16:33.940 --> 00:16:36.349
Mario Vega: Or if you have more context, paranounce that you want to add.

116
00:16:37.350 --> 00:16:39.650
Barnabas: I think everybody knows what I'm talking about.

117
00:16:41.180 --> 00:16:44.129
Manu: For prisma still in progress, not yet done.

118
00:16:46.270 --> 00:16:48.090
pawan: Yeah. Same for lighthouses.

119
00:16:50.430 --> 00:16:51.720
MatthewKeil: Same for lodestar.

120
00:17:01.810 --> 00:17:04.740
Mario Vega: Teku and Nimbus. Any updates.

121
00:17:09.740 --> 00:17:17.900
Mario Vega: And one question from baritosh is whether there's any blockers on implementation that you have found so far, or it's just mainly

122
00:17:18.099 --> 00:17:19.660
Mario Vega: time that is required.

123
00:17:20.430 --> 00:17:22.180
pawan: Think for lighthouse. We

124
00:17:23.339 --> 00:17:39.650
pawan: yeah. But I think for lighthouse. We had to make some changes in the database schema. Also to sort of introduce the earliest available slot and continuously update it to be able to send it to peers. So

125
00:17:39.820 --> 00:17:50.370
pawan: like we had to get that done 1st before actually doing the backfill. So that took a little bit of time. But I think this week we are focusing on the actual backfill implementation.

126
00:17:50.670 --> 00:17:52.389
pawan: hoping to get it done soon.

127
00:17:56.930 --> 00:18:05.599
MatthewKeil: Yeah, for us. It was just the complexity of getting a debug for the Devnet but we'll try to attempt it, I would guess probably next week. I don't think we'll get to it this week.

128
00:18:10.490 --> 00:18:18.119
Manu: Prism. I don't know. I ask internally to the team. I will get back to you as soon as I have a

129
00:18:18.220 --> 00:18:19.593
Manu: don't swear.

130
00:18:22.020 --> 00:18:22.790
Mario Vega: Thank you.

131
00:18:26.429 --> 00:18:32.620
Mario Vega: From the other teams. Any updates, if not, that's okay. We can follow up on the next call

132
00:18:32.910 --> 00:18:33.720
Mario Vega: alright.

133
00:18:39.680 --> 00:18:43.282
Mario Vega: Any other topics on Devnet 2 that have to be touched.

134
00:18:44.210 --> 00:18:53.599
Mario Vega: mainly asking because whether we want to start asking whether we want to schedule them in the tree, but I don't. I don't feel that's the case.

135
00:18:54.380 --> 00:18:58.560
Mario Vega: Barnabas, do you have any opinion on the planetary or.

136
00:18:58.850 --> 00:18:59.520
Barnabas: I've shown you

137
00:18:59.520 --> 00:19:06.830
Barnabas: we need. I I think we should have a very stable devnet 2, before we even consider scheduling definitely.

138
00:19:08.440 --> 00:19:15.859
Barnabas: There's so many bugs to iron out and jumping on to definitely right now would be bad, in my opinion.

139
00:19:17.860 --> 00:19:24.990
Parithosh Jayanthi: I guess at that point. Did we actually fix the bugs in Devnet, or did we patch them with validator changes.

140
00:19:26.390 --> 00:19:29.769
Barnabas: It's all patched. None of them are fixed.

141
00:19:31.670 --> 00:19:34.699
Parithosh Jayanthi: Do we have a look what bugs need fixing them.

142
00:19:38.670 --> 00:19:45.620
Barnabas: That's the thing that Manu mentioned that during finality he could not reproduce the bug.

143
00:19:45.960 --> 00:19:48.499
Barnabas: So we're gonna need to do another non priority test.

144
00:19:51.350 --> 00:19:52.480
Parithosh Jayanthi: Okay. Sounds good.

145
00:19:56.590 --> 00:20:13.600
Mario Vega: All right. Thanks, and maybe it's time to bring another topic that was brought up on Acde, which is the 4 Kd issues. I believe, right? So we had this discussion on Acde that we wanted to introduce eap 7,910.

146
00:20:14.170 --> 00:20:17.430
Mario Vega: I'm gonna link it in the in the chat.

147
00:20:17.970 --> 00:20:31.639
Mario Vega: And basically, this is it underscore, configure, endpoint? Thank you. Do. We have an update on that from the teams? And I can, I can start with with testing side. We have

148
00:20:31.800 --> 00:20:34.340
Mario Vega: a new command to test this.

149
00:20:34.630 --> 00:20:51.020
Mario Vega: Basically, we're just lacking the configuration now. But this is this is something that we have to address with the Itband Ops team. But this is simple enough, but the main idea is that we are going to be testing this for all testnets and devnets inside of East.

150
00:20:51.320 --> 00:20:57.039
Mario Vega: And the main problem that I notice while implementing this on.

151
00:20:57.660 --> 00:21:03.460
Mario Vega: on, on east is that it doesn't include the fork. Id, if I understand correctly.

152
00:21:03.660 --> 00:21:08.110
Mario Vega: and I think this was the culprit from from the issue that we found on acde

153
00:21:11.250 --> 00:21:19.569
Mario Vega: So with that in mind. What's the status on the teams, and opinion also on on the inclusion of this eap?

154
00:21:20.480 --> 00:21:22.530
Mario Vega: Does anybody have time to implement it?

155
00:21:25.330 --> 00:21:28.329
Barnabas: Could we actually add fork id. To 79, 10.

156
00:21:31.800 --> 00:21:43.279
Mario Vega: I mean, I think it should be a simple change. Maybe either add it to either underscore config or add another endpoint, but I don't have a preference over either. It's just a matter of how easy.

157
00:21:43.280 --> 00:21:45.079
Barnabas: Why would we need a different endpoint.

158
00:21:45.080 --> 00:21:52.700
Mario Vega: Yeah, I'm not sure it's just it's just just an idea. Yeah.

159
00:21:53.800 --> 00:22:05.929
Barnabas: I personally feel like it. Config would be the perfect place for fork ids as well. So I would just extend the 79, 10 with a new field for fork ids, and just list it as a as an array.

160
00:22:14.300 --> 00:22:18.289
Mario Vega: And one comment from Besu is that the

161
00:22:18.450 --> 00:22:24.760
Mario Vega: current hash in eap is the 4 Kd. I'm not sure to be honest. Does anybody have the precise answer to that

162
00:22:25.630 --> 00:22:28.919
Mario Vega: is current cache in the eap, the same as 4 kd.

163
00:22:33.860 --> 00:22:39.919
Mario Vega: I don't think it is because it includes the precompiles, which I don't think 4 Kd. Ever considered.

164
00:22:42.340 --> 00:22:45.640
Mario Vega: My guess is that it's not, but anybody else has.

165
00:22:46.060 --> 00:22:48.780
lightclient: I went fork id is the same as what.

166
00:22:50.460 --> 00:22:56.340
Mario Vega: There's a there's a configuration hash in eap 79, 10 hit config response.

167
00:22:57.810 --> 00:23:00.100
Mario Vega: But I don't think it matches for Kd.

168
00:23:00.680 --> 00:23:02.530
Mario Vega: So the idea is, you have.

169
00:23:02.910 --> 00:23:07.350
lightclient: Yeah, I'm not familiar with that one. But fork Id definitely doesn't have the precompile.

170
00:23:09.060 --> 00:23:14.289
lightclient: All it does is accumulate the fork block number in the genesis hash.

171
00:23:16.960 --> 00:23:23.980
Mario Vega: So if you want to also verify fork id using it underscore config, we need to add another field right.

172
00:23:28.970 --> 00:23:33.619
lightclient: I'm not sure what information is provided by that endpoint.

173
00:23:38.510 --> 00:23:42.450
Mario Vega: Okay? And Gabriel mentioned that they they cannot.

174
00:23:42.630 --> 00:23:45.139
Mario Vega: The 4 Kd change to the eap.

175
00:23:45.260 --> 00:23:46.020
Mario Vega: Awesome.

176
00:23:48.300 --> 00:23:54.080
Mario Vega: Other clients. Does any? Does anybody else started to implement it. Underscore config.

177
00:24:01.740 --> 00:24:07.909
Mario Vega: Never mind, get Aragon, please.

178
00:24:07.910 --> 00:24:08.650
FLCL: This week.

179
00:24:10.776 --> 00:24:17.209
milen | Erigon: Yeah, we added this in Aragon today, actually. But we will need to add the fork id in there as well.

180
00:24:23.600 --> 00:24:24.339
Mario Vega: Thank you.

181
00:24:24.440 --> 00:24:30.699
Mario Vega: I will wait until for adding 4 Kd, until we have the eap change. Just so we have the same format.

182
00:24:32.560 --> 00:24:33.330
Mario Vega: Yep.

183
00:24:37.550 --> 00:24:46.890
Mario Vega: Okaysu, never mind. Already have something does get, have any updates on on this endpoint?

184
00:24:48.010 --> 00:24:49.950
Mario Vega: Yeah, yeah, thank you.

185
00:24:52.720 --> 00:24:54.529
lightclient: Have not implemented it.

186
00:25:00.030 --> 00:25:01.100
Mario Vega: Okay, thanks.

187
00:25:02.170 --> 00:25:04.220
Mario Vega: Who am I missing anyone from? Reth?

188
00:25:14.360 --> 00:25:15.380
Mario Vega: Thank you.

189
00:25:15.590 --> 00:25:17.769
Mario Vega: Alright. So it seems like,

190
00:25:19.780 --> 00:25:24.409
Mario Vega: most of the teams are planning to implement this week, and we're gonna add the fork id

191
00:25:24.520 --> 00:25:32.120
Mario Vega: into into the same endpoint, and we'll have a and best. We'll have a Pr for the eip.

192
00:25:34.050 --> 00:25:34.820
Mario Vega: Cool.

193
00:25:35.370 --> 00:25:36.100
Mario Vega: Okay.

194
00:25:36.100 --> 00:25:36.710
Anders Kristansen: That's right.

195
00:25:48.150 --> 00:25:53.550
Mario Vega: I think we can move on. And the next issue, just give me one second.

196
00:25:54.100 --> 00:26:05.899
Mario Vega: All right. Yeah. So the next point. And we touched upon this last week. So I just brought it up to this week is the gas limit testing updates. Does anybody know about the benchmark updates that we had in the previous week

197
00:26:07.310 --> 00:26:08.840
Mario Vega: that could give an update.

198
00:26:12.179 --> 00:26:12.500
Marcin Sobczak: Bye.

199
00:26:12.500 --> 00:26:14.879
Mario Vega: See Joachim. And yeah, okay, thank you.

200
00:26:15.700 --> 00:26:22.080
Marcin Sobczak: Yes, I can say about our results from our gas benchmark

201
00:26:22.340 --> 00:26:48.886
Marcin Sobczak: tool. And generally, we have, like the bottleneck is modex. There is a proposal to to increase the pricing aggressively 3 times. But there is still one edge case scenario for gaff and argon it's with based on modulo equal 22 Byte and exponent

202
00:26:49.590 --> 00:26:51.500
Marcin Sobczak: 64 bits.

203
00:26:51.640 --> 00:27:17.234
Marcin Sobczak: And from what I know, clients are work working to optimize it because there is a strange issue. And we have scenario with exponent, 64 bits, which is slow and with 65 bits it's like 50% faster. So it's probably some implementation detail which should be optimizable.

204
00:27:18.390 --> 00:27:26.430
Marcin Sobczak: and except of modex, we we found that our test case for

205
00:27:27.694 --> 00:27:57.070
Marcin Sobczak: point evaluation precompile were broken Alexi delivered me like the valid input data for it. And right now we see that all the clients are operating at about 32 megas per second, which is like close to minimal requirement for for increasing that limit to 100 million.

206
00:27:57.070 --> 00:28:13.844
Marcin Sobczak: So it wouldn't be a blocker, but it would, it will be for anything above 100 million. And there is also probably some issue with Ref. But we are not sure it's

207
00:28:14.818 --> 00:28:39.651
Marcin Sobczak: like. On our dashboard they have only 9 megas per second. But when we took a look on the raw scenarios. It's like on August limit, except 60 million, and they are performing like other clients. And there is must be some edge case at exactly 60 million gas limit where they're slow. And

208
00:28:40.090 --> 00:28:46.089
Marcin Sobczak: yes, it's reported to to Rev. Guys. And they are taking a look and

209
00:28:46.580 --> 00:29:05.659
Marcin Sobczak: and probably for Fusaka we like. There is nothing to do about this pre compile. But we need to be conscious that going above 100 million gas limit it will be a blocker for going above it

210
00:29:05.860 --> 00:29:09.590
Marcin Sobczak: before the the next fork.

211
00:29:10.238 --> 00:29:16.520
Marcin Sobczak: And I think it's it's all about the updates from agony testing.

212
00:29:18.880 --> 00:29:43.260
Parithosh Jayanthi: Yeah, maybe to continue we also have the bloat net effort. So we have about one and a half times the state of Mainnet, and I'm working on setting up a public network there. And once we have that, we'll run a bunch of sync tests and a few tests like with Zen contract, so we can get a baseline on how it look like look like with one and a half times the state of Mainnet.

213
00:29:43.390 --> 00:29:54.579
Parithosh Jayanthi: And once that's there, we already have the spamming tools in place to continue increasing the state, and we can observe how stuff degrades over time. But that should be ready, probably in the next day.

214
00:29:58.650 --> 00:30:06.549
Mario Vega: Thank you. I see there are a couple of open prs for repricings. I shared one in the in the chat.

215
00:30:06.710 --> 00:30:09.139
Mario Vega: Does this need to be merged for Demo 3,

216
00:30:16.571 --> 00:30:20.860
Mario Vega: I think, is your Pr or, yeah, modex.

217
00:30:21.800 --> 00:30:29.683
Marcin Sobczak: Yes, so probably if if we don't want to

218
00:30:30.520 --> 00:30:52.934
Marcin Sobczak: So if Kevin probably are not able to optimize enough without changing libraries, and we don't want to like it's not probably not good for for in general to to use the same libraries in our clients, so if they will keep they they once probably they're not able to optimize

219
00:30:53.350 --> 00:31:08.459
Marcin Sobczak: enough to not be a blocker for 100 million. So in this case we just need to. To to increase the general price prices, and in the current shape of this eap only till

220
00:31:08.460 --> 00:31:28.970
Marcin Sobczak: the 8% of the calls are affected. If you want to to increase the pricing, then 100% of calls would be affected anyway. So if we if we do it, then, in my opinion, we should do it like significantly so. This Pr is proposing like free xing it.

221
00:31:29.520 --> 00:31:44.789
Marcin Sobczak: And but there is still this one at case issue. Which they are taking a look at. Because it will be still too slow even with reacting. And there is like not not a good way actually to

222
00:31:45.530 --> 00:31:50.010
Marcin Sobczak: to solve it on, on like pricing

223
00:31:50.910 --> 00:32:09.730
Marcin Sobczak: area. We would need to to increase like minimal gas to to 1,500 or something like that. So it would would be great to to take to take a look at it and and try to optimize because it should be optimizable.

224
00:32:15.920 --> 00:32:25.109
Marcin Sobczak: Yes, and I think that's it. Do. Do you have some more more like more questions about it, or some specific areas.

225
00:32:25.110 --> 00:32:30.750
Mario Vega: No, not really. I just wanted to move the conversation on on whether we have to merge or not. Marius.

226
00:32:31.430 --> 00:32:35.830
Marius: Yeah, I can. I can speak on the problem, is that

227
00:32:36.350 --> 00:32:40.570
Marius: But yes, it's optimizable. The problem is that it's

228
00:32:40.900 --> 00:32:47.100
Marius: that we are depending on the Go Standard Library. So we would need to optimize the Go Standard Library

229
00:32:48.395 --> 00:32:51.789
Marius: and the problem with that is that

230
00:32:52.206 --> 00:32:56.320
Marius: yes, we can do it, and we've done it before, like we we

231
00:32:56.500 --> 00:33:01.239
Marius: upstream. Some changes to the ghost in that library, but it takes us like.

232
00:33:01.690 --> 00:33:07.989
Marius: yeah, kind of 2 releases of the Standard library for this to trickle down into the client.

233
00:33:08.120 --> 00:33:15.170
Marius: And so, yeah, it's it's it will take a long time until this.

234
00:33:18.534 --> 00:33:31.070
Parithosh Jayanthi: Just also surfacing a discussion. I think we already agreed to merge this pr in as per acd last week, so is there any blocker to go ahead with doing that.

235
00:33:31.400 --> 00:33:41.780
Parithosh Jayanthi: I think we wanted to wait to see if we can do some outreach and make sure that no one's affected, and if that is true, then we would go ahead with merging right.

236
00:33:44.060 --> 00:34:04.953
Marcin Sobczak: Yeah. So from my side, we can merge it as it is. I generally need to update or the descriptions, and, like the other parts of the of this eap. But yes, like it will not affect like the the equation. Just the cosmetic

237
00:34:05.380 --> 00:34:25.156
Marcin Sobczak: side of of this. Pr, so I I will do it like, you know, I can do it in another one. And like one last problem with this reacting is that we we are. We know that we have one case which is still too slow even after that. And yes, would be great to

238
00:34:25.510 --> 00:34:30.920
Parithosh Jayanthi: Just to confirm, but it'll it's still just too slow for going over 100 million right.

239
00:34:32.219 --> 00:34:46.489
Marcin Sobczak: Yes, I don't remember the exact number but there is a scenario scenario which will be below 30 mega gas per second for sure.

240
00:34:47.024 --> 00:35:05.960
Marcin Sobczak: It's right right now, like, without free acting. It's at 18 mega per second. Okay, I will do a quick calculation, and I can, I can give you the exact number in a moment, just don't want to to block the conversation right now to calculate it.

241
00:35:06.230 --> 00:35:10.330
Parithosh Jayanthi: No worries. We can also do it. Offline later, if you want. That's perfectly fine.

242
00:35:12.410 --> 00:35:29.910
Mario Vega: Yeah, I think Tim mentioned that the feedback he got is minimal impact. So we should be ready to go on merging this. So if you can just put together the change that you want to do the cosmetic changes, and we can move it from draft to open, so we can review it and merge it.

243
00:35:30.030 --> 00:35:31.719
Mario Vega: That would be great. Yeah.

244
00:35:33.290 --> 00:35:34.429
Marcin Sobczak: Effort can do it.

245
00:35:35.950 --> 00:35:36.779
Mario Vega: All right.

246
00:35:36.940 --> 00:35:40.729
Mario Vega: Awesome. Thank you. Good.

247
00:35:42.810 --> 00:35:49.450
Mario Vega: Any other discussions on gas that were left out from Acd that we have to touch today.

248
00:36:05.520 --> 00:36:08.459
Mario Vega: If not, we can move on to the next topic.

249
00:36:10.670 --> 00:36:15.909
Mario Vega: Which is Peer Das. And there's just one comment on

250
00:36:16.180 --> 00:36:33.929
Mario Vega: on the on the issue that is worth discussing whether the Cls will be trusting blobs from the El or not, and reading from the comment in the issue is that lighthouse and nimbus currently they do verify the blobs that come from the Els. But Prism and Teku.

251
00:36:34.497 --> 00:36:35.840
Mario Vega: They trust them.

252
00:36:36.000 --> 00:36:45.399
Mario Vega: and there's no response from both star. So is there anything that we have to discuss there? Do we have to like reach upon agreement whether this has to

253
00:36:45.660 --> 00:36:54.489
Mario Vega: happen the same way across all clients? Or is this something that is okay. If it's like implementation details. Francesco.

254
00:36:55.790 --> 00:37:17.709
Francesco: Yeah. So we definitely don't need to reach agreement. The reason we're talking about it is just that it's kind of a it makes a big difference to to decide to trust them or not, because, if you like, when you're building a block, let's say you get 50 blobs, or whatever. Now you have to verify all of them in the critical path of building a block and same thing for forget blobs.

255
00:37:17.976 --> 00:37:33.140
Francesco: So it's kind of I don't know, like a few 100 ms extra that you don't really need there. So I think it would be best if we just agreed that there's no reason to be to be doing this. And all clients just drop this extra verification, because Al has already verified all these things.

256
00:37:33.458 --> 00:37:55.719
Francesco: And yeah, like the yell could also give you an invalid payload. So it's which you cannot verify. So it's it's not that, really. This is protecting you even from a malicious yell, if that's something that we're worried about for some reason. So yeah, on the side of like, do we need to all have the same implementation? No, but I think it would be best to just not have this verification. I think it's it's quite expensive.

257
00:37:57.750 --> 00:37:58.750
Mario Vega: Yeah. Pardon.

258
00:37:59.810 --> 00:38:20.490
Parithosh Jayanthi: Yeah, maybe just to follow on that. I also didn't particularly get. Why, Cls are reverifying. To begin with. And I wanted to understand if there was some particular reason, mainly because I also agree. The El in general, like in general, the engine Api has a trusted assumption like you expect that the El behaves non maliciously.

259
00:38:24.500 --> 00:38:43.849
pawan: Yeah, I think for us, like, the engine get blobs method like verifying stuff on that like, at least get get blobs. v. 1. We mainly did it because it wasn't that expensive, at least with 6 blobs, whatever we have right now.

260
00:38:44.300 --> 00:38:48.410
pawan: But yeah, like others pointed out with the

261
00:38:48.740 --> 00:38:55.010
pawan: with pdos, it will get more expensive, and it doesn't make sense to do it. But like for the

262
00:38:55.260 --> 00:38:56.090
pawan: main

263
00:38:57.150 --> 00:39:12.010
pawan: block production flow, I think the reason we do it is because we want to verify Kcg verify blob blobs that we receive from the builder. It is not mainly for local block production, but it is for verifying

264
00:39:12.430 --> 00:39:13.750
pawan: builder blobs.

265
00:39:15.470 --> 00:39:29.839
pawan: But like, because both of the flows are like the local block production and the builder flow are sort of interlinked, and it wasn't as expensive before peer does. We just did it for the local block production flow as well.

266
00:39:30.140 --> 00:39:34.569
pawan: But we would also probably avoid doing that for paid us.

267
00:39:35.320 --> 00:39:36.310
Mario Vega: Francisco.

268
00:39:37.771 --> 00:39:53.629
Francesco: Yeah. Same same comment as Barnabas in the chat. I don't really get even in the builder flow. Why, it would be important to to verify them again, for the same reason that the builder could also just give you an invalid payload. And I mean, you literally don't even have the payload, so you don't even have a chance to verify it.

269
00:39:55.940 --> 00:39:58.079
pawan: Yeah, that is a good point.

270
00:39:59.480 --> 00:40:03.050
pawan: Yeah, I think we'll talk a little bit more about this internally.

271
00:40:04.230 --> 00:40:09.639
pawan: Yeah, that's a good point that like we cannot verify the payload at all, so it doesn't make that much sense.

272
00:40:19.170 --> 00:40:26.790
Mario Vega: Cool. Thank you. Okay, I think that's that's all. Unless there's comments from Nimbus, who also trust the blobs.

273
00:40:30.490 --> 00:40:36.609
Mario Vega: If not, Sunnyside has comment. They wanted to add,

274
00:40:39.620 --> 00:40:46.060
Mario Vega: standardized el metrics across Els for Demon 3. Would you care to expand on this?

275
00:40:47.980 --> 00:40:54.480
J Sunnyside Labs: Yeah. Hi, so we have already been discussing for a while while back. And

276
00:40:55.177 --> 00:41:02.809
J Sunnyside Labs: we now got ethereum repository for it, and then I just made a Pr for

277
00:41:03.070 --> 00:41:07.080
J Sunnyside Labs: get blob speed to metrics. So if you guys

278
00:41:07.360 --> 00:41:16.400
J Sunnyside Labs: have some time, then please have a look, and hopefully we can get it done by Devnet 3. Then we can get get some useful data for it.

279
00:41:24.390 --> 00:41:25.150
Mario Vega: Thank you.

280
00:41:30.210 --> 00:41:32.620
Mario Vega: Alright. Cool.

281
00:41:33.110 --> 00:41:37.680
Mario Vega: Any other comments on Peerdas updates.

282
00:41:41.770 --> 00:41:45.580
Mario Vega: They want to touch upon this this this call.

283
00:41:58.990 --> 00:42:09.658
Mario Vega: All right. If not. There's 2 last comments on the issue that might be important to take. Take a look. So the 1st one is by Spencer.

284
00:42:10.470 --> 00:42:14.270
Mario Vega: he's proposing to increase the gas from Clc. Of growth

285
00:42:15.384 --> 00:42:27.739
Mario Vega: from 3 to 5 or 8. But he mentions there's no no current benchmarks. But yeah, if you want to do you want to raise comments on this, or expand on the idea.

286
00:42:29.570 --> 00:42:40.269
spencer-tb: Hey, guys? Yeah, I guess. I just, I just figured because we don't have benchmarks for Cov yet, and because we probably want to finalize it for sake spec very quickly.

287
00:42:40.500 --> 00:42:46.479
spencer-tb: and it might be nice, or at least safe, just to increase the gas cost from 3 to

288
00:42:46.650 --> 00:42:48.560
spencer-tb: slightly higher and

289
00:42:48.920 --> 00:42:54.779
spencer-tb: and kind of like with the our kind of like with our one, we can always reduce it again, and

290
00:42:55.180 --> 00:42:56.130
spencer-tb: Amsterdam.

291
00:43:01.220 --> 00:43:04.379
Mario Vega: I think, yeah, okay, thank you. I think the

292
00:43:05.209 --> 00:43:10.210
Mario Vega: appropriate way would be if we can raise an appear in the eip

293
00:43:10.650 --> 00:43:13.550
Mario Vega: for it to get get approved and merge.

294
00:43:13.760 --> 00:43:15.809
Mario Vega: Do you want to take care of that? Or.

295
00:43:18.270 --> 00:43:31.729
spencer-tb: I guess. If everyone is happy with that, or if anyone doesn't want to do that, then yeah, I mean, we can also wait, I guess, some days and get benchmarks, but just to finalize for cycle faster. This would be the only the alternative.

296
00:43:34.580 --> 00:43:35.969
Mario Vega: Thank you. Ben.

297
00:43:37.725 --> 00:43:38.190
Ben Adams: I

298
00:43:38.590 --> 00:43:45.720
Ben Adams: I don't. I don't have any objections if people want to go for it. But also I just like to highlight that

299
00:43:45.970 --> 00:43:49.560
Ben Adams: unlike. Say so at the moment. It's priced the same as add.

300
00:43:50.130 --> 00:43:59.370
Ben Adams: but it's a single stack operation, so only pops one value, add pops 2, and

301
00:44:00.470 --> 00:44:05.459
Ben Adams: add is then multiplier, quite complex instructions, and it's fairly simple.

302
00:44:06.890 --> 00:44:11.730
Ben Adams: But I don't wanna block and increase it. That's what people want to go for.

303
00:44:15.230 --> 00:44:19.059
spencer-tb: My gauge is that it will be well, yeah.

304
00:44:19.300 --> 00:44:24.850
spencer-tb: it'd be be much more efficient than that in general. But yeah.

305
00:44:25.920 --> 00:44:28.422
spencer-tb: I just it. It feels safer. But

306
00:44:29.470 --> 00:44:32.030
spencer-tb: yeah, if if there's no objections, I can open the car.

307
00:44:34.130 --> 00:44:45.000
Mario Vega: Yeah, I think barnabas mentioned that it should be a better way to go if we open a Pr and then proceed to add benchmarks to it. So I think that's that's a good way to go.

308
00:44:49.910 --> 00:45:00.650
Mario Vega: So basically open a Pr in the eap and then just comment on it with the benchmarks. We wait for approvals, and then we can see if if we get merged.

309
00:45:02.170 --> 00:45:06.116
spencer-tb: No sounds good. Can I just jump in really quick as well? And I guess

310
00:45:06.790 --> 00:45:12.179
spencer-tb: suggest adding, like benchmarking requirements to the process for eips.

311
00:45:12.360 --> 00:45:16.559
spencer-tb: and before the C. 5, because I guess the we've had our one

312
00:45:16.880 --> 00:45:23.772
spencer-tb: and also Clc. When you upload a new precompile to me, it makes sense that we have some kind of benchmarking requirements before we

313
00:45:24.800 --> 00:45:27.599
spencer-tb: add new precompiles or uploads in the future.

314
00:45:32.960 --> 00:45:34.957
Mario Vega: Yeah, this is a great suggestion.

315
00:45:36.190 --> 00:45:40.582
Mario Vega: I I guess the place where we can put that is in the

316
00:45:41.460 --> 00:45:50.767
Mario Vega: yeah. Tim mentions it before. Sfi, I think I think I agree to be honest. We have a better benchmark infrastructure right now that we than we have

317
00:45:51.620 --> 00:45:58.730
Mario Vega: a few months ago. So I think it should be it should be. It should be safer to to impose this this requirement.

318
00:45:59.355 --> 00:46:04.099
Mario Vega: And Tim mentions that open a Pr to 77, 23

319
00:46:04.330 --> 00:46:12.039
Mario Vega: aip which basically jails. Sorry specifies the the steps to follow before Sfi and something. So yeah.

320
00:46:12.671 --> 00:46:20.240
Mario Vega: yeah, I think we should, we should definitely open up here for this and and mention that we requires benchmark benchmarking to be done before Sfi

321
00:46:20.400 --> 00:46:21.410
Mario Vega: and Yay.

322
00:46:28.140 --> 00:46:34.510
Mario Vega: yeah, if you want to go ahead. I think it should be a simple, simple peer. Yeah, cool.

323
00:46:36.050 --> 00:46:41.000
Mario Vega: Okay. Thanks. Great. And one last comment from Ben.

324
00:46:41.451 --> 00:46:48.520
Mario Vega: do you want to make a case for for this on your comment of eap, 7,983.

325
00:46:50.046 --> 00:46:56.320
Ben Adams: Yeah. So there's a proposed. There's a there's a new eip from Tony to

326
00:46:56.710 --> 00:47:02.650
Ben Adams: change the transaction cap to 16 million rather than 30 million.

327
00:47:03.820 --> 00:47:05.870
Ben Adams: It seems to make sense to

328
00:47:07.880 --> 00:47:18.920
Ben Adams: and bring that forward to Futaka rather than no wait and wait an entire work to bring that.

329
00:47:26.060 --> 00:47:28.770
Mario Vega: I shared the pr in the chat.

330
00:47:31.140 --> 00:47:37.289
Ben Adams: Yeah. And I, I mean that also resolves issues with, for instance, the Zen contract

331
00:47:37.810 --> 00:47:38.789
Ben Adams: that we were looking at.

332
00:47:41.890 --> 00:47:53.600
Mario Vega: Yeah, thanks. I think I guess my main concern with this is that this is basically a new aip, and I don't know how late in the process, are we? I I think, pretty relates or.

333
00:47:53.820 --> 00:47:59.900
Ben Adams: I've I propose changing it into modification of the current one.

334
00:48:00.730 --> 00:48:04.640
Ben Adams: because we're introducing the we're already introducing the transaction cap.

335
00:48:05.460 --> 00:48:08.859
Ben Adams: and there was discussion whether it should be lower at the time.

336
00:48:09.110 --> 00:48:14.260
Ben Adams: But since we didn't have any analysis.

337
00:48:14.750 --> 00:48:17.190
Ben Adams: how much we could lower it to.

338
00:48:24.570 --> 00:48:30.529
Mario Vega: I see. Is there an a Pr. Open for this specific one for eap? 78, 25.

339
00:48:33.920 --> 00:48:34.899
Ben Adams: Yeah, put it in.

340
00:48:34.900 --> 00:48:36.489
Mario Vega: Yeah, yeah, okay.

341
00:48:37.470 --> 00:48:42.130
Ben Adams: Yeah. So at the moment we, we have the transaction cap going into Fussaka at 30 billion.

342
00:48:45.930 --> 00:48:48.580
Ben Adams: Yeah. And then, rather than

343
00:48:49.000 --> 00:48:51.909
Ben Adams: have a new eip cellar in the next fork.

344
00:48:52.320 --> 00:48:56.240
Ben Adams: We might as well, Laura in this world got it. Got it?

345
00:48:56.240 --> 00:48:57.910
Ben Adams: Change the existing one.

346
00:48:58.270 --> 00:49:12.780
Ahmad Bitar | Nethermind: It's it's just a constant change like we're introducing transaction gas limit cap already in this fork. So if we know that the cap that we're sitting in this fork is not the correct cap. Why wait until next fork?

347
00:49:13.990 --> 00:49:17.670
Ahmad Bitar | Nethermind: Like, if we are, gonna do it, let's do it right from the beginning.

348
00:49:23.350 --> 00:49:33.179
Mario Vega: Yeah. Makes sense makes sense. So the author of this pr, is Tony. I don't believe he's here. But it wouldn't. It would be nice to

349
00:49:33.560 --> 00:49:37.349
Mario Vega: to ping him to, in my my sense is that we.

350
00:49:37.350 --> 00:49:37.909
Toni Wahrstaetter: No, I'm here.

351
00:49:37.910 --> 00:49:43.430
Mario Vega: And just open a new oh, sorry, Tony! Do you want to expand on? Why, the new eap? And rather than.

352
00:49:44.250 --> 00:49:45.330
Toni Wahrstaetter: Yeah. So

353
00:49:45.650 --> 00:49:53.690
Toni Wahrstaetter: so I was creating this new Ap, just because I thought Fuzaka is already frozen and 7 MA. 25 might not get.

354
00:49:54.549 --> 00:49:59.609
Toni Wahrstaetter: Yeah. The gas limit kept low enough where we should get it to.

355
00:49:59.890 --> 00:50:06.370
Toni Wahrstaetter: It feels like for polarization, also for distributed proving. It might be beneficial to lower it even further.

356
00:50:06.940 --> 00:50:13.889
Toni Wahrstaetter: And I did some quick analysis. I have not published it yet, but basically, even if you lower it to 16 million.

357
00:50:14.230 --> 00:50:16.710
Toni Wahrstaetter: only 0 point 3%.

358
00:50:16.870 --> 00:50:19.569
Toni Wahrstaetter: The transactions will be affected.

359
00:50:19.750 --> 00:50:27.120
Toni Wahrstaetter: And 90% of them is Xen. So it's essentially yeah. Putting a cap on Xen.

360
00:50:31.160 --> 00:50:34.329
Mario Vega: Got it. Got it? Yeah, I think the

361
00:50:34.470 --> 00:50:40.400
Mario Vega: consensus seems to be that we want to make a Pr for 78, 25, instead of making a new eip.

362
00:50:40.940 --> 00:50:44.380
Mario Vega: Is that correct? Does anybody have any objections to that?

363
00:50:49.990 --> 00:50:56.339
Barnabas: My argument is that this is kind of like a repressing change. So it's not a significant

364
00:50:56.964 --> 00:51:03.570
Barnabas: protocol change. That's why I feel like this could still make it into Fussaka without any big issue.

365
00:51:08.270 --> 00:51:19.229
Ahmad Bitar | Nethermind: I remember Matt from Geth. Had issues with transaction cap as a whole, but I don't know if he would have an issue with lowering it even further.

366
00:51:19.830 --> 00:51:20.750
Ahmad Bitar | Nethermind: Matt.

367
00:51:22.360 --> 00:51:29.660
lightclient: Yeah, I mean, I think ultimately, my fear is something that's not happening on Mainnet today.

368
00:51:29.790 --> 00:51:39.890
lightclient: I wonder like what the trickle effect will be if L. Twos are adopting l. 1 directly where there's a lot more activity with accounts, abstraction bundling.

369
00:51:41.020 --> 00:51:43.970
lightclient: I mean, if this is what people want to do then.

370
00:51:44.340 --> 00:52:09.319
lightclient: obviously not going to stop. It seems all right. They can always split the transaction into multiple transactions. My only comment on this more broadly is that when we make changes, even though this is kind of a repricing, it's not an issue for clients to do. But when we make changes at this point in the development cycle. We don't really give the community any time to give feedback on this. And this is something that could be

371
00:52:09.870 --> 00:52:23.280
lightclient: pretty impactful to people. And yeah, you know, we've done this analysis. There's only a handful of transactions that are impacted. But there could be people who are building companies or projects based on this these assumptions. And so

372
00:52:23.740 --> 00:52:32.279
lightclient: if we make this change today, then there's only like maybe one month where there's someone could voice that this is going to impact them negatively.

373
00:52:32.980 --> 00:52:46.440
lightclient: That said, I don't think we should stop. I don't think we should avoid doing this. It's just something that we need to consider. It's not always that it's easy for us to do. It's also that it needs to be legible and accessible for the community to put feedback on.

374
00:52:56.850 --> 00:53:01.199
Mario Vega: Any response to that comment. I think it's reasonable.

375
00:53:03.033 --> 00:53:04.949
Mario Vega: Yeah. The the downturn effects.

376
00:53:05.470 --> 00:53:14.851
Ben Adams: I mean most most examples that we've we've looked at, including what was it? OP stack upgrades?

377
00:53:16.570 --> 00:53:20.029
Ben Adams: they can be split across multiple transactions.

378
00:53:21.430 --> 00:53:23.862
Ben Adams: I think it makes it messier because

379
00:53:25.350 --> 00:53:28.959
Ben Adams: I think IP stack needed about 9 million or something.

380
00:53:31.505 --> 00:53:36.249
Ben Adams: So it was sort of raised and discussed previously when we were

381
00:53:36.620 --> 00:53:41.540
Ben Adams: talking about lowering it initially, trying to find the the right value. And then we went with

382
00:53:42.590 --> 00:53:45.039
Ben Adams: leaving at 30 million. Because.

383
00:53:45.960 --> 00:53:51.029
Ben Adams: yeah, that was an urgency to find the value. And it seemed like, we'll just leave it.

384
00:53:53.136 --> 00:53:57.749
Ben Adams: However, with the issues it runs in

385
00:53:58.290 --> 00:54:01.670
Ben Adams: that we've discovered. If we want to go to higher gas limits.

386
00:54:01.890 --> 00:54:06.969
Ben Adams: and it's better to split the transactions that are dismissible. Anyway.

387
00:54:14.410 --> 00:54:15.150
Mario Vega: Okay?

388
00:54:16.630 --> 00:54:22.460
Mario Vega: So I think the consensus would be that we can go ahead and open the Pr.

389
00:54:23.246 --> 00:54:28.789
Mario Vega: To the to the original eap. Tony, is that is that is that okay for you.

390
00:54:29.360 --> 00:54:32.369
Mario Vega: Do you want to open the Pr, and then we can start the discussion there.

391
00:54:32.770 --> 00:54:34.070
Toni Wahrstaetter: Yeah, that's fine.

392
00:54:37.990 --> 00:54:38.660
Mario Vega: Cool.

393
00:54:40.030 --> 00:54:41.299
Mario Vega: Alright. Thank you.

394
00:54:43.380 --> 00:54:48.399
Mario Vega: Any any other comments any other topic that we should touch today?

395
00:54:50.130 --> 00:54:54.299
Marcin Sobczak: I will. I would like to say a bit more about modex. If I can.

396
00:54:55.500 --> 00:54:56.240
Mario Vega: Yeah, sure.

397
00:54:56.970 --> 00:55:01.749
Marcin Sobczak: So I did some rough estimation, and

398
00:55:02.320 --> 00:55:26.459
Marcin Sobczak: after 3 x in the price, our worst case should be at about 31 mega gas per second. So it would be like close to our minimum requirement for 100 million gas limit, but would be great to test test it instead of estimating so I would like to ask all your client teams

399
00:55:26.480 --> 00:55:37.979
Marcin Sobczak: to push this change to the performance modex the branches so we will see the results on the dashboard like the exact results, not estimations

400
00:55:41.660 --> 00:55:55.340
Marcin Sobczak: especially important for Jeff, and as like, it's most interesting how it will look on

401
00:55:55.520 --> 00:55:56.380
Marcin Sobczak: for them.

402
00:56:01.770 --> 00:56:02.500
Mario Vega: Thank you.

403
00:56:05.090 --> 00:56:06.969
Mario Vega: Any objections to this?

404
00:56:11.560 --> 00:56:16.159
Mario Vega: all right. Any other topics. Does. Anybody else wants to write raise today?

405
00:56:22.720 --> 00:56:28.009
Mario Vega: Cool. And Mario comments that Mario's comments, said he, will push the change as soon as possible.

406
00:56:28.660 --> 00:56:29.630
Mario Vega: All right, thank you.

407
00:56:31.120 --> 00:56:38.170
Mario Vega: Well, if nothing else, I think we can end the call here. Thank you. Everyone for joining, and yeah, have a good rest of the day.

408
00:56:39.410 --> 00:56:40.050
lightclient: Thanks.

409
00:56:41.520 --> 00:56:42.310
Toni Wahrstaetter: Thank you.

410
00:56:42.720 --> 00:56:44.720
Justin Traglia: Cheers. Bye, bye, everyone.

411
00:56:45.840 --> 00:56:46.690
Andrés: Bye.

